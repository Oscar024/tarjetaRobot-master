

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Fri Oct 06 06:32:40 2017

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	idataBANK0,global,class=CODE,delta=1
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    14                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    15                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    16                           	psect	text0,global,reloc=2,class=CODE,delta=1
    17                           	psect	text1,global,reloc=2,class=CODE,delta=1
    18                           	psect	text2,global,reloc=2,class=CODE,delta=1
    19                           	psect	text3,global,reloc=2,class=CODE,delta=1
    20                           	psect	text4,global,reloc=2,class=CODE,delta=1
    21                           	psect	text5,global,reloc=2,class=CODE,delta=1
    22                           	psect	text6,global,reloc=2,class=CODE,delta=1
    23                           	psect	text7,global,reloc=2,class=CODE,delta=1
    24                           	psect	text8,global,reloc=2,class=CODE,delta=1
    25                           	psect	text9,global,reloc=2,class=CODE,delta=1
    26                           	psect	text10,global,reloc=2,class=CODE,delta=1
    27                           	psect	text11,global,reloc=2,class=CODE,delta=1
    28                           	psect	text12,global,reloc=2,class=CODE,delta=1
    29                           	psect	text13,global,reloc=2,class=CODE,delta=1
    30                           	psect	text14,global,reloc=2,class=CODE,delta=1
    31                           	psect	text15,global,reloc=2,class=CODE,delta=1
    32                           	psect	text16,global,reloc=2,class=CODE,delta=1
    33                           	psect	text17,global,reloc=2,class=CODE,delta=1
    34                           	psect	text18,global,reloc=2,class=CODE,delta=1
    35                           	psect	text19,global,reloc=2,class=CODE,delta=1
    36                           	psect	text20,global,reloc=2,class=CODE,delta=1
    37                           	psect	text21,global,reloc=2,class=CODE,delta=1
    38                           	psect	text22,global,reloc=2,class=CODE,delta=1
    39                           	psect	text23,global,reloc=2,class=CODE,delta=1
    40                           	psect	text24,global,reloc=2,class=CODE,delta=1
    41                           	psect	text25,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	text27,global,reloc=2,class=CODE,delta=1
    44                           	psect	text28,global,reloc=2,class=CODE,delta=1
    45                           	psect	text29,global,reloc=2,class=CODE,delta=1
    46                           	psect	text30,global,reloc=2,class=CODE,delta=1
    47                           	psect	text31,global,reloc=2,class=CODE,delta=1
    48                           	psect	text32,global,reloc=2,class=CODE,delta=1
    49                           	psect	text33,global,reloc=2,class=CODE,delta=1
    50                           	psect	text34,global,reloc=2,class=CODE,delta=1
    51                           	psect	text35,global,reloc=2,class=CODE,delta=1
    52                           	psect	text36,global,reloc=2,class=CODE,delta=1
    53                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    54                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    69                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    70  0000                     
    71                           	psect	idataCOMRAM
    72  001E60                     __pidataCOMRAM:
    73                           	opt stack 0
    74                           
    75                           ;initializer for _countup
    76  001E60  0001               	dw	1
    77                           
    78                           	psect	idataBANK0
    79  001DA0                     __pidataBANK0:
    80                           	opt stack 0
    81                           
    82                           ;initializer for BT_Init@F5675
    83  001DA0  41                 	db	65
    84  001DA1  54                 	db	84
    85  001DA2  2B                 	db	43
    86  001DA3  4E                 	db	78
    87  001DA4  41                 	db	65
    88  001DA5  4D                 	db	77
    89  001DA6  45                 	db	69
    90  001DA7  3D                 	db	61
    91  001DA8  72                 	db	114
    92  001DA9  6F                 	db	111
    93  001DAA  62                 	db	98
    94  001DAB  6F                 	db	111
    95  001DAC  74                 	db	116
    96  001DAD  0D                 	db	13
    97  001DAE  0A                 	db	10
    98  001DAF  00                 	db	0
    99  001DB0  00                 	db	0
   100  001DB1  00                 	db	0
   101                           
   102                           	psect	smallconst
   103  000800                     __psmallconst:
   104                           	opt stack 0
   105  000800  00                 	db	0
   106  000801                     _dpowers:
   107                           	opt stack 0
   108  000801  0001               	dw	1
   109  000803  000A               	dw	10
   110  000805  0064               	dw	100
   111  000807  03E8               	dw	1000
   112  000809  2710               	dw	10000
   113  00080B                     __end_of_dpowers:
   114                           	opt stack 0
   115  0000                     _ADCON1bits	set	4033
   116  0000                     _CCP1CON	set	4029
   117  0000                     _CCP2CON	set	4026
   118  0000                     _CCPR1L	set	4030
   119  0000                     _CCPR2L	set	4027
   120  0000                     _INTCON	set	4082
   121  0000                     _INTCON2bits	set	4081
   122  0000                     _INTCON3bits	set	4080
   123  0000                     _INTCONbits	set	4082
   124  0000                     _OSCCONbits	set	4051
   125  0000                     _PIE1	set	3997
   126  0000                     _PIE1bits	set	3997
   127  0000                     _PIR1bits	set	3998
   128  0000                     _PORTA	set	3968
   129  0000                     _PORTAbits	set	3968
   130  0000                     _PORTB	set	3969
   131  0000                     _PORTBbits	set	3969
   132  0000                     _PORTC	set	3970
   133  0000                     _PORTD	set	3971
   134  0000                     _PORTDbits	set	3971
   135  0000                     _PORTE	set	3972
   136  0000                     _PR2	set	4043
   137  0000                     _RCREG	set	4014
   138  0000                     _RCSTA	set	4011
   139  0000                     _RCSTAbits	set	4011
   140  0000                     _SPBRG	set	4015
   141  0000                     _SPBRGH	set	4016
   142  0000                     _T2CON	set	4042
   143  0000                     _T2CONbits	set	4042
   144  0000                     _TMR2	set	4044
   145  0000                     _TRISA	set	3986
   146  0000                     _TRISB	set	3987
   147  0000                     _TRISBbits	set	3987
   148  0000                     _TRISC	set	3988
   149  0000                     _TRISCbits	set	3988
   150  0000                     _TRISD	set	3989
   151  0000                     _TRISE	set	3990
   152  0000                     _TXREG	set	4013
   153  0000                     _TXSTA	set	4012
   154  0000                     _TXSTAbits	set	4012
   155  00080B                     __stringdata:
   156                           	opt stack 0
   157  00080B                     STR_2:
   158  00080B  41                 	db	65	;'A'
   159  00080C  54                 	db	84	;'T'
   160  00080D  2B                 	db	43
   161  00080E  50                 	db	80	;'P'
   162  00080F  53                 	db	83	;'S'
   163  000810  57                 	db	87	;'W'
   164  000811  44                 	db	68	;'D'
   165  000812  3D                 	db	61	;'='
   166  000813  30                 	db	48	;'0'
   167  000814  30                 	db	48	;'0'
   168  000815  30                 	db	48	;'0'
   169  000816  30                 	db	48	;'0'
   170  000817  0D                 	db	13
   171  000818  0A                 	db	10
   172  000819  00                 	db	0
   173  00081A  0A                 	db	10
   174  00081B  2B                 	db	43
   175  00081C  42                 	db	66	;'B'
   176  00081D  54                 	db	84	;'T'
   177  00081E  53                 	db	83	;'S'
   178  00081F  54                 	db	84	;'T'
   179  000820  41                 	db	65	;'A'
   180  000821  54                 	db	84	;'T'
   181  000822  45                 	db	69	;'E'
   182  000823  3A                 	db	58	;':'
   183  000824  31                 	db	49	;'1'
   184  000825  0D                 	db	13
   185  000826  0A                 	db	10
   186  000827  00                 	db	0
   187  000828  0A                 	db	10
   188  000829  2B                 	db	43
   189  00082A  42                 	db	66	;'B'
   190  00082B  54                 	db	84	;'T'
   191  00082C  53                 	db	83	;'S'
   192  00082D  54                 	db	84	;'T'
   193  00082E  41                 	db	65	;'A'
   194  00082F  54                 	db	84	;'T'
   195  000830  45                 	db	69	;'E'
   196  000831  3A                 	db	58	;':'
   197  000832  33                 	db	51	;'3'
   198  000833  0D                 	db	13
   199  000834  0A                 	db	10
   200  000835  00                 	db	0
   201  000836  0A                 	db	10
   202  000837  2B                 	db	43
   203  000838  42                 	db	66	;'B'
   204  000839  54                 	db	84	;'T'
   205  00083A  53                 	db	83	;'S'
   206  00083B  54                 	db	84	;'T'
   207  00083C  41                 	db	65	;'A'
   208  00083D  54                 	db	84	;'T'
   209  00083E  45                 	db	69	;'E'
   210  00083F  3A                 	db	58	;':'
   211  000840  34                 	db	52	;'4'
   212  000841  0D                 	db	13
   213  000842  0A                 	db	10
   214  000843  00                 	db	0
   215  000844  0A                 	db	10
   216  000845  43                 	db	67	;'C'
   217  000846  4F                 	db	79	;'O'
   218  000847  4E                 	db	78	;'N'
   219  000848  4E                 	db	78	;'N'
   220  000849  45                 	db	69	;'E'
   221  00084A  43                 	db	67	;'C'
   222  00084B  54                 	db	84	;'T'
   223  00084C  3A                 	db	58	;':'
   224  00084D  4F                 	db	79	;'O'
   225  00084E  4B                 	db	75	;'K'
   226  00084F  0D                 	db	13
   227  000850  0A                 	db	10
   228  000851  00                 	db	0
   229  000852                     STR_1:
   230  000852  41                 	db	65	;'A'
   231  000853  54                 	db	84	;'T'
   232  000854  2B                 	db	43
   233  000855  52                 	db	82	;'R'
   234  000856  4F                 	db	79	;'O'
   235  000857  4C                 	db	76	;'L'
   236  000858  45                 	db	69	;'E'
   237  000859  3D                 	db	61	;'='
   238  00085A  30                 	db	48	;'0'
   239  00085B  0D                 	db	13
   240  00085C  0A                 	db	10
   241  00085D  00                 	db	0
   242  00085E                     STR_3:
   243  00085E  41                 	db	65	;'A'
   244  00085F  54                 	db	84	;'T'
   245  000860  2B                 	db	43
   246  000861  49                 	db	73	;'I'
   247  000862  4E                 	db	78	;'N'
   248  000863  51                 	db	81	;'Q'
   249  000864  0D                 	db	13
   250  000865  0A                 	db	10
   251  000866  00                 	db	0
   252  000867                     STR_5:
   253  000867  25                 	db	37
   254  000868  64                 	db	100	;'d'
   255  000869  00                 	db	0
   256  00086A                     __end_of__stringdata:
   257                           	opt stack 0
   258                           
   259                           ; #config settings
   260  00086A  00                 	db	0	; dummy byte at the end
   261  0000                     
   262                           	psect	cinit
   263  0019F4                     __pcinit:
   264                           	opt stack 0
   265  0019F4                     start_initialization:
   266                           	opt stack 0
   267  0019F4                     __initialization:
   268                           	opt stack 0
   269                           
   270                           ; Clear objects allocated to BANK1 (40 bytes)
   271  0019F4  EE01  F000         	lfsr	0,__pbssBANK1
   272  0019F8  0E28               	movlw	40
   273  0019FA                     clear_0:
   274  0019FA  6AEE               	clrf	postinc0,c
   275  0019FC  06E8               	decf	wreg,f,c
   276  0019FE  E1FD               	bnz	clear_0
   277                           
   278                           ; Clear objects allocated to BANK0 (76 bytes)
   279  001A00  EE00  F060         	lfsr	0,__pbssBANK0
   280  001A04  0E4C               	movlw	76
   281  001A06                     clear_1:
   282  001A06  6AEE               	clrf	postinc0,c
   283  001A08  06E8               	decf	wreg,f,c
   284  001A0A  E1FD               	bnz	clear_1
   285                           
   286                           ; Clear objects allocated to COMRAM (28 bytes)
   287  001A0C  EE00  F042         	lfsr	0,__pbssCOMRAM
   288  001A10  0E1C               	movlw	28
   289  001A12                     clear_2:
   290  001A12  6AEE               	clrf	postinc0,c
   291  001A14  06E8               	decf	wreg,f,c
   292  001A16  E1FD               	bnz	clear_2
   293                           
   294                           ; Initialize objects allocated to BANK0 (18 bytes)
   295                           ; load TBLPTR registers with __pidataBANK0
   296  001A18  0EA0               	movlw	low __pidataBANK0
   297  001A1A  6EF6               	movwf	tblptrl,c
   298  001A1C  0E1D               	movlw	high __pidataBANK0
   299  001A1E  6EF7               	movwf	tblptrh,c
   300  001A20  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   301  001A22  6EF8               	movwf	tblptru,c
   302  001A24  EE00  F0E4         	lfsr	0,__pdataBANK0
   303  001A28  EE10 F012          	lfsr	1,18
   304  001A2C                     copy_data0:
   305  001A2C  0009               	tblrd		*+
   306  001A2E  CFF5 FFEE          	movff	tablat,postinc0
   307  001A32  50E5               	movf	postdec1,w,c
   308  001A34  50E1               	movf	fsr1l,w,c
   309  001A36  E1FA               	bnz	copy_data0
   310                           
   311                           ; Initialize objects allocated to COMRAM (2 bytes)
   312                           ; load TBLPTR registers with __pidataCOMRAM
   313  001A38  0E60               	movlw	low __pidataCOMRAM
   314  001A3A  6EF6               	movwf	tblptrl,c
   315  001A3C  0E1E               	movlw	high __pidataCOMRAM
   316  001A3E  6EF7               	movwf	tblptrh,c
   317  001A40  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   318  001A42  6EF8               	movwf	tblptru,c
   319  001A44  0009               	tblrd		*+	;fetch initializer
   320  001A46  CFF5 F05E          	movff	tablat,__pdataCOMRAM
   321  001A4A  0009               	tblrd		*+	;fetch initializer
   322  001A4C  CFF5 F05F          	movff	tablat,__pdataCOMRAM+1
   323  001A50                     end_of_initialization:
   324                           	opt stack 0
   325  001A50                     __end_of__initialization:
   326                           	opt stack 0
   327  001A50  0100               	movlb	0
   328  001A52  EF5F  F00A         	goto	_main	;jump to C main() function
   329                           tblptru	equ	0xFF8
   330                           tblptrh	equ	0xFF7
   331                           tblptrl	equ	0xFF6
   332                           tablat	equ	0xFF5
   333                           postinc0	equ	0xFEE
   334                           wreg	equ	0xFE8
   335                           postdec1	equ	0xFE5
   336                           fsr1l	equ	0xFE1
   337                           
   338                           	psect	bssCOMRAM
   339  000042                     __pbssCOMRAM:
   340                           	opt stack 0
   341  000042                     _Med_lsb:
   342                           	opt stack 0
   343  000042                     	ds	2
   344  000044                     _Med_msb:
   345                           	opt stack 0
   346  000044                     	ds	2
   347  000046                     _TamanhoTrama:
   348                           	opt stack 0
   349  000046                     	ds	2
   350  000048                     _i:
   351                           	opt stack 0
   352  000048                     	ds	2
   353  00004A                     _CheckSum:
   354                           	opt stack 0
   355  00004A                     	ds	1
   356  00004B                     _ComanBFlag:
   357                           	opt stack 0
   358  00004B                     	ds	1
   359  00004C                     _ComanTFlag:
   360                           	opt stack 0
   361  00004C                     	ds	1
   362  00004D                     _Comando:
   363                           	opt stack 0
   364  00004D                     	ds	1
   365  00004E                     _ComandoTablet:
   366                           	opt stack 0
   367  00004E                     	ds	1
   368  00004F                     _EntTrama:
   369                           	opt stack 0
   370  00004F                     	ds	1
   371  000050                     _InicioComando:
   372                           	opt stack 0
   373  000050                     	ds	1
   374  000051                     _RXComandoTB:
   375                           	opt stack 0
   376  000051                     	ds	1
   377  000052                     _SBUSART:
   378                           	opt stack 0
   379  000052                     	ds	1
   380  000053                     _Timer1:
   381                           	opt stack 0
   382  000053                     	ds	1
   383  000054                     _USART_Status:
   384                           	opt stack 0
   385  000054                     	ds	1
   386  000055                     _cad:
   387                           	opt stack 0
   388  000055                     	ds	1
   389  000056                     _contador:
   390                           	opt stack 0
   391  000056                     	ds	1
   392  000057                     _contador2:
   393                           	opt stack 0
   394  000057                     	ds	1
   395  000058                     _j:
   396                           	opt stack 0
   397  000058                     	ds	1
   398  000059                     _lenght:
   399                           	opt stack 0
   400  000059                     	ds	1
   401  00005A                     _num_med_hi:
   402                           	opt stack 0
   403  00005A                     	ds	1
   404  00005B                     _num_med_low:
   405                           	opt stack 0
   406  00005B                     	ds	1
   407  00005C                     _num_med_medium:
   408                           	opt stack 0
   409  00005C                     	ds	1
   410  00005D                     _packet:
   411                           	opt stack 0
   412  00005D                     	ds	1
   413                           tblptru	equ	0xFF8
   414                           tblptrh	equ	0xFF7
   415                           tblptrl	equ	0xFF6
   416                           tablat	equ	0xFF5
   417                           postinc0	equ	0xFEE
   418                           wreg	equ	0xFE8
   419                           postdec1	equ	0xFE5
   420                           fsr1l	equ	0xFE1
   421                           
   422                           	psect	dataCOMRAM
   423  00005E                     __pdataCOMRAM:
   424                           	opt stack 0
   425  00005E                     _countup:
   426                           	opt stack 0
   427  00005E                     	ds	2
   428                           tblptru	equ	0xFF8
   429                           tblptrh	equ	0xFF7
   430                           tblptrl	equ	0xFF6
   431                           tablat	equ	0xFF5
   432                           postinc0	equ	0xFEE
   433                           wreg	equ	0xFE8
   434                           postdec1	equ	0xFE5
   435                           fsr1l	equ	0xFE1
   436                           
   437                           	psect	bssBANK0
   438  000060                     __pbssBANK0:
   439                           	opt stack 0
   440  000060                     _DutyCycle:
   441                           	opt stack 0
   442  000060                     	ds	2
   443  000062                     _FinComandB:
   444                           	opt stack 0
   445  000062                     	ds	1
   446  000063                     _FinComandT:
   447                           	opt stack 0
   448  000063                     	ds	1
   449  000064                     _cleanBfer:
   450                           	opt stack 0
   451  000064                     	ds	1
   452  000065                     _BluetoothDato:
   453                           	opt stack 0
   454  000065                     	ds	50
   455  000097                     _comando:
   456                           	opt stack 0
   457  000097                     	ds	20
   458  0000AB                     _Timer2Config:
   459                           	opt stack 0
   460  0000AB                     	ds	1
   461                           tblptru	equ	0xFF8
   462                           tblptrh	equ	0xFF7
   463                           tblptrl	equ	0xFF6
   464                           tablat	equ	0xFF5
   465                           postinc0	equ	0xFEE
   466                           wreg	equ	0xFE8
   467                           postdec1	equ	0xFE5
   468                           fsr1l	equ	0xFE1
   469                           
   470                           	psect	dataBANK0
   471  0000E4                     __pdataBANK0:
   472                           	opt stack 0
   473  0000E4                     BT_Init@F5675:
   474                           	opt stack 0
   475  0000E4                     	ds	18
   476                           tblptru	equ	0xFF8
   477                           tblptrh	equ	0xFF7
   478                           tblptrl	equ	0xFF6
   479                           tablat	equ	0xFF5
   480                           postinc0	equ	0xFEE
   481                           wreg	equ	0xFE8
   482                           postdec1	equ	0xFE5
   483                           fsr1l	equ	0xFE1
   484                           
   485                           	psect	bssBANK1
   486  000100                     __pbssBANK1:
   487                           	opt stack 0
   488  000100                     _TramaTablet:
   489                           	opt stack 0
   490  000100                     	ds	20
   491  000114                     _array:
   492                           	opt stack 0
   493  000114                     	ds	20
   494                           tblptru	equ	0xFF8
   495                           tblptrh	equ	0xFF7
   496                           tblptrl	equ	0xFF6
   497                           tablat	equ	0xFF5
   498                           postinc0	equ	0xFEE
   499                           wreg	equ	0xFE8
   500                           postdec1	equ	0xFE5
   501                           fsr1l	equ	0xFE1
   502                           
   503                           	psect	cstackBANK0
   504  0000AC                     __pcstackBANK0:
   505                           	opt stack 0
   506  0000AC                     ??_OpenPWM2:
   507  0000AC                     ?___lwdiv:
   508                           	opt stack 0
   509  0000AC                     ?___ftpack:
   510                           	opt stack 0
   511  0000AC                     OpenPWM1@period:
   512                           	opt stack 0
   513  0000AC                     WriteUSART@data:
   514                           	opt stack 0
   515  0000AC                     clrBufferUSART@i:
   516                           	opt stack 0
   517  0000AC                     Pause_ms@x:
   518                           	opt stack 0
   519  0000AC                     SetDCPWM1@dutycycle:
   520                           	opt stack 0
   521  0000AC                     SetDCPWM2@dutycycle:
   522                           	opt stack 0
   523  0000AC                     OpenUSART@spbrg:
   524                           	opt stack 0
   525  0000AC                     ___lwdiv@dividend:
   526                           	opt stack 0
   527  0000AC                     ___ftpack@arg:
   528                           	opt stack 0
   529                           
   530                           ; 3 bytes @ 0x0
   531  0000AC                     	ds	1
   532  0000AD                     putcTxU1@character:
   533                           	opt stack 0
   534  0000AD                     PWM_init1@period:
   535                           	opt stack 0
   536  0000AD                     OpenPWM2@period:
   537                           	opt stack 0
   538                           
   539                           ; 1 bytes @ 0x1
   540  0000AD                     	ds	1
   541  0000AE                     ??_OpenUSART:
   542  0000AE                     ??_SetDCPWM1:
   543  0000AE                     ??_SetDCPWM2:
   544  0000AE                     ??_Pause_ms:
   545  0000AE                     OpenPWM2@ccp2mx:
   546                           	opt stack 0
   547  0000AE                     putSTRINGU1@dato:
   548                           	opt stack 0
   549  0000AE                     ___lwdiv@divisor:
   550                           	opt stack 0
   551                           
   552                           ; 2 bytes @ 0x2
   553  0000AE                     	ds	1
   554  0000AF                     PWM_init2@period:
   555                           	opt stack 0
   556  0000AF                     ___ftpack@exp:
   557                           	opt stack 0
   558  0000AF                     Pause_ms@i:
   559                           	opt stack 0
   560                           
   561                           ; 2 bytes @ 0x3
   562  0000AF                     	ds	1
   563  0000B0                     ___ftpack@sign:
   564                           	opt stack 0
   565  0000B0                     putSTRINGU1@total:
   566                           	opt stack 0
   567  0000B0                     SetDCPWM1@DCycle:
   568                           	opt stack 0
   569  0000B0                     SetDCPWM2@DCycle:
   570                           	opt stack 0
   571  0000B0                     ___lwdiv@quotient:
   572                           	opt stack 0
   573                           
   574                           ; 2 bytes @ 0x4
   575  0000B0                     	ds	1
   576  0000B1                     ??___ftpack:
   577  0000B1                     Pause_seg@x:
   578                           	opt stack 0
   579  0000B1                     OpenUSART@config:
   580                           	opt stack 0
   581                           
   582                           ; 1 bytes @ 0x5
   583  0000B1                     	ds	1
   584  0000B2                     ??_putSTRINGU1:
   585  0000B2                     Pause_seg@i:
   586                           	opt stack 0
   587  0000B2                     UART1_Init@bdr:
   588                           	opt stack 0
   589  0000B2                     ___lwdiv@counter:
   590                           	opt stack 0
   591                           
   592                           ; 1 bytes @ 0x6
   593  0000B2                     	ds	1
   594  0000B3                     ?___lwmod:
   595                           	opt stack 0
   596  0000B3                     putcBluetoothString@a:
   597                           	opt stack 0
   598  0000B3                     ___lwmod@dividend:
   599                           	opt stack 0
   600                           
   601                           ; 2 bytes @ 0x7
   602  0000B3                     	ds	1
   603  0000B4                     ?___lbtoft:
   604                           	opt stack 0
   605  0000B4                     putSTRINGU1@last:
   606                           	opt stack 0
   607                           
   608                           ; 1 bytes @ 0x8
   609  0000B4                     	ds	1
   610  0000B5                     ??_putcBluetoothString:
   611  0000B5                     putSTRINGU1@cont:
   612                           	opt stack 0
   613  0000B5                     ___lwmod@divisor:
   614                           	opt stack 0
   615                           
   616                           ; 2 bytes @ 0x9
   617  0000B5                     	ds	1
   618  0000B6                     SendBlueToothCommand@command:
   619                           	opt stack 0
   620                           
   621                           ; 2 bytes @ 0xA
   622  0000B6                     	ds	1
   623  0000B7                     ___lbtoft@c:
   624                           	opt stack 0
   625  0000B7                     ___lwmod@counter:
   626                           	opt stack 0
   627  0000B7                     putcBluetoothString@i:
   628                           	opt stack 0
   629                           
   630                           ; 2 bytes @ 0xB
   631  0000B7                     	ds	1
   632  0000B8                     ?_sprintf:
   633                           	opt stack 0
   634  0000B8                     ?___ftmul:
   635                           	opt stack 0
   636  0000B8                     SendBlueToothCommand@total:
   637                           	opt stack 0
   638  0000B8                     sprintf@sp:
   639                           	opt stack 0
   640  0000B8                     ___ftmul@f1:
   641                           	opt stack 0
   642                           
   643                           ; 3 bytes @ 0xC
   644  0000B8                     	ds	2
   645  0000BA                     sprintf@f:
   646                           	opt stack 0
   647  0000BA                     BT_Init@nameBT:
   648                           	opt stack 0
   649                           
   650                           ; 18 bytes @ 0xE
   651  0000BA                     	ds	1
   652  0000BB                     ___ftmul@f2:
   653                           	opt stack 0
   654                           
   655                           ; 3 bytes @ 0xF
   656  0000BB                     	ds	3
   657  0000BE                     ??_sprintf:
   658  0000BE                     ??___ftmul:
   659                           
   660                           ; 0 bytes @ 0x12
   661  0000BE                     	ds	2
   662  0000C0                     sprintf@ap:
   663                           	opt stack 0
   664                           
   665                           ; 2 bytes @ 0x14
   666  0000C0                     	ds	1
   667  0000C1                     ___ftmul@exp:
   668                           	opt stack 0
   669                           
   670                           ; 1 bytes @ 0x15
   671  0000C1                     	ds	1
   672  0000C2                     sprintf@flag:
   673                           	opt stack 0
   674  0000C2                     ___ftmul@f3_as_product:
   675                           	opt stack 0
   676                           
   677                           ; 3 bytes @ 0x16
   678  0000C2                     	ds	1
   679  0000C3                     sprintf@prec:
   680                           	opt stack 0
   681                           
   682                           ; 1 bytes @ 0x17
   683  0000C3                     	ds	1
   684  0000C4                     sprintf@_val:
   685                           	opt stack 0
   686                           
   687                           ; 5 bytes @ 0x18
   688  0000C4                     	ds	1
   689  0000C5                     ___ftmul@cntr:
   690                           	opt stack 0
   691                           
   692                           ; 1 bytes @ 0x19
   693  0000C5                     	ds	1
   694  0000C6                     ___ftmul@sign:
   695                           	opt stack 0
   696                           
   697                           ; 1 bytes @ 0x1A
   698  0000C6                     	ds	1
   699  0000C7                     ?___fttol:
   700                           	opt stack 0
   701  0000C7                     ___fttol@f1:
   702                           	opt stack 0
   703                           
   704                           ; 3 bytes @ 0x1B
   705  0000C7                     	ds	2
   706  0000C9                     sprintf@c:
   707                           	opt stack 0
   708                           
   709                           ; 1 bytes @ 0x1D
   710  0000C9                     	ds	1
   711  0000CA                     putcBluetoothInt@a:
   712                           	opt stack 0
   713                           
   714                           ; 2 bytes @ 0x1E
   715  0000CA                     	ds	1
   716  0000CB                     ??___fttol:
   717                           
   718                           ; 0 bytes @ 0x1F
   719  0000CB                     	ds	1
   720  0000CC                     putcBluetoothInt@s:
   721                           	opt stack 0
   722                           
   723                           ; 20 bytes @ 0x20
   724  0000CC                     	ds	4
   725  0000D0                     ___fttol@sign1:
   726                           	opt stack 0
   727                           
   728                           ; 1 bytes @ 0x24
   729  0000D0                     	ds	1
   730  0000D1                     ___fttol@lval:
   731                           	opt stack 0
   732                           
   733                           ; 4 bytes @ 0x25
   734  0000D1                     	ds	4
   735  0000D5                     ___fttol@exp1:
   736                           	opt stack 0
   737                           
   738                           ; 1 bytes @ 0x29
   739  0000D5                     	ds	1
   740  0000D6                     ??_PWM_DutyCycle1:
   741  0000D6                     ??_PWM_DutyCycle2:
   742                           
   743                           ; 0 bytes @ 0x2A
   744  0000D6                     	ds	4
   745  0000DA                     PWM_DutyCycle1@DutyCycle:
   746                           	opt stack 0
   747  0000DA                     PWM_DutyCycle2@DutyCycle:
   748                           	opt stack 0
   749                           
   750                           ; 2 bytes @ 0x2E
   751  0000DA                     	ds	2
   752  0000DC                     PWM_DutyCycle1@percentageDuty:
   753                           	opt stack 0
   754  0000DC                     PWM_DutyCycle2@percentageDuty:
   755                           	opt stack 0
   756                           
   757                           ; 1 bytes @ 0x30
   758  0000DC                     	ds	1
   759  0000DD                     PWM_DutyCycle1@DC:
   760                           	opt stack 0
   761  0000DD                     PWM_DutyCycle2@DC:
   762                           	opt stack 0
   763                           
   764                           ; 2 bytes @ 0x31
   765  0000DD                     	ds	2
   766  0000DF                     ??_Inicializa_Driveby:
   767  0000DF                     ?_getCNY70Value:
   768                           	opt stack 0
   769                           
   770                           ; 2 bytes @ 0x33
   771  0000DF                     	ds	1
   772  0000E0                     putcBluetoothInt@i:
   773                           	opt stack 0
   774  0000E0                     Inicializa_Driveby@i:
   775                           	opt stack 0
   776                           
   777                           ; 2 bytes @ 0x34
   778  0000E0                     	ds	1
   779  0000E1                     
   780                           ; 0 bytes @ 0x35
   781  0000E1                     	ds	1
   782  0000E2                     Comando_Tablet@sensed:
   783                           	opt stack 0
   784                           
   785                           ; 2 bytes @ 0x36
   786  0000E2                     	ds	2
   787  0000E4                     tblptru	equ	0xFF8
   788                           tblptrh	equ	0xFF7
   789                           tblptrl	equ	0xFF6
   790                           tablat	equ	0xFF5
   791                           postinc0	equ	0xFEE
   792                           wreg	equ	0xFE8
   793                           postdec1	equ	0xFE5
   794                           fsr1l	equ	0xFE1
   795                           
   796                           ; 0 bytes @ 0x38
   797                           
   798                           	psect	cstackCOMRAM
   799  000001                     __pcstackCOMRAM:
   800                           	opt stack 0
   801  000001                     ?i2___ftpack:
   802                           	opt stack 0
   803  000001                     ReadUSART@data:
   804                           	opt stack 0
   805  000001                     i2SetDCPWM1@dutycycle:
   806                           	opt stack 0
   807  000001                     i2SetDCPWM2@dutycycle:
   808                           	opt stack 0
   809  000001                     i2___ftpack@arg:
   810                           	opt stack 0
   811                           
   812                           ; 3 bytes @ 0x0
   813  000001                     	ds	2
   814  000003                     ??i2_SetDCPWM1:
   815  000003                     ??i2_SetDCPWM2:
   816                           
   817                           ; 0 bytes @ 0x2
   818  000003                     	ds	1
   819  000004                     i2___ftpack@exp:
   820                           	opt stack 0
   821                           
   822                           ; 1 bytes @ 0x3
   823  000004                     	ds	1
   824  000005                     i2___ftpack@sign:
   825                           	opt stack 0
   826  000005                     i2SetDCPWM1@DCycle:
   827                           	opt stack 0
   828  000005                     i2SetDCPWM2@DCycle:
   829                           	opt stack 0
   830                           
   831                           ; 2 bytes @ 0x4
   832  000005                     	ds	1
   833  000006                     ??i2___ftpack:
   834                           
   835                           ; 0 bytes @ 0x5
   836  000006                     	ds	3
   837  000009                     ?i2___lbtoft:
   838                           	opt stack 0
   839                           
   840                           ; 3 bytes @ 0x8
   841  000009                     	ds	3
   842  00000C                     i2___lbtoft@c:
   843                           	opt stack 0
   844                           
   845                           ; 1 bytes @ 0xB
   846  00000C                     	ds	1
   847  00000D                     ?i2___ftmul:
   848                           	opt stack 0
   849  00000D                     i2___ftmul@f1:
   850                           	opt stack 0
   851                           
   852                           ; 3 bytes @ 0xC
   853  00000D                     	ds	3
   854  000010                     i2___ftmul@f2:
   855                           	opt stack 0
   856                           
   857                           ; 3 bytes @ 0xF
   858  000010                     	ds	3
   859  000013                     ??i2___ftmul:
   860                           
   861                           ; 0 bytes @ 0x12
   862  000013                     	ds	3
   863  000016                     i2___ftmul@exp:
   864                           	opt stack 0
   865                           
   866                           ; 1 bytes @ 0x15
   867  000016                     	ds	1
   868  000017                     i2___ftmul@f3_as_product:
   869                           	opt stack 0
   870                           
   871                           ; 3 bytes @ 0x16
   872  000017                     	ds	3
   873  00001A                     i2___ftmul@cntr:
   874                           	opt stack 0
   875                           
   876                           ; 1 bytes @ 0x19
   877  00001A                     	ds	1
   878  00001B                     i2___ftmul@sign:
   879                           	opt stack 0
   880                           
   881                           ; 1 bytes @ 0x1A
   882  00001B                     	ds	1
   883  00001C                     ?i2___fttol:
   884                           	opt stack 0
   885  00001C                     i2___fttol@f1:
   886                           	opt stack 0
   887                           
   888                           ; 3 bytes @ 0x1B
   889  00001C                     	ds	4
   890  000020                     ??i2___fttol:
   891                           
   892                           ; 0 bytes @ 0x1F
   893  000020                     	ds	5
   894  000025                     i2___fttol@sign1:
   895                           	opt stack 0
   896                           
   897                           ; 1 bytes @ 0x24
   898  000025                     	ds	1
   899  000026                     i2___fttol@lval:
   900                           	opt stack 0
   901                           
   902                           ; 4 bytes @ 0x25
   903  000026                     	ds	4
   904  00002A                     i2___fttol@exp1:
   905                           	opt stack 0
   906                           
   907                           ; 1 bytes @ 0x29
   908  00002A                     	ds	1
   909  00002B                     ??i2_PWM_DutyCycle1:
   910  00002B                     ??i2_PWM_DutyCycle2:
   911                           
   912                           ; 0 bytes @ 0x2A
   913  00002B                     	ds	4
   914  00002F                     i2PWM_DutyCycle1@DutyCycle:
   915                           	opt stack 0
   916  00002F                     i2PWM_DutyCycle2@DutyCycle:
   917                           	opt stack 0
   918                           
   919                           ; 2 bytes @ 0x2E
   920  00002F                     	ds	2
   921  000031                     i2PWM_DutyCycle1@percentageDuty:
   922                           	opt stack 0
   923  000031                     i2PWM_DutyCycle2@percentageDuty:
   924                           	opt stack 0
   925                           
   926                           ; 1 bytes @ 0x30
   927  000031                     	ds	1
   928  000032                     i2PWM_DutyCycle1@DC:
   929                           	opt stack 0
   930  000032                     i2PWM_DutyCycle2@DC:
   931                           	opt stack 0
   932                           
   933                           ; 2 bytes @ 0x31
   934  000032                     	ds	2
   935  000034                     ??_TMRO_USART:
   936  000034                     
   937                           ; 0 bytes @ 0x33
   938  000034                     	ds	14
   939                           tblptru	equ	0xFF8
   940                           tblptrh	equ	0xFF7
   941                           tblptrl	equ	0xFF6
   942                           tablat	equ	0xFF5
   943                           postinc0	equ	0xFEE
   944                           wreg	equ	0xFE8
   945                           postdec1	equ	0xFE5
   946                           fsr1l	equ	0xFE1
   947                           
   948 ;;
   949 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   950 ;;
   951 ;; *************** function _main *****************
   952 ;; Defined at:
   953 ;;		line 157 in file "robot.c"
   954 ;; Parameters:    Size  Location     Type
   955 ;;		None
   956 ;; Auto vars:     Size  Location     Type
   957 ;;		None
   958 ;; Return value:  Size  Location     Type
   959 ;;                  2  329[COMRAM] int 
   960 ;; Registers used:
   961 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   962 ;; Tracked objects:
   963 ;;		On entry : 0/0
   964 ;;		On exit  : 0/0
   965 ;;		Unchanged: 0/0
   966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   967 ;;      Params:         0       0       0       0       0       0       0       0       0
   968 ;;      Locals:         0       0       0       0       0       0       0       0       0
   969 ;;      Temps:          0       0       0       0       0       0       0       0       0
   970 ;;      Totals:         0       0       0       0       0       0       0       0       0
   971 ;;Total ram usage:        0 bytes
   972 ;; Hardware stack levels required when called:   11
   973 ;; This function calls:
   974 ;;		_Comando_Tablet
   975 ;;		_Inicializa_Driveby
   976 ;;		_UART1_Init
   977 ;;		_clrBufferUSART
   978 ;;		_getCNY70Value
   979 ;; This function is called by:
   980 ;;		Startup code after reset
   981 ;; This function uses a non-reentrant model
   982 ;;
   983                           
   984                           	psect	text0
   985  0014BE                     __ptext0:
   986                           	opt stack 0
   987  0014BE                     _main:
   988                           	opt stack 20
   989                           
   990                           ;robot.c: 159: INTCON =0X00;
   991                           
   992                           ;incstack = 0
   993  0014BE  0E00               	movlw	0
   994  0014C0  6EF2               	movwf	intcon,c	;volatile
   995                           
   996                           ;robot.c: 160: TRISD = 0x00;
   997  0014C2  0E00               	movlw	0
   998  0014C4  6E95               	movwf	3989,c	;volatile
   999                           
  1000                           ;robot.c: 161: TRISE = 0x00;
  1001  0014C6  0E00               	movlw	0
  1002  0014C8  6E96               	movwf	3990,c	;volatile
  1003                           
  1004                           ;robot.c: 162: ADCON1bits.PCFG=0b1111;
  1005  0014CA  80C1               	bsf	4033,0,c	;volatile
  1006  0014CC  82C1               	bsf	4033,1,c	;volatile
  1007  0014CE  84C1               	bsf	4033,2,c	;volatile
  1008  0014D0  86C1               	bsf	4033,3,c	;volatile
  1009                           
  1010                           ;robot.c: 164: Inicializa_Driveby();
  1011  0014D2  EC6F  F008         	call	_Inicializa_Driveby	;wreg free
  1012  0014D6                     l3298:
  1013                           
  1014                           ;robot.c: 169: {
  1015                           ;robot.c: 172: if (cleanBfer == 1) {
  1016  0014D6  0100               	movlb	0	; () banked
  1017  0014D8  0564               	decf	_cleanBfer& (0+255),w,b
  1018  0014DA  A4D8               	btfss	status,2,c
  1019  0014DC  D005               	goto	l3304
  1020                           
  1021                           ; BSR set to: 0
  1022                           ;robot.c: 173: clrBufferUSART();
  1023  0014DE  ECE8  F00D         	call	_clrBufferUSART	;wreg free
  1024                           
  1025                           ;robot.c: 174: cleanBfer = 0;
  1026  0014E2  0E00               	movlw	0
  1027  0014E4  0100               	movlb	0	; () banked
  1028  0014E6  6F64               	movwf	_cleanBfer& (0+255),b
  1029  0014E8                     l3304:
  1030                           
  1031                           ; BSR set to: 0
  1032                           ;robot.c: 175: }
  1033                           ;robot.c: 176: if (FinComandT == 1) {
  1034  0014E8  0100               	movlb	0	; () banked
  1035  0014EA  0563               	decf	_FinComandT& (0+255),w,b
  1036  0014EC  A4D8               	btfss	status,2,c
  1037  0014EE  D00E               	goto	l3318
  1038                           
  1039                           ; BSR set to: 0
  1040                           ;robot.c: 178: FinComandT = 0;
  1041  0014F0  0E00               	movlw	0
  1042  0014F2  0100               	movlb	0	; () banked
  1043  0014F4  6F63               	movwf	_FinComandT& (0+255),b
  1044                           
  1045                           ; BSR set to: 0
  1046                           ;robot.c: 179: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
  1047  0014F6  0E4F               	movlw	79
  1048  0014F8  16AB               	andwf	4011,f,c	;volatile
  1049                           
  1050                           ; BSR set to: 0
  1051  0014FA  9AAC               	bcf	4012,5,c	;volatile
  1052                           
  1053                           ; BSR set to: 0
  1054  0014FC  0ECF               	movlw	207
  1055  0014FE  169D               	andwf	3997,f,c	;volatile
  1056                           
  1057                           ; BSR set to: 0
  1058                           ;robot.c: 180: Comando_Tablet();
  1059  001500  EC23  F00C         	call	_Comando_Tablet	;wreg free
  1060                           
  1061                           ;robot.c: 181: UART1_Init(51);
  1062  001504  0E33               	movlw	51
  1063  001506  ECB1  F00E         	call	_UART1_Init
  1064                           
  1065                           ;robot.c: 183: }
  1066  00150A  D00C               	goto	l3328
  1067  00150C                     l3318:
  1068                           
  1069                           ;robot.c: 184: else if (FinComandB == 1) {
  1070  00150C  0100               	movlb	0	; () banked
  1071  00150E  0562               	decf	_FinComandB& (0+255),w,b
  1072  001510  A4D8               	btfss	status,2,c
  1073  001512  D008               	goto	l3328
  1074                           
  1075                           ; BSR set to: 0
  1076                           ;robot.c: 187: FinComandB = 0;
  1077  001514  0E00               	movlw	0
  1078  001516  0100               	movlb	0	; () banked
  1079  001518  6F62               	movwf	_FinComandB& (0+255),b
  1080                           
  1081                           ; BSR set to: 0
  1082                           ;robot.c: 188: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
  1083  00151A  0E4F               	movlw	79
  1084  00151C  16AB               	andwf	4011,f,c	;volatile
  1085                           
  1086                           ; BSR set to: 0
  1087  00151E  9AAC               	bcf	4012,5,c	;volatile
  1088                           
  1089                           ; BSR set to: 0
  1090  001520  0ECF               	movlw	207
  1091  001522  169D               	andwf	3997,f,c	;volatile
  1092  001524                     l3328:
  1093                           
  1094                           ;robot.c: 192: }
  1095                           ;robot.c: 194: PORTAbits.RA0 = PORTBbits.RB3;
  1096  001524  A681               	btfss	3969,3,c	;volatile
  1097  001526  D002               	bra	u3315
  1098  001528  8080               	bsf	3968,0,c	;volatile
  1099  00152A  D001               	bra	u3317
  1100  00152C                     u3315:
  1101  00152C  9080               	bcf	3968,0,c	;volatile
  1102  00152E                     u3317:
  1103                           
  1104                           ;robot.c: 195: PORTAbits.RA1 = PORTBbits.RB0;
  1105  00152E  A081               	btfss	3969,0,c	;volatile
  1106  001530  D002               	bra	u3325
  1107  001532  8280               	bsf	3968,1,c	;volatile
  1108  001534  D001               	bra	u3327
  1109  001536                     u3325:
  1110  001536  9280               	bcf	3968,1,c	;volatile
  1111  001538                     u3327:
  1112                           
  1113                           ;robot.c: 196: PORTAbits.RA2 = PORTBbits.RB4;
  1114  001538  A881               	btfss	3969,4,c	;volatile
  1115  00153A  D002               	bra	u3335
  1116  00153C  8480               	bsf	3968,2,c	;volatile
  1117  00153E  D001               	bra	u3337
  1118  001540                     u3335:
  1119  001540  9480               	bcf	3968,2,c	;volatile
  1120  001542                     u3337:
  1121                           
  1122                           ;robot.c: 198: getCNY70Value();
  1123  001542  EC75  F006         	call	_getCNY70Value	;wreg free
  1124  001546  D7C7               	goto	l3298
  1125  001548                     __end_of_main:
  1126                           	opt stack 0
  1127                           tblptru	equ	0xFF8
  1128                           tblptrh	equ	0xFF7
  1129                           tblptrl	equ	0xFF6
  1130                           tablat	equ	0xFF5
  1131                           intcon	equ	0xFF2
  1132                           postinc0	equ	0xFEE
  1133                           wreg	equ	0xFE8
  1134                           postdec1	equ	0xFE5
  1135                           fsr1l	equ	0xFE1
  1136                           status	equ	0xFD8
  1137                           
  1138 ;; *************** function _Inicializa_Driveby *****************
  1139 ;; Defined at:
  1140 ;;		line 62 in file "Funciones_Db.c"
  1141 ;; Parameters:    Size  Location     Type
  1142 ;;		None
  1143 ;; Auto vars:     Size  Location     Type
  1144 ;;  i               2   52[BANK0 ] int 
  1145 ;; Return value:  Size  Location     Type
  1146 ;;		None               void
  1147 ;; Registers used:
  1148 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1149 ;; Tracked objects:
  1150 ;;		On entry : 0/0
  1151 ;;		On exit  : 0/0
  1152 ;;		Unchanged: 0/0
  1153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1154 ;;      Params:         0       0       0       0       0       0       0       0       0
  1155 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1156 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1157 ;;      Totals:         0       3       0       0       0       0       0       0       0
  1158 ;;Total ram usage:        3 bytes
  1159 ;; Hardware stack levels used:    1
  1160 ;; Hardware stack levels required when called:   10
  1161 ;; This function calls:
  1162 ;;		_BT_Init
  1163 ;;		_PWM_DutyCycle1
  1164 ;;		_PWM_DutyCycle2
  1165 ;;		_PWM_init1
  1166 ;;		_PWM_init2
  1167 ;;		_Pause_seg
  1168 ;;		_clrBufferUSART
  1169 ;; This function is called by:
  1170 ;;		_main
  1171 ;; This function uses a non-reentrant model
  1172 ;;
  1173                           
  1174                           	psect	text1
  1175  0010DE                     __ptext1:
  1176                           	opt stack 0
  1177  0010DE                     _Inicializa_Driveby:
  1178                           	opt stack 20
  1179                           
  1180                           ;Funciones_Db.c: 63: TRISA = TRISB = TRISC = TRISD = 0;
  1181                           
  1182                           ;incstack = 0
  1183  0010DE  0E00               	movlw	0
  1184  0010E0  6E95               	movwf	3989,c	;volatile
  1185  0010E2  CF95 FF94          	movff	3989,3988	;volatile
  1186  0010E6  CF94 FF93          	movff	3988,3987	;volatile
  1187  0010EA  CF93 FF92          	movff	3987,3986	;volatile
  1188                           
  1189                           ;Funciones_Db.c: 64: INTCON = 0b11000000;
  1190  0010EE  0EC0               	movlw	192
  1191  0010F0  6EF2               	movwf	intcon,c	;volatile
  1192                           
  1193                           ;Funciones_Db.c: 67: int i = 0;
  1194  0010F2  0E00               	movlw	0
  1195  0010F4  0100               	movlb	0	; () banked
  1196  0010F6  6FE1               	movwf	(Inicializa_Driveby@i+1)& (0+255),b
  1197  0010F8  0E00               	movlw	0
  1198  0010FA  0100               	movlb	0	; () banked
  1199  0010FC  6FE0               	movwf	Inicializa_Driveby@i& (0+255),b
  1200                           
  1201                           ; BSR set to: 0
  1202                           ;Funciones_Db.c: 68: _delay((unsigned long)((40)*(4000000/4000.0)));
  1203  0010FE  0E34               	movlw	52
  1204  001100  0100               	movlb	0	; () banked
  1205  001102  6FDF               	movwf	??_Inicializa_Driveby& (0+255),b
  1206  001104  0EF2               	movlw	242
  1207  001106                     u3347:
  1208  001106  2EE8               	decfsz	wreg,f,c
  1209  001108  D7FE               	goto	u3347
  1210  00110A  2FDF               	decfsz	??_Inicializa_Driveby& (0+255),f,b
  1211  00110C  D7FC               	goto	u3347
  1212                           
  1213                           ;Funciones_Db.c: 69: OSCCONbits.IRCF = 0b111;
  1214  00110E  88D3               	bsf	4051,4,c	;volatile
  1215  001110  8AD3               	bsf	4051,5,c	;volatile
  1216  001112  8CD3               	bsf	4051,6,c	;volatile
  1217                           
  1218                           ;Funciones_Db.c: 74: TRISA = TRISB = TRISC = TRISD = TRISE = 0;
  1219  001114  0E00               	movlw	0
  1220  001116  6E96               	movwf	3990,c	;volatile
  1221  001118  CF96 FF95          	movff	3990,3989	;volatile
  1222  00111C  CF95 FF94          	movff	3989,3988	;volatile
  1223  001120  CF94 FF93          	movff	3988,3987	;volatile
  1224  001124  CF93 FF92          	movff	3987,3986	;volatile
  1225                           
  1226                           ;Funciones_Db.c: 75: PORTA = PORTB = PORTC = PORTD = PORTE = 0;
  1227  001128  0E00               	movlw	0
  1228  00112A  6E84               	movwf	3972,c	;volatile
  1229  00112C  CF84 FF83          	movff	3972,3971	;volatile
  1230  001130  CF83 FF82          	movff	3971,3970	;volatile
  1231  001134  CF82 FF81          	movff	3970,3969	;volatile
  1232  001138  CF81 FF80          	movff	3969,3968	;volatile
  1233                           
  1234                           ;Funciones_Db.c: 76: TRISCbits.TRISC7 = 1;
  1235  00113C  8E94               	bsf	3988,7,c	;volatile
  1236                           
  1237                           ;Funciones_Db.c: 77: TRISCbits.TRISC6 = 0;
  1238  00113E  9C94               	bcf	3988,6,c	;volatile
  1239                           
  1240                           ;Funciones_Db.c: 78: for (i = 1; i <= 50; i++)
  1241  001140  0E00               	movlw	0
  1242  001142  0100               	movlb	0	; () banked
  1243  001144  6FE1               	movwf	(Inicializa_Driveby@i+1)& (0+255),b
  1244  001146  0E01               	movlw	1
  1245  001148  0100               	movlb	0	; () banked
  1246  00114A  6FE0               	movwf	Inicializa_Driveby@i& (0+255),b
  1247  00114C                     
  1248                           ; BSR set to: 0
  1249  00114C  0100               	movlb	0	; () banked
  1250  00114E  51E1               	movf	(Inicializa_Driveby@i+1)& (0+255),w,b
  1251  001150  0A80               	xorlw	128
  1252  001152  0F80               	addlw	-128
  1253  001154  0E33               	movlw	51
  1254  001156  B4D8               	btfsc	status,2,c
  1255  001158  5DE0               	subwf	Inicializa_Driveby@i& (0+255),w,b
  1256  00115A  B0D8               	btfsc	status,0,c
  1257  00115C  D00D               	goto	l3130
  1258                           
  1259                           ; BSR set to: 0
  1260                           ;Funciones_Db.c: 79: _delay((unsigned long)((20)*(4000000/4000.0)));
  1261                           
  1262                           ; BSR set to: 0
  1263                           
  1264                           ; BSR set to: 0
  1265  00115E  0E1A               	movlw	26
  1266  001160  0100               	movlb	0	; () banked
  1267  001162  6FDF               	movwf	??_Inicializa_Driveby& (0+255),b
  1268  001164  0EF8               	movlw	248
  1269  001166                     u3357:
  1270  001166  2EE8               	decfsz	wreg,f,c
  1271  001168  D7FE               	goto	u3357
  1272  00116A  2FDF               	decfsz	??_Inicializa_Driveby& (0+255),f,b
  1273  00116C  D7FC               	goto	u3357
  1274  00116E  D000               	nop2	
  1275  001170  0100               	movlb	0	; () banked
  1276  001172  4BE0               	infsnz	Inicializa_Driveby@i& (0+255),f,b
  1277  001174  2BE1               	incf	(Inicializa_Driveby@i+1)& (0+255),f,b
  1278  001176  D7EA               	goto	L1
  1279  001178                     l3130:
  1280                           
  1281                           ; BSR set to: 0
  1282                           ;Funciones_Db.c: 80: PORTE = 0;
  1283  001178  0E00               	movlw	0
  1284  00117A  6E84               	movwf	3972,c	;volatile
  1285                           
  1286                           ;Funciones_Db.c: 81: PORTB = 0;
  1287  00117C  0E00               	movlw	0
  1288  00117E  6E81               	movwf	3969,c	;volatile
  1289                           
  1290                           ; BSR set to: 0
  1291                           ;Funciones_Db.c: 82: TRISBbits.TRISB0 = 1;
  1292  001180  8093               	bsf	3987,0,c	;volatile
  1293                           
  1294                           ; BSR set to: 0
  1295                           ;Funciones_Db.c: 83: TRISBbits.TRISB1 = 1;
  1296  001182  8293               	bsf	3987,1,c	;volatile
  1297                           
  1298                           ; BSR set to: 0
  1299                           ;Funciones_Db.c: 84: TRISBbits.TRISB2 = 1;
  1300  001184  8493               	bsf	3987,2,c	;volatile
  1301                           
  1302                           ; BSR set to: 0
  1303                           ;Funciones_Db.c: 85: TRISBbits.TRISB3 = 1;
  1304  001186  8693               	bsf	3987,3,c	;volatile
  1305                           
  1306                           ; BSR set to: 0
  1307                           ;Funciones_Db.c: 86: TRISBbits.TRISB4 = 1;
  1308  001188  8893               	bsf	3987,4,c	;volatile
  1309                           
  1310                           ; BSR set to: 0
  1311                           ;Funciones_Db.c: 90: BT_Init();
  1312  00118A  EC45  F009         	call	_BT_Init	;wreg free
  1313                           
  1314                           ;Funciones_Db.c: 93: Pause_seg(7);
  1315  00118E  0E07               	movlw	7
  1316  001190  ECC8  F00C         	call	_Pause_seg
  1317                           
  1318                           ;Funciones_Db.c: 94: cad = 0;
  1319  001194  0E00               	movlw	0
  1320  001196  6E55               	movwf	_cad,c
  1321                           
  1322                           ;Funciones_Db.c: 95: clrBufferUSART();
  1323  001198  ECE8  F00D         	call	_clrBufferUSART	;wreg free
  1324                           
  1325                           ;Funciones_Db.c: 98: PWM_init1(0xff);
  1326  00119C  0EFF               	movlw	255
  1327  00119E  EC70  F00E         	call	_PWM_init1
  1328                           
  1329                           ;Funciones_Db.c: 99: PWM_init2(0xff);
  1330  0011A2  0EFF               	movlw	255
  1331  0011A4  EC5D  F00E         	call	_PWM_init2
  1332                           
  1333                           ;Funciones_Db.c: 100: PWM_DutyCycle1(0);
  1334  0011A8  0E00               	movlw	0
  1335  0011AA  ECA9  F00B         	call	_PWM_DutyCycle1
  1336                           
  1337                           ;Funciones_Db.c: 101: PWM_DutyCycle2(0);
  1338  0011AE  0E00               	movlw	0
  1339  0011B0  EC6B  F00B         	call	_PWM_DutyCycle2
  1340                           
  1341                           ;Funciones_Db.c: 102: return;
  1342  0011B4  0012               	return	
  1343  0011B6                     __end_of_Inicializa_Driveby:
  1344                           	opt stack 0
  1345                           tblptru	equ	0xFF8
  1346                           tblptrh	equ	0xFF7
  1347                           tblptrl	equ	0xFF6
  1348                           tablat	equ	0xFF5
  1349                           intcon	equ	0xFF2
  1350                           postinc0	equ	0xFEE
  1351                           wreg	equ	0xFE8
  1352                           postdec1	equ	0xFE5
  1353                           fsr1l	equ	0xFE1
  1354                           status	equ	0xFD8
  1355                           
  1356 ;; *************** function _PWM_init2 *****************
  1357 ;; Defined at:
  1358 ;;		line 42 in file "pwm.c"
  1359 ;; Parameters:    Size  Location     Type
  1360 ;;  period          1    wreg     unsigned char 
  1361 ;; Auto vars:     Size  Location     Type
  1362 ;;  period          1    3[BANK0 ] unsigned char 
  1363 ;; Return value:  Size  Location     Type
  1364 ;;		None               void
  1365 ;; Registers used:
  1366 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1367 ;; Tracked objects:
  1368 ;;		On entry : 0/0
  1369 ;;		On exit  : 0/0
  1370 ;;		Unchanged: 0/0
  1371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1372 ;;      Params:         0       0       0       0       0       0       0       0       0
  1373 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1374 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1375 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1376 ;;Total ram usage:        1 bytes
  1377 ;; Hardware stack levels used:    1
  1378 ;; Hardware stack levels required when called:    6
  1379 ;; This function calls:
  1380 ;;		_OpenPWM2
  1381 ;; This function is called by:
  1382 ;;		_Inicializa_Driveby
  1383 ;; This function uses a non-reentrant model
  1384 ;;
  1385                           
  1386                           	psect	text2
  1387  001CBA                     __ptext2:
  1388                           	opt stack 0
  1389  001CBA                     _PWM_init2:
  1390                           	opt stack 23
  1391                           
  1392                           ;incstack = 0
  1393                           ;PWM_init2@period stored from wreg
  1394  001CBA  0100               	movlb	0	; () banked
  1395  001CBC  6FAF               	movwf	PWM_init2@period& (0+255),b
  1396                           
  1397                           ; BSR set to: 0
  1398                           ;pwm.c: 43: Timer2Config = 0b11111110;
  1399  001CBE  0EFE               	movlw	254
  1400  001CC0  0100               	movlb	0	; () banked
  1401  001CC2  6FAB               	movwf	_Timer2Config& (0+255),b
  1402                           
  1403                           ; BSR set to: 0
  1404                           ;pwm.c: 44: T2CON = (0xfb & Timer2Config);
  1405  001CC4  0100               	movlb	0	; () banked
  1406  001CC6  51AB               	movf	_Timer2Config& (0+255),w,b
  1407  001CC8  0BFB               	andlw	251
  1408  001CCA  6ECA               	movwf	4042,c	;volatile
  1409                           
  1410                           ; BSR set to: 0
  1411                           ;pwm.c: 47: TMR2 = 0;
  1412  001CCC  0E00               	movlw	0
  1413  001CCE  6ECC               	movwf	4044,c	;volatile
  1414                           
  1415                           ; BSR set to: 0
  1416                           ;pwm.c: 48: PIR1bits.TMR2IF = 0;
  1417  001CD0  929E               	bcf	3998,1,c	;volatile
  1418                           
  1419                           ; BSR set to: 0
  1420                           ;pwm.c: 49: PIE1bits.TMR2IE = 0;
  1421  001CD2  929D               	bcf	3997,1,c	;volatile
  1422                           
  1423                           ; BSR set to: 0
  1424                           ;pwm.c: 50: T2CONbits.TMR2ON = 1;
  1425  001CD4  84CA               	bsf	4042,2,c	;volatile
  1426                           
  1427                           ; BSR set to: 0
  1428                           ;pwm.c: 51: OpenPWM2(period);
  1429  001CD6  0100               	movlb	0	; () banked
  1430  001CD8  51AF               	movf	PWM_init2@period& (0+255),w,b
  1431  001CDA  ECC6  F00D         	call	_OpenPWM2
  1432                           
  1433                           ;pwm.c: 53: return;
  1434  001CDE  0012               	return	
  1435  001CE0                     __end_of_PWM_init2:
  1436                           	opt stack 0
  1437                           tblptru	equ	0xFF8
  1438                           tblptrh	equ	0xFF7
  1439                           tblptrl	equ	0xFF6
  1440                           tablat	equ	0xFF5
  1441                           intcon	equ	0xFF2
  1442                           postinc0	equ	0xFEE
  1443                           wreg	equ	0xFE8
  1444                           postdec1	equ	0xFE5
  1445                           fsr1l	equ	0xFE1
  1446                           status	equ	0xFD8
  1447                           
  1448 ;; *************** function _OpenPWM2 *****************
  1449 ;; Defined at:
  1450 ;;		line 18 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw2open.c"
  1451 ;; Parameters:    Size  Location     Type
  1452 ;;  period          1    wreg     unsigned char 
  1453 ;; Auto vars:     Size  Location     Type
  1454 ;;  period          1    1[BANK0 ] unsigned char 
  1455 ;;  ccp2mx          1    2[BANK0 ] unsigned char 
  1456 ;;  pmmode          1    0        unsigned char 
  1457 ;; Return value:  Size  Location     Type
  1458 ;;		None               void
  1459 ;; Registers used:
  1460 ;;		wreg, status,2, tblptrl, tblptrh, tblptru
  1461 ;; Tracked objects:
  1462 ;;		On entry : 0/0
  1463 ;;		On exit  : 0/0
  1464 ;;		Unchanged: 0/0
  1465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1466 ;;      Params:         0       0       0       0       0       0       0       0       0
  1467 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1468 ;;      Temps:          0       1       0       0       0       0       0       0       0
  1469 ;;      Totals:         0       3       0       0       0       0       0       0       0
  1470 ;;Total ram usage:        3 bytes
  1471 ;; Hardware stack levels used:    1
  1472 ;; Hardware stack levels required when called:    5
  1473 ;; This function calls:
  1474 ;;		Nothing
  1475 ;; This function is called by:
  1476 ;;		_PWM_init2
  1477 ;; This function uses a non-reentrant model
  1478 ;;
  1479                           
  1480                           	psect	text3
  1481  001B8C                     __ptext3:
  1482                           	opt stack 0
  1483  001B8C                     _OpenPWM2:
  1484                           	opt stack 23
  1485                           
  1486                           ;incstack = 0
  1487                           ;OpenPWM2@period stored from wreg
  1488  001B8C  0100               	movlb	0	; () banked
  1489  001B8E  6FAD               	movwf	OpenPWM2@period& (0+255),b
  1490                           
  1491                           ; BSR set to: 0
  1492  001B90  0E0C               	movlw	12
  1493  001B92  6EBA               	movwf	4026,c	;volatile
  1494                           
  1495                           ; BSR set to: 0
  1496  001B94  0E05               	movlw	5
  1497  001B96  6EF6               	movwf	tblptrl,c
  1498  001B98                     	if	1	;There is more than 1 active tblptr byte
  1499  001B98  0E00               	movlw	0
  1500  001B9A  6EF7               	movwf	tblptrh,c
  1501  001B9C                     	endif
  1502  001B9C                     	if	1	;There are 3 active tblptr bytes
  1503  001B9C  0E30               	movlw	48
  1504  001B9E  6EF8               	movwf	tblptru,c
  1505  001BA0                     	endif
  1506  001BA0  0008               	tblrd		*
  1507  001BA2  CFF5 F0AC          	movff	tablat,??_OpenPWM2
  1508  001BA6  0100               	movlb	0	; () banked
  1509  001BA8  A1AC               	btfss	??_OpenPWM2& (0+255),0,b
  1510  001BAA  D003               	goto	l2682
  1511                           
  1512                           ; BSR set to: 0
  1513  001BAC  0100               	movlb	0	; () banked
  1514  001BAE  69AE               	setf	OpenPWM2@ccp2mx& (0+255),b
  1515  001BB0  D003               	goto	l499
  1516  001BB2                     l2682:
  1517                           
  1518                           ; BSR set to: 0
  1519  001BB2  0E00               	movlw	0
  1520  001BB4  0100               	movlb	0	; () banked
  1521  001BB6  6FAE               	movwf	OpenPWM2@ccp2mx& (0+255),b
  1522  001BB8                     l499:
  1523                           
  1524                           ; BSR set to: 0
  1525  001BB8  0100               	movlb	0	; () banked
  1526  001BBA  51AE               	movf	OpenPWM2@ccp2mx& (0+255),w,b
  1527  001BBC  B4D8               	btfsc	status,2,c
  1528  001BBE  D002               	goto	l500
  1529                           
  1530                           ; BSR set to: 0
  1531  001BC0  9294               	bcf	3988,1,c	;volatile
  1532  001BC2  D001               	goto	l501
  1533  001BC4                     l500:
  1534                           
  1535                           ; BSR set to: 0
  1536  001BC4  9693               	bcf	3987,3,c	;volatile
  1537  001BC6                     l501:
  1538                           
  1539                           ; BSR set to: 0
  1540  001BC6  94CA               	bcf	4042,2,c	;volatile
  1541  001BC8  C0AD  FFCB         	movff	OpenPWM2@period,4043	;volatile
  1542  001BCC  84CA               	bsf	4042,2,c	;volatile
  1543                           
  1544                           ; BSR set to: 0
  1545  001BCE  0012               	return	
  1546  001BD0                     __end_of_OpenPWM2:
  1547                           	opt stack 0
  1548                           tblptru	equ	0xFF8
  1549                           tblptrh	equ	0xFF7
  1550                           tblptrl	equ	0xFF6
  1551                           tablat	equ	0xFF5
  1552                           intcon	equ	0xFF2
  1553                           postinc0	equ	0xFEE
  1554                           wreg	equ	0xFE8
  1555                           postdec1	equ	0xFE5
  1556                           fsr1l	equ	0xFE1
  1557                           status	equ	0xFD8
  1558                           
  1559 ;; *************** function _PWM_init1 *****************
  1560 ;; Defined at:
  1561 ;;		line 20 in file "pwm.c"
  1562 ;; Parameters:    Size  Location     Type
  1563 ;;  period          1    wreg     unsigned char 
  1564 ;; Auto vars:     Size  Location     Type
  1565 ;;  period          1    1[BANK0 ] unsigned char 
  1566 ;; Return value:  Size  Location     Type
  1567 ;;		None               void
  1568 ;; Registers used:
  1569 ;;		wreg, status,2, status,0, cstack
  1570 ;; Tracked objects:
  1571 ;;		On entry : 0/0
  1572 ;;		On exit  : 0/0
  1573 ;;		Unchanged: 0/0
  1574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1575 ;;      Params:         0       0       0       0       0       0       0       0       0
  1576 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1577 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1578 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1579 ;;Total ram usage:        1 bytes
  1580 ;; Hardware stack levels used:    1
  1581 ;; Hardware stack levels required when called:    6
  1582 ;; This function calls:
  1583 ;;		_OpenPWM1
  1584 ;; This function is called by:
  1585 ;;		_Inicializa_Driveby
  1586 ;; This function uses a non-reentrant model
  1587 ;;
  1588                           
  1589                           	psect	text4
  1590  001CE0                     __ptext4:
  1591                           	opt stack 0
  1592  001CE0                     _PWM_init1:
  1593                           	opt stack 23
  1594                           
  1595                           ; BSR set to: 0
  1596                           ;incstack = 0
  1597                           ;PWM_init1@period stored from wreg
  1598  001CE0  0100               	movlb	0	; () banked
  1599  001CE2  6FAD               	movwf	PWM_init1@period& (0+255),b
  1600                           
  1601                           ; BSR set to: 0
  1602                           ;pwm.c: 21: Timer2Config = 0b11111110;
  1603  001CE4  0EFE               	movlw	254
  1604  001CE6  0100               	movlb	0	; () banked
  1605  001CE8  6FAB               	movwf	_Timer2Config& (0+255),b
  1606                           
  1607                           ; BSR set to: 0
  1608                           ;pwm.c: 22: T2CON = (0xfb & Timer2Config);
  1609  001CEA  0100               	movlb	0	; () banked
  1610  001CEC  51AB               	movf	_Timer2Config& (0+255),w,b
  1611  001CEE  0BFB               	andlw	251
  1612  001CF0  6ECA               	movwf	4042,c	;volatile
  1613                           
  1614                           ; BSR set to: 0
  1615                           ;pwm.c: 25: TMR2 = 0;
  1616  001CF2  0E00               	movlw	0
  1617  001CF4  6ECC               	movwf	4044,c	;volatile
  1618                           
  1619                           ; BSR set to: 0
  1620                           ;pwm.c: 26: PIR1bits.TMR2IF = 0;
  1621  001CF6  929E               	bcf	3998,1,c	;volatile
  1622                           
  1623                           ; BSR set to: 0
  1624                           ;pwm.c: 27: PIE1bits.TMR2IE = 0;
  1625  001CF8  929D               	bcf	3997,1,c	;volatile
  1626                           
  1627                           ; BSR set to: 0
  1628                           ;pwm.c: 28: T2CONbits.TMR2ON = 1;
  1629  001CFA  84CA               	bsf	4042,2,c	;volatile
  1630                           
  1631                           ; BSR set to: 0
  1632                           ;pwm.c: 29: OpenPWM1(period);
  1633  001CFC  0100               	movlb	0	; () banked
  1634  001CFE  51AD               	movf	PWM_init1@period& (0+255),w,b
  1635  001D00  ECBC  F00E         	call	_OpenPWM1
  1636                           
  1637                           ;pwm.c: 31: return;
  1638  001D04  0012               	return	
  1639  001D06                     __end_of_PWM_init1:
  1640                           	opt stack 0
  1641                           tblptru	equ	0xFF8
  1642                           tblptrh	equ	0xFF7
  1643                           tblptrl	equ	0xFF6
  1644                           tablat	equ	0xFF5
  1645                           intcon	equ	0xFF2
  1646                           postinc0	equ	0xFEE
  1647                           wreg	equ	0xFE8
  1648                           postdec1	equ	0xFE5
  1649                           fsr1l	equ	0xFE1
  1650                           status	equ	0xFD8
  1651                           
  1652 ;; *************** function _OpenPWM1 *****************
  1653 ;; Defined at:
  1654 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw1open.c"
  1655 ;; Parameters:    Size  Location     Type
  1656 ;;  period          1    wreg     unsigned char 
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;  period          1    0[BANK0 ] unsigned char 
  1659 ;; Return value:  Size  Location     Type
  1660 ;;		None               void
  1661 ;; Registers used:
  1662 ;;		wreg, status,2, status,0
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1668 ;;      Params:         0       0       0       0       0       0       0       0       0
  1669 ;;      Locals:         0       1       0       0       0       0       0       0       0
  1670 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1671 ;;      Totals:         0       1       0       0       0       0       0       0       0
  1672 ;;Total ram usage:        1 bytes
  1673 ;; Hardware stack levels used:    1
  1674 ;; Hardware stack levels required when called:    5
  1675 ;; This function calls:
  1676 ;;		Nothing
  1677 ;; This function is called by:
  1678 ;;		_PWM_init1
  1679 ;; This function uses a non-reentrant model
  1680 ;;
  1681                           
  1682                           	psect	text5
  1683  001D78                     __ptext5:
  1684                           	opt stack 0
  1685  001D78                     _OpenPWM1:
  1686                           	opt stack 23
  1687                           
  1688                           ;incstack = 0
  1689                           ;OpenPWM1@period stored from wreg
  1690  001D78  0100               	movlb	0	; () banked
  1691  001D7A  6FAC               	movwf	OpenPWM1@period& (0+255),b
  1692                           
  1693                           ; BSR set to: 0
  1694  001D7C  0E0C               	movlw	12
  1695  001D7E  12BD               	iorwf	4029,f,c	;volatile
  1696                           
  1697                           ; BSR set to: 0
  1698  001D80  9494               	bcf	3988,2,c	;volatile
  1699                           
  1700                           ; BSR set to: 0
  1701  001D82  94CA               	bcf	4042,2,c	;volatile
  1702                           
  1703                           ; BSR set to: 0
  1704  001D84  C0AC  FFCB         	movff	OpenPWM1@period,4043	;volatile
  1705                           
  1706                           ; BSR set to: 0
  1707  001D88  84CA               	bsf	4042,2,c	;volatile
  1708                           
  1709                           ; BSR set to: 0
  1710  001D8A  0012               	return	
  1711  001D8C                     __end_of_OpenPWM1:
  1712                           	opt stack 0
  1713                           tblptru	equ	0xFF8
  1714                           tblptrh	equ	0xFF7
  1715                           tblptrl	equ	0xFF6
  1716                           tablat	equ	0xFF5
  1717                           intcon	equ	0xFF2
  1718                           postinc0	equ	0xFEE
  1719                           wreg	equ	0xFE8
  1720                           postdec1	equ	0xFE5
  1721                           fsr1l	equ	0xFE1
  1722                           status	equ	0xFD8
  1723                           
  1724 ;; *************** function _BT_Init *****************
  1725 ;; Defined at:
  1726 ;;		line 16 in file "Bluetooth.c"
  1727 ;; Parameters:    Size  Location     Type
  1728 ;;		None
  1729 ;; Auto vars:     Size  Location     Type
  1730 ;;  nameBT         18   14[BANK0 ] unsigned char [18]
  1731 ;; Return value:  Size  Location     Type
  1732 ;;		None               void
  1733 ;; Registers used:
  1734 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1735 ;; Tracked objects:
  1736 ;;		On entry : 0/0
  1737 ;;		On exit  : 0/0
  1738 ;;		Unchanged: 0/0
  1739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1740 ;;      Params:         0       0       0       0       0       0       0       0       0
  1741 ;;      Locals:         0      18       0       0       0       0       0       0       0
  1742 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1743 ;;      Totals:         0      18       0       0       0       0       0       0       0
  1744 ;;Total ram usage:       18 bytes
  1745 ;; Hardware stack levels used:    1
  1746 ;; Hardware stack levels required when called:    9
  1747 ;; This function calls:
  1748 ;;		_Pause_seg
  1749 ;;		_SendBlueToothCommand
  1750 ;;		_UART1_Init
  1751 ;; This function is called by:
  1752 ;;		_Inicializa_Driveby
  1753 ;;		_EstadoBluetooth
  1754 ;; This function uses a non-reentrant model
  1755 ;;
  1756                           
  1757                           	psect	text6
  1758  00128A                     __ptext6:
  1759                           	opt stack 0
  1760  00128A                     _BT_Init:
  1761                           	opt stack 20
  1762                           
  1763                           ;Bluetooth.c: 18: UART1_Init(51);
  1764                           
  1765                           ; BSR set to: 0
  1766                           ;incstack = 0
  1767  00128A  0E33               	movlw	51
  1768  00128C  ECB1  F00E         	call	_UART1_Init
  1769                           
  1770                           ;Bluetooth.c: 21: Pause_seg(1);
  1771  001290  0E01               	movlw	1
  1772  001292  ECC8  F00C         	call	_Pause_seg
  1773                           
  1774                           ;Bluetooth.c: 22: char nameBT[18] = {
  1775                           ;Bluetooth.c: 23: "AT+NAME=robot\r\n\0"
  1776                           ;Bluetooth.c: 24: };
  1777  001296  EE20  F0E4         	lfsr	2,BT_Init@F5675
  1778  00129A  EE10  F0BA         	lfsr	1,BT_Init@nameBT
  1779  00129E  0E12               	movlw	18
  1780  0012A0                     u2481:
  1781  0012A0  CFDE FFE6          	movff	postinc2,postinc1
  1782  0012A4  2EE8               	decfsz	wreg,f,c
  1783  0012A6  D7FC               	goto	u2481
  1784                           
  1785                           ;Bluetooth.c: 27: SendBlueToothCommand("AT+ROLE=0\r\n", 11);
  1786  0012A8  0E08               	movlw	high STR_1
  1787  0012AA  0100               	movlb	0	; () banked
  1788  0012AC  6FB7               	movwf	(SendBlueToothCommand@command+1)& (0+255),b
  1789  0012AE  0E52               	movlw	low STR_1
  1790  0012B0  0100               	movlb	0	; () banked
  1791  0012B2  6FB6               	movwf	SendBlueToothCommand@command& (0+255),b
  1792  0012B4  0E00               	movlw	0
  1793  0012B6  0100               	movlb	0	; () banked
  1794  0012B8  6FB9               	movwf	(SendBlueToothCommand@total+1)& (0+255),b
  1795  0012BA  0E0B               	movlw	11
  1796  0012BC  0100               	movlb	0	; () banked
  1797  0012BE  6FB8               	movwf	SendBlueToothCommand@total& (0+255),b
  1798  0012C0  ECA4  F00E         	call	_SendBlueToothCommand	;wreg free
  1799                           
  1800                           ;Bluetooth.c: 29: Pause_seg(1);
  1801  0012C4  0E01               	movlw	1
  1802  0012C6  ECC8  F00C         	call	_Pause_seg
  1803                           
  1804                           ;Bluetooth.c: 32: SendBlueToothCommand((const char * ) nameBT, sizeof(nameBT));
  1805  0012CA  0100               	movlb	0	; () banked
  1806  0012CC  0E00               	movlw	high BT_Init@nameBT
  1807  0012CE  0100               	movlb	0	; () banked
  1808  0012D0  6FB7               	movwf	(SendBlueToothCommand@command+1)& (0+255),b
  1809  0012D2  0100               	movlb	0	; () banked
  1810  0012D4  0EBA               	movlw	low BT_Init@nameBT
  1811  0012D6  0100               	movlb	0	; () banked
  1812  0012D8  6FB6               	movwf	SendBlueToothCommand@command& (0+255),b
  1813  0012DA  0E00               	movlw	0
  1814  0012DC  0100               	movlb	0	; () banked
  1815  0012DE  6FB9               	movwf	(SendBlueToothCommand@total+1)& (0+255),b
  1816  0012E0  0E12               	movlw	18
  1817  0012E2  0100               	movlb	0	; () banked
  1818  0012E4  6FB8               	movwf	SendBlueToothCommand@total& (0+255),b
  1819  0012E6  ECA4  F00E         	call	_SendBlueToothCommand	;wreg free
  1820                           
  1821                           ;Bluetooth.c: 33: Pause_seg(2);
  1822  0012EA  0E02               	movlw	2
  1823  0012EC  ECC8  F00C         	call	_Pause_seg
  1824                           
  1825                           ;Bluetooth.c: 35: SendBlueToothCommand("AT+PSWD=0000\r\n", 14);
  1826  0012F0  0E08               	movlw	high STR_2
  1827  0012F2  0100               	movlb	0	; () banked
  1828  0012F4  6FB7               	movwf	(SendBlueToothCommand@command+1)& (0+255),b
  1829  0012F6  0E0B               	movlw	low STR_2
  1830  0012F8  0100               	movlb	0	; () banked
  1831  0012FA  6FB6               	movwf	SendBlueToothCommand@command& (0+255),b
  1832  0012FC  0E00               	movlw	0
  1833  0012FE  0100               	movlb	0	; () banked
  1834  001300  6FB9               	movwf	(SendBlueToothCommand@total+1)& (0+255),b
  1835  001302  0E0E               	movlw	14
  1836  001304  0100               	movlb	0	; () banked
  1837  001306  6FB8               	movwf	SendBlueToothCommand@total& (0+255),b
  1838  001308  ECA4  F00E         	call	_SendBlueToothCommand	;wreg free
  1839                           
  1840                           ;Bluetooth.c: 36: Pause_seg(2);
  1841  00130C  0E02               	movlw	2
  1842  00130E  ECC8  F00C         	call	_Pause_seg
  1843                           
  1844                           ;Bluetooth.c: 40: SendBlueToothCommand("AT+INQ\r\n", 8);
  1845  001312  0E08               	movlw	high STR_3
  1846  001314  0100               	movlb	0	; () banked
  1847  001316  6FB7               	movwf	(SendBlueToothCommand@command+1)& (0+255),b
  1848  001318  0E5E               	movlw	low STR_3
  1849  00131A  0100               	movlb	0	; () banked
  1850  00131C  6FB6               	movwf	SendBlueToothCommand@command& (0+255),b
  1851  00131E  0E00               	movlw	0
  1852  001320  0100               	movlb	0	; () banked
  1853  001322  6FB9               	movwf	(SendBlueToothCommand@total+1)& (0+255),b
  1854  001324  0E08               	movlw	8
  1855  001326  0100               	movlb	0	; () banked
  1856  001328  6FB8               	movwf	SendBlueToothCommand@total& (0+255),b
  1857  00132A  ECA4  F00E         	call	_SendBlueToothCommand	;wreg free
  1858                           
  1859                           ;Bluetooth.c: 41: Pause_seg(2);
  1860  00132E  0E02               	movlw	2
  1861  001330  ECC8  F00C         	call	_Pause_seg
  1862                           
  1863                           ;Bluetooth.c: 43: SendBlueToothCommand("AT+INQ\r\n", 8);
  1864  001334  0E08               	movlw	high STR_3
  1865  001336  0100               	movlb	0	; () banked
  1866  001338  6FB7               	movwf	(SendBlueToothCommand@command+1)& (0+255),b
  1867  00133A  0E5E               	movlw	low STR_3
  1868  00133C  0100               	movlb	0	; () banked
  1869  00133E  6FB6               	movwf	SendBlueToothCommand@command& (0+255),b
  1870  001340  0E00               	movlw	0
  1871  001342  0100               	movlb	0	; () banked
  1872  001344  6FB9               	movwf	(SendBlueToothCommand@total+1)& (0+255),b
  1873  001346  0E08               	movlw	8
  1874  001348  0100               	movlb	0	; () banked
  1875  00134A  6FB8               	movwf	SendBlueToothCommand@total& (0+255),b
  1876  00134C  ECA4  F00E         	call	_SendBlueToothCommand	;wreg free
  1877                           
  1878                           ;Bluetooth.c: 44: Pause_seg(2);
  1879  001350  0E02               	movlw	2
  1880  001352  ECC8  F00C         	call	_Pause_seg
  1881                           
  1882                           ;Bluetooth.c: 45: return;
  1883  001356  0012               	return	
  1884  001358                     __end_of_BT_Init:
  1885                           	opt stack 0
  1886                           tblptru	equ	0xFF8
  1887                           tblptrh	equ	0xFF7
  1888                           tblptrl	equ	0xFF6
  1889                           tablat	equ	0xFF5
  1890                           intcon	equ	0xFF2
  1891                           postinc0	equ	0xFEE
  1892                           wreg	equ	0xFE8
  1893                           postinc1	equ	0xFE6
  1894                           postdec1	equ	0xFE5
  1895                           fsr1l	equ	0xFE1
  1896                           postinc2	equ	0xFDE
  1897                           status	equ	0xFD8
  1898                           
  1899 ;; *************** function _SendBlueToothCommand *****************
  1900 ;; Defined at:
  1901 ;;		line 48 in file "Bluetooth.c"
  1902 ;; Parameters:    Size  Location     Type
  1903 ;;  command         2   10[BANK0 ] PTR const unsigned char 
  1904 ;;		 -> STR_4(9), STR_3(9), STR_2(15), STR_1(12), 
  1905 ;;		 -> BT_Init@nameBT(18), 
  1906 ;;  total           2   12[BANK0 ] unsigned int 
  1907 ;; Auto vars:     Size  Location     Type
  1908 ;;		None
  1909 ;; Return value:  Size  Location     Type
  1910 ;;		None               void
  1911 ;; Registers used:
  1912 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1913 ;; Tracked objects:
  1914 ;;		On entry : 0/0
  1915 ;;		On exit  : 0/0
  1916 ;;		Unchanged: 0/0
  1917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1918 ;;      Params:         0       4       0       0       0       0       0       0       0
  1919 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1920 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1921 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1922 ;;Total ram usage:        4 bytes
  1923 ;; Hardware stack levels used:    1
  1924 ;; Hardware stack levels required when called:    8
  1925 ;; This function calls:
  1926 ;;		_putSTRINGU1
  1927 ;; This function is called by:
  1928 ;;		_BT_Init
  1929 ;; This function uses a non-reentrant model
  1930 ;;
  1931                           
  1932                           	psect	text7
  1933  001D48                     __ptext7:
  1934                           	opt stack 0
  1935  001D48                     _SendBlueToothCommand:
  1936                           	opt stack 20
  1937                           
  1938                           ;Bluetooth.c: 49: putSTRINGU1(command, total);
  1939                           
  1940                           ;incstack = 0
  1941  001D48  0100               	movlb	0	; () banked
  1942  001D4A  C0B7  F0AF         	movff	SendBlueToothCommand@command+1,putSTRINGU1@dato+1
  1943  001D4E  0100               	movlb	0	; () banked
  1944  001D50  C0B6  F0AE         	movff	SendBlueToothCommand@command,putSTRINGU1@dato
  1945  001D54  C0B8  F0B0         	movff	SendBlueToothCommand@total,putSTRINGU1@total
  1946  001D58  C0B9  F0B1         	movff	SendBlueToothCommand@total+1,putSTRINGU1@total+1
  1947  001D5C  ECAC  F009         	call	_putSTRINGU1	;wreg free
  1948                           
  1949                           ;Bluetooth.c: 50: return;
  1950  001D60  0012               	return	
  1951  001D62                     __end_of_SendBlueToothCommand:
  1952                           	opt stack 0
  1953                           tblptru	equ	0xFF8
  1954                           tblptrh	equ	0xFF7
  1955                           tblptrl	equ	0xFF6
  1956                           tablat	equ	0xFF5
  1957                           intcon	equ	0xFF2
  1958                           postinc0	equ	0xFEE
  1959                           wreg	equ	0xFE8
  1960                           postinc1	equ	0xFE6
  1961                           postdec1	equ	0xFE5
  1962                           fsr1l	equ	0xFE1
  1963                           postinc2	equ	0xFDE
  1964                           status	equ	0xFD8
  1965                           
  1966 ;; *************** function _putSTRINGU1 *****************
  1967 ;; Defined at:
  1968 ;;		line 18 in file "UART1.c"
  1969 ;; Parameters:    Size  Location     Type
  1970 ;;  dato            2    2[BANK0 ] PTR const unsigned char 
  1971 ;;		 -> STR_4(9), STR_3(9), STR_2(15), STR_1(12), 
  1972 ;;		 -> BT_Init@nameBT(18), 
  1973 ;;  total           2    4[BANK0 ] unsigned int 
  1974 ;; Auto vars:     Size  Location     Type
  1975 ;;  cont            1    9[BANK0 ] unsigned char 
  1976 ;;  last            1    8[BANK0 ] unsigned char 
  1977 ;; Return value:  Size  Location     Type
  1978 ;;		None               void
  1979 ;; Registers used:
  1980 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1981 ;; Tracked objects:
  1982 ;;		On entry : 0/0
  1983 ;;		On exit  : 0/0
  1984 ;;		Unchanged: 0/0
  1985 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1986 ;;      Params:         0       4       0       0       0       0       0       0       0
  1987 ;;      Locals:         0       2       0       0       0       0       0       0       0
  1988 ;;      Temps:          0       2       0       0       0       0       0       0       0
  1989 ;;      Totals:         0       8       0       0       0       0       0       0       0
  1990 ;;Total ram usage:        8 bytes
  1991 ;; Hardware stack levels used:    1
  1992 ;; Hardware stack levels required when called:    7
  1993 ;; This function calls:
  1994 ;;		_putcTxU1
  1995 ;; This function is called by:
  1996 ;;		_SendBlueToothCommand
  1997 ;; This function uses a non-reentrant model
  1998 ;;
  1999                           
  2000                           	psect	text8
  2001  001358                     __ptext8:
  2002                           	opt stack 0
  2003  001358                     _putSTRINGU1:
  2004                           	opt stack 20
  2005                           
  2006                           ;UART1.c: 19: unsigned char cont,last;
  2007                           ;UART1.c: 21: for(cont=0,last=0;cont<total;cont++){
  2008                           
  2009                           ;incstack = 0
  2010  001358  0E00               	movlw	0
  2011  00135A  0100               	movlb	0	; () banked
  2012  00135C  6FB5               	movwf	putSTRINGU1@cont& (0+255),b
  2013  00135E  0E00               	movlw	0
  2014  001360  0100               	movlb	0	; () banked
  2015  001362  6FB4               	movwf	putSTRINGU1@last& (0+255),b
  2016  001364  D025               	goto	l2408
  2017  001366                     l2402:
  2018                           
  2019                           ; BSR set to: 0
  2020                           ;UART1.c: 22: if(dato[cont]!='\0') last=cont;
  2021  001366  0100               	movlb	0	; () banked
  2022  001368  51B5               	movf	putSTRINGU1@cont& (0+255),w,b
  2023  00136A  0D01               	mullw	1
  2024  00136C  0100               	movlb	0	; () banked
  2025  00136E  C0AE  F0B2         	movff	putSTRINGU1@dato,??_putSTRINGU1
  2026  001372  0100               	movlb	0	; () banked
  2027  001374  C0AF  F0B3         	movff	putSTRINGU1@dato+1,??_putSTRINGU1+1
  2028  001378  50F3               	movf	prodl,w,c
  2029  00137A  0100               	movlb	0	; () banked
  2030  00137C  27B2               	addwf	??_putSTRINGU1& (0+255),f,b
  2031  00137E  50F4               	movf	prodh,w,c
  2032  001380  0100               	movlb	0	; () banked
  2033  001382  23B3               	addwfc	(??_putSTRINGU1+1)& (0+255),f,b
  2034  001384  C0B2  FFF6         	movff	??_putSTRINGU1,tblptrl
  2035  001388  C0B3  FFF7         	movff	??_putSTRINGU1+1,tblptrh
  2036  00138C  6AF8               	clrf	tblptru,c
  2037  00138E  0E07               	movlw	(high __ramtop+-1)
  2038  001390  64F7               	cpfsgt	tblptrh,c
  2039  001392  D003               	bra	u1927
  2040  001394  0008               	tblrd		*
  2041  001396  50F5               	movf	tablat,w,c
  2042  001398  D005               	bra	u1920
  2043  00139A                     u1927:
  2044  00139A  CFF6 FFE9          	movff	tblptrl,fsr0l
  2045  00139E  CFF7 FFEA          	movff	tblptrh,fsr0h
  2046  0013A2  50EF               	movf	indf0,w,c
  2047  0013A4                     u1920:
  2048  0013A4  0900               	iorlw	0
  2049  0013A6  A4D8               	btfss	status,2,c
  2050  0013A8  C0B5  F0B4         	movff	putSTRINGU1@cont,putSTRINGU1@last
  2051  0013AC  0100               	movlb	0	; () banked
  2052  0013AE  2BB5               	incf	putSTRINGU1@cont& (0+255),f,b
  2053  0013B0                     l2408:
  2054                           
  2055                           ; BSR set to: 0
  2056  0013B0  0100               	movlb	0	; () banked
  2057  0013B2  51B5               	movf	putSTRINGU1@cont& (0+255),w,b
  2058  0013B4  0100               	movlb	0	; () banked
  2059  0013B6  6FB2               	movwf	??_putSTRINGU1& (0+255),b
  2060  0013B8  6BB3               	clrf	(??_putSTRINGU1+1)& (0+255),b
  2061  0013BA  0100               	movlb	0	; () banked
  2062  0013BC  51B0               	movf	putSTRINGU1@total& (0+255),w,b
  2063  0013BE  0100               	movlb	0	; () banked
  2064  0013C0  5DB2               	subwf	??_putSTRINGU1& (0+255),w,b
  2065  0013C2  0100               	movlb	0	; () banked
  2066  0013C4  51B1               	movf	(putSTRINGU1@total+1)& (0+255),w,b
  2067  0013C6  0100               	movlb	0	; () banked
  2068  0013C8  59B3               	subwfb	(??_putSTRINGU1+1)& (0+255),w,b
  2069  0013CA  A0D8               	btfss	status,0,c
  2070  0013CC  D7CC               	goto	l2402
  2071                           
  2072                           ; BSR set to: 0
  2073                           ;UART1.c: 23: }
  2074                           ;UART1.c: 25: for (cont=0;cont<=last;cont++){
  2075                           
  2076                           ; BSR set to: 0
  2077  0013CE  0E00               	movlw	0
  2078  0013D0  0100               	movlb	0	; () banked
  2079  0013D2  6FB5               	movwf	putSTRINGU1@cont& (0+255),b
  2080  0013D4  D019               	goto	l2418
  2081  0013D6                     l2412:
  2082                           
  2083                           ; BSR set to: 0
  2084                           ;UART1.c: 26: putcTxU1(*dato++);
  2085  0013D6  0100               	movlb	0	; () banked
  2086  0013D8  C0AE  FFF6         	movff	putSTRINGU1@dato,tblptrl
  2087  0013DC  0100               	movlb	0	; () banked
  2088  0013DE  C0AF  FFF7         	movff	putSTRINGU1@dato+1,tblptrh
  2089  0013E2  6AF8               	clrf	tblptru,c
  2090  0013E4  0E07               	movlw	(high __ramtop+-1)
  2091  0013E6  64F7               	cpfsgt	tblptrh,c
  2092  0013E8  D003               	bra	u1957
  2093  0013EA  0008               	tblrd		*
  2094  0013EC  50F5               	movf	tablat,w,c
  2095  0013EE  D005               	bra	u1950
  2096  0013F0                     u1957:
  2097  0013F0  CFF6 FFE9          	movff	tblptrl,fsr0l
  2098  0013F4  CFF7 FFEA          	movff	tblptrh,fsr0h
  2099  0013F8  50EF               	movf	indf0,w,c
  2100  0013FA                     u1950:
  2101  0013FA  ECD9  F00E         	call	_putcTxU1
  2102  0013FE  0100               	movlb	0	; () banked
  2103  001400  4BAE               	infsnz	putSTRINGU1@dato& (0+255),f,b
  2104  001402  2BAF               	incf	(putSTRINGU1@dato+1)& (0+255),f,b
  2105                           
  2106                           ; BSR set to: 0
  2107  001404  0100               	movlb	0	; () banked
  2108  001406  2BB5               	incf	putSTRINGU1@cont& (0+255),f,b
  2109  001408                     l2418:
  2110                           
  2111                           ; BSR set to: 0
  2112  001408  0100               	movlb	0	; () banked
  2113  00140A  51B5               	movf	putSTRINGU1@cont& (0+255),w,b
  2114  00140C  0100               	movlb	0	; () banked
  2115  00140E  5DB4               	subwf	putSTRINGU1@last& (0+255),w,b
  2116  001410  A0D8               	btfss	status,0,c
  2117                           
  2118                           ; BSR set to: 0
  2119                           
  2120                           ; BSR set to: 0
  2121  001412  0012               	return	
  2122  001414  D7E0               	goto	l2412
  2123  001416                     __end_of_putSTRINGU1:
  2124                           	opt stack 0
  2125                           tblptru	equ	0xFF8
  2126                           tblptrh	equ	0xFF7
  2127                           tblptrl	equ	0xFF6
  2128                           tablat	equ	0xFF5
  2129                           prodh	equ	0xFF4
  2130                           prodl	equ	0xFF3
  2131                           intcon	equ	0xFF2
  2132                           indf0	equ	0xFEF
  2133                           postinc0	equ	0xFEE
  2134                           fsr0h	equ	0xFEA
  2135                           fsr0l	equ	0xFE9
  2136                           wreg	equ	0xFE8
  2137                           postinc1	equ	0xFE6
  2138                           postdec1	equ	0xFE5
  2139                           fsr1l	equ	0xFE1
  2140                           postinc2	equ	0xFDE
  2141                           status	equ	0xFD8
  2142                           
  2143 ;; *************** function _putcTxU1 *****************
  2144 ;; Defined at:
  2145 ;;		line 12 in file "UART1.c"
  2146 ;; Parameters:    Size  Location     Type
  2147 ;;  character       1    wreg     unsigned char 
  2148 ;; Auto vars:     Size  Location     Type
  2149 ;;  character       1    1[BANK0 ] unsigned char 
  2150 ;; Return value:  Size  Location     Type
  2151 ;;		None               void
  2152 ;; Registers used:
  2153 ;;		wreg, status,2, cstack
  2154 ;; Tracked objects:
  2155 ;;		On entry : 0/0
  2156 ;;		On exit  : 0/0
  2157 ;;		Unchanged: 0/0
  2158 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2159 ;;      Params:         0       0       0       0       0       0       0       0       0
  2160 ;;      Locals:         0       1       0       0       0       0       0       0       0
  2161 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2162 ;;      Totals:         0       1       0       0       0       0       0       0       0
  2163 ;;Total ram usage:        1 bytes
  2164 ;; Hardware stack levels used:    1
  2165 ;; Hardware stack levels required when called:    6
  2166 ;; This function calls:
  2167 ;;		_WriteUSART
  2168 ;; This function is called by:
  2169 ;;		_putSTRINGU1
  2170 ;; This function uses a non-reentrant model
  2171 ;;
  2172                           
  2173                           	psect	text9
  2174  001DB2                     __ptext9:
  2175                           	opt stack 0
  2176  001DB2                     _putcTxU1:
  2177                           	opt stack 20
  2178                           
  2179                           ; BSR set to: 0
  2180                           ;incstack = 0
  2181                           ;putcTxU1@character stored from wreg
  2182  001DB2  0100               	movlb	0	; () banked
  2183  001DB4  6FAD               	movwf	putcTxU1@character& (0+255),b
  2184                           
  2185                           ; BSR set to: 0
  2186                           ;UART1.c: 14: WriteUSART(character);
  2187  001DB6  0100               	movlb	0	; () banked
  2188  001DB8  51AD               	movf	putcTxU1@character& (0+255),w,b
  2189  001DBA  ECC6  F00E         	call	_WriteUSART
  2190  001DBE                     l223:
  2191  001DBE  B2AC               	btfsc	4012,1,c	;volatile
  2192  001DC0  0012               	return	
  2193  001DC2  D7FD               	goto	l223
  2194  001DC4                     __end_of_putcTxU1:
  2195                           	opt stack 0
  2196                           tblptru	equ	0xFF8
  2197                           tblptrh	equ	0xFF7
  2198                           tblptrl	equ	0xFF6
  2199                           tablat	equ	0xFF5
  2200                           prodh	equ	0xFF4
  2201                           prodl	equ	0xFF3
  2202                           intcon	equ	0xFF2
  2203                           indf0	equ	0xFEF
  2204                           postinc0	equ	0xFEE
  2205                           fsr0h	equ	0xFEA
  2206                           fsr0l	equ	0xFE9
  2207                           wreg	equ	0xFE8
  2208                           postinc1	equ	0xFE6
  2209                           postdec1	equ	0xFE5
  2210                           fsr1l	equ	0xFE1
  2211                           postinc2	equ	0xFDE
  2212                           status	equ	0xFD8
  2213                           
  2214 ;; *************** function _Pause_seg *****************
  2215 ;; Defined at:
  2216 ;;		line 18 in file "Retardos.c"
  2217 ;; Parameters:    Size  Location     Type
  2218 ;;  x               1    wreg     unsigned char 
  2219 ;; Auto vars:     Size  Location     Type
  2220 ;;  x               1    5[BANK0 ] unsigned char 
  2221 ;;  i               1    6[BANK0 ] unsigned char 
  2222 ;; Return value:  Size  Location     Type
  2223 ;;		None               void
  2224 ;; Registers used:
  2225 ;;		wreg, status,2, status,0, cstack
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2231 ;;      Params:         0       0       0       0       0       0       0       0       0
  2232 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2233 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2234 ;;      Totals:         0       2       0       0       0       0       0       0       0
  2235 ;;Total ram usage:        2 bytes
  2236 ;; Hardware stack levels used:    1
  2237 ;; Hardware stack levels required when called:    6
  2238 ;; This function calls:
  2239 ;;		_Pause_ms
  2240 ;; This function is called by:
  2241 ;;		_BT_Init
  2242 ;;		_Inicializa_Driveby
  2243 ;;		_EstadoBluetooth
  2244 ;; This function uses a non-reentrant model
  2245 ;;
  2246                           
  2247                           	psect	text10
  2248  001990                     __ptext10:
  2249                           	opt stack 0
  2250  001990                     _Pause_seg:
  2251                           	opt stack 23
  2252                           
  2253                           ;incstack = 0
  2254                           ;Pause_seg@x stored from wreg
  2255  001990  0100               	movlb	0	; () banked
  2256  001992  6FB1               	movwf	Pause_seg@x& (0+255),b
  2257                           
  2258                           ; BSR set to: 0
  2259                           ;Retardos.c: 19: unsigned char i=0;
  2260  001994  0E00               	movlw	0
  2261  001996  0100               	movlb	0	; () banked
  2262  001998  6FB2               	movwf	Pause_seg@i& (0+255),b
  2263                           
  2264                           ;Retardos.c: 20: for(i=0;i<=x;i++){
  2265  00199A  0E00               	movlw	0
  2266  00199C  0100               	movlb	0	; () banked
  2267  00199E  6FB2               	movwf	Pause_seg@i& (0+255),b
  2268  0019A0  D022               	goto	l2576
  2269  0019A2                     l2572:
  2270                           
  2271                           ; BSR set to: 0
  2272                           ;Retardos.c: 21: Pause_ms(250);Pause_ms(250);
  2273  0019A2  0E00               	movlw	0
  2274  0019A4  0100               	movlb	0	; () banked
  2275  0019A6  6FAD               	movwf	(Pause_ms@x+1)& (0+255),b
  2276  0019A8  0EFA               	movlw	250
  2277  0019AA  0100               	movlb	0	; () banked
  2278  0019AC  6FAC               	movwf	Pause_ms@x& (0+255),b
  2279  0019AE  ECA3  F00D         	call	_Pause_ms	;wreg free
  2280  0019B2  0E00               	movlw	0
  2281  0019B4  0100               	movlb	0	; () banked
  2282  0019B6  6FAD               	movwf	(Pause_ms@x+1)& (0+255),b
  2283  0019B8  0EFA               	movlw	250
  2284  0019BA  0100               	movlb	0	; () banked
  2285  0019BC  6FAC               	movwf	Pause_ms@x& (0+255),b
  2286  0019BE  ECA3  F00D         	call	_Pause_ms	;wreg free
  2287                           
  2288                           ;Retardos.c: 22: Pause_ms(250);Pause_ms(250);
  2289  0019C2  0E00               	movlw	0
  2290  0019C4  0100               	movlb	0	; () banked
  2291  0019C6  6FAD               	movwf	(Pause_ms@x+1)& (0+255),b
  2292  0019C8  0EFA               	movlw	250
  2293  0019CA  0100               	movlb	0	; () banked
  2294  0019CC  6FAC               	movwf	Pause_ms@x& (0+255),b
  2295  0019CE  ECA3  F00D         	call	_Pause_ms	;wreg free
  2296  0019D2  0E00               	movlw	0
  2297  0019D4  0100               	movlb	0	; () banked
  2298  0019D6  6FAD               	movwf	(Pause_ms@x+1)& (0+255),b
  2299  0019D8  0EFA               	movlw	250
  2300  0019DA  0100               	movlb	0	; () banked
  2301  0019DC  6FAC               	movwf	Pause_ms@x& (0+255),b
  2302  0019DE  ECA3  F00D         	call	_Pause_ms	;wreg free
  2303  0019E2  0100               	movlb	0	; () banked
  2304  0019E4  2BB2               	incf	Pause_seg@i& (0+255),f,b
  2305  0019E6                     l2576:
  2306                           
  2307                           ; BSR set to: 0
  2308  0019E6  0100               	movlb	0	; () banked
  2309  0019E8  51B2               	movf	Pause_seg@i& (0+255),w,b
  2310  0019EA  0100               	movlb	0	; () banked
  2311  0019EC  5DB1               	subwf	Pause_seg@x& (0+255),w,b
  2312  0019EE  A0D8               	btfss	status,0,c
  2313                           
  2314                           ; BSR set to: 0
  2315                           
  2316                           ; BSR set to: 0
  2317  0019F0  0012               	return	
  2318  0019F2  D7D7               	goto	l2572
  2319  0019F4                     __end_of_Pause_seg:
  2320                           	opt stack 0
  2321                           tblptru	equ	0xFF8
  2322                           tblptrh	equ	0xFF7
  2323                           tblptrl	equ	0xFF6
  2324                           tablat	equ	0xFF5
  2325                           prodh	equ	0xFF4
  2326                           prodl	equ	0xFF3
  2327                           intcon	equ	0xFF2
  2328                           indf0	equ	0xFEF
  2329                           postinc0	equ	0xFEE
  2330                           fsr0h	equ	0xFEA
  2331                           fsr0l	equ	0xFE9
  2332                           wreg	equ	0xFE8
  2333                           postinc1	equ	0xFE6
  2334                           postdec1	equ	0xFE5
  2335                           fsr1l	equ	0xFE1
  2336                           postinc2	equ	0xFDE
  2337                           status	equ	0xFD8
  2338                           
  2339 ;; *************** function _Pause_ms *****************
  2340 ;; Defined at:
  2341 ;;		line 11 in file "Retardos.c"
  2342 ;; Parameters:    Size  Location     Type
  2343 ;;  x               2    0[BANK0 ] unsigned int 
  2344 ;; Auto vars:     Size  Location     Type
  2345 ;;  i               2    3[BANK0 ] unsigned int 
  2346 ;; Return value:  Size  Location     Type
  2347 ;;		None               void
  2348 ;; Registers used:
  2349 ;;		wreg, status,2, status,0
  2350 ;; Tracked objects:
  2351 ;;		On entry : 0/0
  2352 ;;		On exit  : 0/0
  2353 ;;		Unchanged: 0/0
  2354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2355 ;;      Params:         0       2       0       0       0       0       0       0       0
  2356 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2357 ;;      Temps:          0       1       0       0       0       0       0       0       0
  2358 ;;      Totals:         0       5       0       0       0       0       0       0       0
  2359 ;;Total ram usage:        5 bytes
  2360 ;; Hardware stack levels used:    1
  2361 ;; Hardware stack levels required when called:    5
  2362 ;; This function calls:
  2363 ;;		Nothing
  2364 ;; This function is called by:
  2365 ;;		_Pause_seg
  2366 ;; This function uses a non-reentrant model
  2367 ;;
  2368                           
  2369                           	psect	text11
  2370  001B46                     __ptext11:
  2371                           	opt stack 0
  2372  001B46                     _Pause_ms:
  2373                           	opt stack 23
  2374                           
  2375                           ;Retardos.c: 12: unsigned int i=0;
  2376                           
  2377                           ; BSR set to: 0
  2378                           ;incstack = 0
  2379  001B46  0E00               	movlw	0
  2380  001B48  0100               	movlb	0	; () banked
  2381  001B4A  6FB0               	movwf	(Pause_ms@i+1)& (0+255),b
  2382  001B4C  0E00               	movlw	0
  2383  001B4E  0100               	movlb	0	; () banked
  2384  001B50  6FAF               	movwf	Pause_ms@i& (0+255),b
  2385                           
  2386                           ;Retardos.c: 13: for(i=0;i<=x;i++){
  2387  001B52  0E00               	movlw	0
  2388  001B54  0100               	movlb	0	; () banked
  2389  001B56  6FB0               	movwf	(Pause_ms@i+1)& (0+255),b
  2390  001B58  0E00               	movlw	0
  2391  001B5A  0100               	movlb	0	; () banked
  2392  001B5C  6FAF               	movwf	Pause_ms@i& (0+255),b
  2393  001B5E  D00B               	goto	l202
  2394  001B60                     l2438:
  2395                           
  2396                           ; BSR set to: 0
  2397                           ;Retardos.c: 14: _delay((unsigned long)((1)*(8000000/4000.0)));
  2398  001B60  0E03               	movlw	3
  2399  001B62  0100               	movlb	0	; () banked
  2400  001B64  6FAE               	movwf	??_Pause_ms& (0+255),b
  2401  001B66  0E98               	movlw	152
  2402  001B68                     u3367:
  2403  001B68  2EE8               	decfsz	wreg,f,c
  2404  001B6A  D7FE               	goto	u3367
  2405  001B6C  2FAE               	decfsz	??_Pause_ms& (0+255),f,b
  2406  001B6E  D7FC               	goto	u3367
  2407  001B70  0100               	movlb	0	; () banked
  2408  001B72  4BAF               	infsnz	Pause_ms@i& (0+255),f,b
  2409  001B74  2BB0               	incf	(Pause_ms@i+1)& (0+255),f,b
  2410  001B76                     l202:
  2411                           
  2412                           ; BSR set to: 0
  2413  001B76  0100               	movlb	0	; () banked
  2414  001B78  51AF               	movf	Pause_ms@i& (0+255),w,b
  2415  001B7A  0100               	movlb	0	; () banked
  2416  001B7C  5DAC               	subwf	Pause_ms@x& (0+255),w,b
  2417  001B7E  0100               	movlb	0	; () banked
  2418  001B80  51B0               	movf	(Pause_ms@i+1)& (0+255),w,b
  2419  001B82  0100               	movlb	0	; () banked
  2420  001B84  59AD               	subwfb	(Pause_ms@x+1)& (0+255),w,b
  2421  001B86  A0D8               	btfss	status,0,c
  2422                           
  2423                           ; BSR set to: 0
  2424                           
  2425                           ; BSR set to: 0
  2426  001B88  0012               	return	
  2427  001B8A  D7EA               	goto	l2438
  2428  001B8C                     __end_of_Pause_ms:
  2429                           	opt stack 0
  2430                           tblptru	equ	0xFF8
  2431                           tblptrh	equ	0xFF7
  2432                           tblptrl	equ	0xFF6
  2433                           tablat	equ	0xFF5
  2434                           prodh	equ	0xFF4
  2435                           prodl	equ	0xFF3
  2436                           intcon	equ	0xFF2
  2437                           indf0	equ	0xFEF
  2438                           postinc0	equ	0xFEE
  2439                           fsr0h	equ	0xFEA
  2440                           fsr0l	equ	0xFE9
  2441                           wreg	equ	0xFE8
  2442                           postinc1	equ	0xFE6
  2443                           postdec1	equ	0xFE5
  2444                           fsr1l	equ	0xFE1
  2445                           postinc2	equ	0xFDE
  2446                           status	equ	0xFD8
  2447                           
  2448 ;; *************** function _Comando_Tablet *****************
  2449 ;; Defined at:
  2450 ;;		line 126 in file "Funciones_Db.c"
  2451 ;; Parameters:    Size  Location     Type
  2452 ;;		None
  2453 ;; Auto vars:     Size  Location     Type
  2454 ;;  sensed          2   54[BANK0 ] int 
  2455 ;; Return value:  Size  Location     Type
  2456 ;;		None               void
  2457 ;; Registers used:
  2458 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2459 ;; Tracked objects:
  2460 ;;		On entry : 0/0
  2461 ;;		On exit  : 0/0
  2462 ;;		Unchanged: 0/0
  2463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2464 ;;      Params:         0       0       0       0       0       0       0       0       0
  2465 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2466 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2467 ;;      Totals:         0       2       0       0       0       0       0       0       0
  2468 ;;Total ram usage:        2 bytes
  2469 ;; Hardware stack levels used:    1
  2470 ;; Hardware stack levels required when called:   10
  2471 ;; This function calls:
  2472 ;;		_PWM_DutyCycle1
  2473 ;;		_PWM_DutyCycle2
  2474 ;;		_clrBufferUSART
  2475 ;;		_getCNY70Value
  2476 ;;		_putcBluetoothInt
  2477 ;;		_putcBluetoothString
  2478 ;; This function is called by:
  2479 ;;		_main
  2480 ;; This function uses a non-reentrant model
  2481 ;;
  2482                           
  2483                           	psect	text12
  2484  001846                     __ptext12:
  2485                           	opt stack 0
  2486  001846                     _Comando_Tablet:
  2487                           	opt stack 20
  2488                           
  2489                           ;Funciones_Db.c: 128: int sensed=0;
  2490                           
  2491                           ; BSR set to: 0
  2492                           ;incstack = 0
  2493  001846  0E00               	movlw	0
  2494  001848  0100               	movlb	0	; () banked
  2495  00184A  6FE3               	movwf	(Comando_Tablet@sensed+1)& (0+255),b
  2496  00184C  0E00               	movlw	0
  2497  00184E  0100               	movlb	0	; () banked
  2498  001850  6FE2               	movwf	Comando_Tablet@sensed& (0+255),b
  2499                           
  2500                           ;Funciones_Db.c: 129: switch (BluetoothDato[1]) {
  2501  001852  D020               	goto	l3172
  2502  001854                     l3162:
  2503                           
  2504                           ; BSR set to: 0
  2505                           ;Funciones_Db.c: 143: sensed = getCNY70Value();
  2506  001854  EC75  F006         	call	_getCNY70Value	;wreg free
  2507  001858  0100               	movlb	0	; () banked
  2508  00185A  C0DF  F0E2         	movff	?_getCNY70Value,Comando_Tablet@sensed
  2509  00185E  0100               	movlb	0	; () banked
  2510  001860  C0E0  F0E3         	movff	?_getCNY70Value+1,Comando_Tablet@sensed+1
  2511                           
  2512                           ; BSR set to: 0
  2513                           ;Funciones_Db.c: 145: putcBluetoothInt(sensed);
  2514  001864  C0E2  F0CA         	movff	Comando_Tablet@sensed,putcBluetoothInt@a
  2515  001868  C0E3  F0CB         	movff	Comando_Tablet@sensed+1,putcBluetoothInt@a+1
  2516  00186C  ECE8  F00A         	call	_putcBluetoothInt	;wreg free
  2517                           
  2518                           ;Funciones_Db.c: 146: putcBluetoothString("\n");
  2519  001870  0E08               	movlw	high (STR_2+13)
  2520  001872  0100               	movlb	0	; () banked
  2521  001874  6FB4               	movwf	(putcBluetoothString@a+1)& (0+255),b
  2522  001876  0E18               	movlw	low (STR_2+13)
  2523  001878  0100               	movlb	0	; () banked
  2524  00187A  6FB3               	movwf	putcBluetoothString@a& (0+255),b
  2525  00187C  ECA4  F00A         	call	_putcBluetoothString	;wreg free
  2526                           
  2527                           ;Funciones_Db.c: 147: break;
  2528  001880  D01A               	goto	l3174
  2529  001882                     l3168:
  2530                           
  2531                           ;Funciones_Db.c: 153: PWM_DutyCycle1(BluetoothDato[3]);
  2532  001882  0100               	movlb	0	; () banked
  2533  001884  5168               	movf	(_BluetoothDato+3)& (0+255),w,b
  2534  001886  ECA9  F00B         	call	_PWM_DutyCycle1
  2535                           
  2536                           ;Funciones_Db.c: 154: PWM_DutyCycle2(BluetoothDato[4]);
  2537  00188A  0100               	movlb	0	; () banked
  2538  00188C  5169               	movf	(_BluetoothDato+4)& (0+255),w,b
  2539  00188E  EC6B  F00B         	call	_PWM_DutyCycle2
  2540                           
  2541                           ;Funciones_Db.c: 155: break;
  2542  001892  D011               	goto	l3174
  2543  001894                     l3172:
  2544  001894  0100               	movlb	0	; () banked
  2545  001896  5166               	movf	(_BluetoothDato+1)& (0+255),w,b
  2546                           
  2547                           ; Switch size 1, requested type "space"
  2548                           ; Number of cases is 5, Range of values is 1 to 5
  2549                           ; switch strategies available:
  2550                           ; Name         Instructions Cycles
  2551                           ; simple_byte           16     9 (average)
  2552                           ;	Chosen strategy is simple_byte
  2553  001898  0A01               	xorlw	1	; case 1
  2554  00189A  B4D8               	btfsc	status,2,c
  2555  00189C  D00C               	goto	l3174
  2556  00189E  0A03               	xorlw	3	; case 2
  2557  0018A0  B4D8               	btfsc	status,2,c
  2558  0018A2  D009               	goto	l3174
  2559  0018A4  0A01               	xorlw	1	; case 3
  2560  0018A6  B4D8               	btfsc	status,2,c
  2561  0018A8  D006               	goto	l3174
  2562  0018AA  0A07               	xorlw	7	; case 4
  2563  0018AC  B4D8               	btfsc	status,2,c
  2564  0018AE  D7D2               	goto	l3162
  2565  0018B0  0A01               	xorlw	1	; case 5
  2566  0018B2  B4D8               	btfsc	status,2,c
  2567  0018B4  D7E6               	goto	l3168
  2568  0018B6                     l3174:
  2569                           
  2570                           ;Funciones_Db.c: 160: clrBufferUSART();
  2571  0018B6  ECE8  F00D         	call	_clrBufferUSART	;wreg free
  2572                           
  2573                           ;Funciones_Db.c: 161: return;
  2574  0018BA  0012               	return	
  2575  0018BC                     __end_of_Comando_Tablet:
  2576                           	opt stack 0
  2577                           tblptru	equ	0xFF8
  2578                           tblptrh	equ	0xFF7
  2579                           tblptrl	equ	0xFF6
  2580                           tablat	equ	0xFF5
  2581                           prodh	equ	0xFF4
  2582                           prodl	equ	0xFF3
  2583                           intcon	equ	0xFF2
  2584                           indf0	equ	0xFEF
  2585                           postinc0	equ	0xFEE
  2586                           fsr0h	equ	0xFEA
  2587                           fsr0l	equ	0xFE9
  2588                           wreg	equ	0xFE8
  2589                           postinc1	equ	0xFE6
  2590                           postdec1	equ	0xFE5
  2591                           fsr1l	equ	0xFE1
  2592                           postinc2	equ	0xFDE
  2593                           status	equ	0xFD8
  2594                           
  2595 ;; *************** function _putcBluetoothString *****************
  2596 ;; Defined at:
  2597 ;;		line 90 in file "Bluetooth.c"
  2598 ;; Parameters:    Size  Location     Type
  2599 ;;  a               2    7[BANK0 ] PTR unsigned char 
  2600 ;;		 -> STR_10(2), 
  2601 ;; Auto vars:     Size  Location     Type
  2602 ;;  i               2   11[BANK0 ] int 
  2603 ;; Return value:  Size  Location     Type
  2604 ;;		None               void
  2605 ;; Registers used:
  2606 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2607 ;; Tracked objects:
  2608 ;;		On entry : 0/0
  2609 ;;		On exit  : 0/0
  2610 ;;		Unchanged: 0/0
  2611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2612 ;;      Params:         0       2       0       0       0       0       0       0       0
  2613 ;;      Locals:         0       2       0       0       0       0       0       0       0
  2614 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2615 ;;      Totals:         0       6       0       0       0       0       0       0       0
  2616 ;;Total ram usage:        6 bytes
  2617 ;; Hardware stack levels used:    1
  2618 ;; Hardware stack levels required when called:    7
  2619 ;; This function calls:
  2620 ;;		_UART1_Init
  2621 ;;		_WriteUSART
  2622 ;; This function is called by:
  2623 ;;		_Comando_Tablet
  2624 ;; This function uses a non-reentrant model
  2625 ;;
  2626                           
  2627                           	psect	text13
  2628  001548                     __ptext13:
  2629                           	opt stack 0
  2630  001548                     _putcBluetoothString:
  2631                           	opt stack 22
  2632                           
  2633                           ;Bluetooth.c: 92: int i;
  2634                           ;Bluetooth.c: 93: UART1_Init(51);
  2635                           
  2636                           ;incstack = 0
  2637  001548  0E33               	movlw	51
  2638  00154A  ECB1  F00E         	call	_UART1_Init
  2639                           
  2640                           ;Bluetooth.c: 95: for (i = 0; a[i] != '\0'; i++){
  2641  00154E  0E00               	movlw	0
  2642  001550  0100               	movlb	0	; () banked
  2643  001552  6FB8               	movwf	(putcBluetoothString@i+1)& (0+255),b
  2644  001554  0E00               	movlw	0
  2645  001556  0100               	movlb	0	; () banked
  2646  001558  6FB7               	movwf	putcBluetoothString@i& (0+255),b
  2647  00155A  D01C               	goto	l2850
  2648  00155C                     l2846:
  2649                           
  2650                           ; BSR set to: 0
  2651                           ;Bluetooth.c: 96: WriteUSART(a[i]);
  2652  00155C  0100               	movlb	0	; () banked
  2653  00155E  C0B3  F0B5         	movff	putcBluetoothString@a,??_putcBluetoothString
  2654  001562  0100               	movlb	0	; () banked
  2655  001564  C0B4  F0B6         	movff	putcBluetoothString@a+1,??_putcBluetoothString+1
  2656  001568  0100               	movlb	0	; () banked
  2657  00156A  51B7               	movf	putcBluetoothString@i& (0+255),w,b
  2658  00156C  0100               	movlb	0	; () banked
  2659  00156E  27B5               	addwf	??_putcBluetoothString& (0+255),f,b
  2660  001570  0100               	movlb	0	; () banked
  2661  001572  51B8               	movf	(putcBluetoothString@i+1)& (0+255),w,b
  2662  001574  0100               	movlb	0	; () banked
  2663  001576  23B6               	addwfc	(??_putcBluetoothString+1)& (0+255),f,b
  2664  001578  C0B5  FFF6         	movff	??_putcBluetoothString,tblptrl
  2665  00157C  C0B6  FFF7         	movff	??_putcBluetoothString+1,tblptrh
  2666  001580                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2667  001580  6AF8               	clrf	tblptru,c
  2668  001582                     	endif
  2669  001582                     	if	0	;tblptru may be non-zero
  2670  001582                     	endif
  2671  001582  0008               	tblrd		*
  2672  001584  50F5               	movf	tablat,w,c
  2673  001586  ECC6  F00E         	call	_WriteUSART
  2674  00158A                     l59:
  2675  00158A  A2AC               	btfss	4012,1,c	;volatile
  2676  00158C  D7FE               	goto	l59
  2677  00158E  0100               	movlb	0	; () banked
  2678  001590  4BB7               	infsnz	putcBluetoothString@i& (0+255),f,b
  2679  001592  2BB8               	incf	(putcBluetoothString@i+1)& (0+255),f,b
  2680  001594                     l2850:
  2681                           
  2682                           ; BSR set to: 0
  2683  001594  0100               	movlb	0	; () banked
  2684  001596  C0B3  F0B5         	movff	putcBluetoothString@a,??_putcBluetoothString
  2685  00159A  0100               	movlb	0	; () banked
  2686  00159C  C0B4  F0B6         	movff	putcBluetoothString@a+1,??_putcBluetoothString+1
  2687  0015A0  0100               	movlb	0	; () banked
  2688  0015A2  51B7               	movf	putcBluetoothString@i& (0+255),w,b
  2689  0015A4  0100               	movlb	0	; () banked
  2690  0015A6  27B5               	addwf	??_putcBluetoothString& (0+255),f,b
  2691  0015A8  0100               	movlb	0	; () banked
  2692  0015AA  51B8               	movf	(putcBluetoothString@i+1)& (0+255),w,b
  2693  0015AC  0100               	movlb	0	; () banked
  2694  0015AE  23B6               	addwfc	(??_putcBluetoothString+1)& (0+255),f,b
  2695  0015B0  C0B5  FFF6         	movff	??_putcBluetoothString,tblptrl
  2696  0015B4  C0B6  FFF7         	movff	??_putcBluetoothString+1,tblptrh
  2697  0015B8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  2698  0015B8  6AF8               	clrf	tblptru,c
  2699  0015BA                     	endif
  2700  0015BA                     	if	0	;tblptru may be non-zero
  2701  0015BA                     	endif
  2702  0015BA  0008               	tblrd		*
  2703  0015BC  50F5               	movf	tablat,w,c
  2704  0015BE  0900               	iorlw	0
  2705  0015C0  A4D8               	btfss	status,2,c
  2706  0015C2  D7CC               	goto	l2846
  2707                           
  2708                           ; BSR set to: 0
  2709                           ;Bluetooth.c: 98: }
  2710                           ;Bluetooth.c: 99: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
  2711                           
  2712                           ; BSR set to: 0
  2713  0015C4  0E4F               	movlw	79
  2714  0015C6  16AB               	andwf	4011,f,c	;volatile
  2715                           
  2716                           ; BSR set to: 0
  2717  0015C8  9AAC               	bcf	4012,5,c	;volatile
  2718  0015CA  0ECF               	movlw	207
  2719  0015CC  169D               	andwf	3997,f,c	;volatile
  2720                           
  2721                           ; BSR set to: 0
  2722                           
  2723                           ; BSR set to: 0
  2724                           ;Bluetooth.c: 100: return;
  2725  0015CE  0012               	return	
  2726  0015D0                     __end_of_putcBluetoothString:
  2727                           	opt stack 0
  2728                           tblptru	equ	0xFF8
  2729                           tblptrh	equ	0xFF7
  2730                           tblptrl	equ	0xFF6
  2731                           tablat	equ	0xFF5
  2732                           prodh	equ	0xFF4
  2733                           prodl	equ	0xFF3
  2734                           intcon	equ	0xFF2
  2735                           indf0	equ	0xFEF
  2736                           postinc0	equ	0xFEE
  2737                           fsr0h	equ	0xFEA
  2738                           fsr0l	equ	0xFE9
  2739                           wreg	equ	0xFE8
  2740                           postinc1	equ	0xFE6
  2741                           postdec1	equ	0xFE5
  2742                           fsr1l	equ	0xFE1
  2743                           postinc2	equ	0xFDE
  2744                           status	equ	0xFD8
  2745                           
  2746 ;; *************** function _putcBluetoothInt *****************
  2747 ;; Defined at:
  2748 ;;		line 102 in file "Bluetooth.c"
  2749 ;; Parameters:    Size  Location     Type
  2750 ;;  a               2   30[BANK0 ] int 
  2751 ;; Auto vars:     Size  Location     Type
  2752 ;;  s              20   32[BANK0 ] unsigned char [20]
  2753 ;;  i               2   52[BANK0 ] int 
  2754 ;; Return value:  Size  Location     Type
  2755 ;;		None               void
  2756 ;; Registers used:
  2757 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2758 ;; Tracked objects:
  2759 ;;		On entry : 0/0
  2760 ;;		On exit  : 0/0
  2761 ;;		Unchanged: 0/0
  2762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2763 ;;      Params:         0       2       0       0       0       0       0       0       0
  2764 ;;      Locals:         0      22       0       0       0       0       0       0       0
  2765 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2766 ;;      Totals:         0      24       0       0       0       0       0       0       0
  2767 ;;Total ram usage:       24 bytes
  2768 ;; Hardware stack levels used:    1
  2769 ;; Hardware stack levels required when called:    7
  2770 ;; This function calls:
  2771 ;;		_UART1_Init
  2772 ;;		_WriteUSART
  2773 ;;		_sprintf
  2774 ;; This function is called by:
  2775 ;;		_Comando_Tablet
  2776 ;; This function uses a non-reentrant model
  2777 ;;
  2778                           
  2779                           	psect	text14
  2780  0015D0                     __ptext14:
  2781                           	opt stack 0
  2782  0015D0                     _putcBluetoothInt:
  2783                           	opt stack 22
  2784                           
  2785                           ;Bluetooth.c: 104: int i;
  2786                           ;Bluetooth.c: 105: unsigned char s[20];
  2787                           ;Bluetooth.c: 106: UART1_Init(51);
  2788                           
  2789                           ; BSR set to: 0
  2790                           ;incstack = 0
  2791  0015D0  0E33               	movlw	51
  2792  0015D2  ECB1  F00E         	call	_UART1_Init
  2793                           
  2794                           ;Bluetooth.c: 108: sprintf(s,"%d",a);
  2795  0015D6  0100               	movlb	0	; () banked
  2796  0015D8  0E00               	movlw	high putcBluetoothInt@s
  2797  0015DA  0100               	movlb	0	; () banked
  2798  0015DC  6FB9               	movwf	(sprintf@sp+1)& (0+255),b
  2799  0015DE  0100               	movlb	0	; () banked
  2800  0015E0  0ECC               	movlw	low putcBluetoothInt@s
  2801  0015E2  0100               	movlb	0	; () banked
  2802  0015E4  6FB8               	movwf	sprintf@sp& (0+255),b
  2803  0015E6  0E08               	movlw	high STR_5
  2804  0015E8  0100               	movlb	0	; () banked
  2805  0015EA  6FBB               	movwf	(sprintf@f+1)& (0+255),b
  2806  0015EC  0E67               	movlw	low STR_5
  2807  0015EE  0100               	movlb	0	; () banked
  2808  0015F0  6FBA               	movwf	sprintf@f& (0+255),b
  2809  0015F2  C0CA  F0BC         	movff	putcBluetoothInt@a,?_sprintf+4
  2810  0015F6  C0CB  F0BD         	movff	putcBluetoothInt@a+1,?_sprintf+5
  2811  0015FA  EC36  F004         	call	_sprintf	;wreg free
  2812                           
  2813                           ;Bluetooth.c: 109: for (i = 0; s[i] != '\0'; i++){
  2814  0015FE  0E00               	movlw	0
  2815  001600  0100               	movlb	0	; () banked
  2816  001602  6FE1               	movwf	(putcBluetoothInt@i+1)& (0+255),b
  2817  001604  0E00               	movlw	0
  2818  001606  0100               	movlb	0	; () banked
  2819  001608  6FE0               	movwf	putcBluetoothInt@i& (0+255),b
  2820  00160A  D012               	goto	l2868
  2821  00160C                     l2864:
  2822                           
  2823                           ; BSR set to: 0
  2824                           ;Bluetooth.c: 110: WriteUSART(s[i]);
  2825  00160C  0100               	movlb	0	; () banked
  2826  00160E  0ECC               	movlw	low putcBluetoothInt@s
  2827  001610  0100               	movlb	0	; () banked
  2828  001612  25E0               	addwf	putcBluetoothInt@i& (0+255),w,b
  2829  001614  6ED9               	movwf	fsr2l,c
  2830  001616  0100               	movlb	0	; () banked
  2831  001618  0E00               	movlw	high putcBluetoothInt@s
  2832  00161A  0100               	movlb	0	; () banked
  2833  00161C  21E1               	addwfc	(putcBluetoothInt@i+1)& (0+255),w,b
  2834  00161E  6EDA               	movwf	fsr2h,c
  2835  001620  50DF               	movf	indf2,w,c
  2836  001622  ECC6  F00E         	call	_WriteUSART
  2837  001626                     l68:
  2838  001626  A2AC               	btfss	4012,1,c	;volatile
  2839  001628  D7FE               	goto	l68
  2840  00162A  0100               	movlb	0	; () banked
  2841  00162C  4BE0               	infsnz	putcBluetoothInt@i& (0+255),f,b
  2842  00162E  2BE1               	incf	(putcBluetoothInt@i+1)& (0+255),f,b
  2843  001630                     l2868:
  2844                           
  2845                           ; BSR set to: 0
  2846  001630  0100               	movlb	0	; () banked
  2847  001632  0ECC               	movlw	low putcBluetoothInt@s
  2848  001634  0100               	movlb	0	; () banked
  2849  001636  25E0               	addwf	putcBluetoothInt@i& (0+255),w,b
  2850  001638  6ED9               	movwf	fsr2l,c
  2851  00163A  0100               	movlb	0	; () banked
  2852  00163C  0E00               	movlw	high putcBluetoothInt@s
  2853  00163E  0100               	movlb	0	; () banked
  2854  001640  21E1               	addwfc	(putcBluetoothInt@i+1)& (0+255),w,b
  2855  001642  6EDA               	movwf	fsr2h,c
  2856  001644  50DF               	movf	indf2,w,c
  2857  001646  A4D8               	btfss	status,2,c
  2858  001648  D7E1               	goto	l2864
  2859                           
  2860                           ; BSR set to: 0
  2861                           ;Bluetooth.c: 112: }
  2862                           ;Bluetooth.c: 113: RCSTA&=0b01001111,TXSTAbits.TXEN=0,PIE1&=0b11001111;
  2863                           
  2864                           ; BSR set to: 0
  2865  00164A  0E4F               	movlw	79
  2866  00164C  16AB               	andwf	4011,f,c	;volatile
  2867                           
  2868                           ; BSR set to: 0
  2869  00164E  9AAC               	bcf	4012,5,c	;volatile
  2870  001650  0ECF               	movlw	207
  2871  001652  169D               	andwf	3997,f,c	;volatile
  2872                           
  2873                           ; BSR set to: 0
  2874                           
  2875                           ; BSR set to: 0
  2876                           ;Bluetooth.c: 114: return;
  2877  001654  0012               	return	
  2878  001656                     __end_of_putcBluetoothInt:
  2879                           	opt stack 0
  2880                           tblptru	equ	0xFF8
  2881                           tblptrh	equ	0xFF7
  2882                           tblptrl	equ	0xFF6
  2883                           tablat	equ	0xFF5
  2884                           prodh	equ	0xFF4
  2885                           prodl	equ	0xFF3
  2886                           intcon	equ	0xFF2
  2887                           indf0	equ	0xFEF
  2888                           postinc0	equ	0xFEE
  2889                           fsr0h	equ	0xFEA
  2890                           fsr0l	equ	0xFE9
  2891                           wreg	equ	0xFE8
  2892                           postinc1	equ	0xFE6
  2893                           postdec1	equ	0xFE5
  2894                           fsr1l	equ	0xFE1
  2895                           indf2	equ	0xFDF
  2896                           postinc2	equ	0xFDE
  2897                           fsr2h	equ	0xFDA
  2898                           fsr2l	equ	0xFD9
  2899                           status	equ	0xFD8
  2900                           
  2901 ;; *************** function _sprintf *****************
  2902 ;; Defined at:
  2903 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\doprnt.c"
  2904 ;; Parameters:    Size  Location     Type
  2905 ;;  sp              2   12[BANK0 ] PTR unsigned char 
  2906 ;;		 -> putcBluetoothInt@s(20), 
  2907 ;;  f               2   14[BANK0 ] PTR const unsigned char 
  2908 ;;		 -> STR_5(3), 
  2909 ;; Auto vars:     Size  Location     Type
  2910 ;;  _val            5   24[BANK0 ] struct .
  2911 ;;  ap              2   20[BANK0 ] PTR void [1]
  2912 ;;		 -> ?_sprintf(2), 
  2913 ;;  c               1   29[BANK0 ] char 
  2914 ;;  prec            1   23[BANK0 ] char 
  2915 ;;  flag            1   22[BANK0 ] unsigned char 
  2916 ;; Return value:  Size  Location     Type
  2917 ;;                  2   12[BANK0 ] int 
  2918 ;; Registers used:
  2919 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2920 ;; Tracked objects:
  2921 ;;		On entry : 0/0
  2922 ;;		On exit  : 0/0
  2923 ;;		Unchanged: 0/0
  2924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2925 ;;      Params:         0       6       0       0       0       0       0       0       0
  2926 ;;      Locals:         0      10       0       0       0       0       0       0       0
  2927 ;;      Temps:          0       2       0       0       0       0       0       0       0
  2928 ;;      Totals:         0      18       0       0       0       0       0       0       0
  2929 ;;Total ram usage:       18 bytes
  2930 ;; Hardware stack levels used:    1
  2931 ;; Hardware stack levels required when called:    6
  2932 ;; This function calls:
  2933 ;;		___lwdiv
  2934 ;;		___lwmod
  2935 ;; This function is called by:
  2936 ;;		_putcBluetoothInt
  2937 ;; This function uses a non-reentrant model
  2938 ;;
  2939                           
  2940                           	psect	text15
  2941  00086C                     __ptext15:
  2942                           	opt stack 0
  2943  00086C                     _sprintf:
  2944                           	opt stack 22
  2945                           
  2946                           ;doprnt.c: 494: va_list ap;
  2947                           ;doprnt.c: 499: signed char c;
  2948                           ;doprnt.c: 506: signed char prec;
  2949                           ;doprnt.c: 508: unsigned char flag;
  2950                           ;doprnt.c: 527: union {
  2951                           ;doprnt.c: 528: unsigned int _val;
  2952                           ;doprnt.c: 529: struct {
  2953                           ;doprnt.c: 530: const char * _cp;
  2954                           ;doprnt.c: 531: unsigned _len;
  2955                           ;doprnt.c: 532: } _str;
  2956                           ;doprnt.c: 533: } _val;
  2957                           ;doprnt.c: 542: *ap = __va_start();
  2958                           
  2959                           ; BSR set to: 0
  2960                           ;incstack = 0
  2961  00086C  0100               	movlb	0	; () banked
  2962  00086E  0E00               	movlw	high (?_sprintf+4)
  2963  000870  0100               	movlb	0	; () banked
  2964  000872  6FC1               	movwf	(sprintf@ap+1)& (0+255),b
  2965  000874  0100               	movlb	0	; () banked
  2966  000876  0EBC               	movlw	low (?_sprintf+4)
  2967  000878  0100               	movlb	0	; () banked
  2968  00087A  6FC0               	movwf	sprintf@ap& (0+255),b
  2969                           
  2970                           ;doprnt.c: 545: while(c = *f++) {
  2971  00087C  D0C7               	goto	l2636
  2972  00087E                     l2584:
  2973                           
  2974                           ; BSR set to: 0
  2975                           ;doprnt.c: 547: if(c != '%')
  2976  00087E  0100               	movlb	0	; () banked
  2977  000880  51C9               	movf	sprintf@c& (0+255),w,b
  2978  000882  0A25               	xorlw	37
  2979  000884  B4D8               	btfsc	status,2,c
  2980  000886  D00B               	goto	l2590
  2981                           
  2982                           ; BSR set to: 0
  2983                           ;doprnt.c: 549: {
  2984                           ;doprnt.c: 550: ((*sp++ = (c)));
  2985  000888  C0B8  FFD9         	movff	sprintf@sp,fsr2l
  2986  00088C  C0B9  FFDA         	movff	sprintf@sp+1,fsr2h
  2987  000890  0100               	movlb	0	; () banked
  2988  000892  C0C9  FFDF         	movff	sprintf@c,indf2
  2989                           
  2990                           ; BSR set to: 0
  2991  000896  0100               	movlb	0	; () banked
  2992  000898  4BB8               	infsnz	sprintf@sp& (0+255),f,b
  2993  00089A  2BB9               	incf	(sprintf@sp+1)& (0+255),f,b
  2994                           
  2995                           ;doprnt.c: 551: continue;
  2996  00089C  D0B7               	goto	l2636
  2997  00089E                     l2590:
  2998                           
  2999                           ; BSR set to: 0
  3000                           ;doprnt.c: 552: }
  3001                           ;doprnt.c: 557: flag = 0;
  3002  00089E  0E00               	movlw	0
  3003  0008A0  0100               	movlb	0	; () banked
  3004  0008A2  6FC2               	movwf	sprintf@flag& (0+255),b
  3005                           
  3006                           ; BSR set to: 0
  3007                           
  3008                           ; BSR set to: 0
  3009                           
  3010                           ; BSR set to: 0
  3011                           ;doprnt.c: 831: }
  3012                           
  3013                           ; BSR set to: 0
  3014                           ;doprnt.c: 822: continue;
  3015                           
  3016                           ;doprnt.c: 811: default:
  3017                           
  3018                           ; BSR set to: 0
  3019                           ;doprnt.c: 707: case 'i':
  3020                           ;doprnt.c: 708: break;
  3021                           
  3022                           ; BSR set to: 0
  3023                           
  3024                           ;doprnt.c: 706: case 'd':
  3025                           
  3026                           ; BSR set to: 0
  3027                           ;doprnt.c: 647: goto alldone;
  3028                           
  3029                           ;doprnt.c: 646: case 0:
  3030                           
  3031                           ;doprnt.c: 644: switch(c = *f++) {
  3032  0008A4  0100               	movlb	0	; () banked
  3033  0008A6  C0BA  FFF6         	movff	sprintf@f,tblptrl
  3034  0008AA  0100               	movlb	0	; () banked
  3035  0008AC  C0BB  FFF7         	movff	sprintf@f+1,tblptrh
  3036  0008B0  0100               	movlb	0	; () banked
  3037  0008B2  4BBA               	infsnz	sprintf@f& (0+255),f,b
  3038  0008B4  2BBB               	incf	(sprintf@f+1)& (0+255),f,b
  3039  0008B6                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3040  0008B6  6AF8               	clrf	tblptru,c
  3041  0008B8                     	endif
  3042  0008B8                     	if	0	;tblptru may be non-zero
  3043  0008B8                     	endif
  3044  0008B8  0008               	tblrd		*
  3045  0008BA  0100               	movlb	0	; () banked
  3046  0008BC  CFF5 F0C9          	movff	tablat,sprintf@c
  3047  0008C0  0100               	movlb	0	; () banked
  3048  0008C2  51C9               	movf	sprintf@c& (0+255),w,b
  3049                           
  3050                           ; Switch size 1, requested type "space"
  3051                           ; Number of cases is 3, Range of values is 0 to 105
  3052                           ; switch strategies available:
  3053                           ; Name         Instructions Cycles
  3054                           ; simple_byte           10     6 (average)
  3055                           ;	Chosen strategy is simple_byte
  3056  0008C4  0A00               	xorlw	0	; case 0
  3057  0008C6  B4D8               	btfsc	status,2,c
  3058  0008C8  D0B2               	goto	l2638
  3059  0008CA  0A64               	xorlw	100	; case 100
  3060  0008CC  B4D8               	btfsc	status,2,c
  3061  0008CE  D003               	goto	l2596
  3062  0008D0  0A0D               	xorlw	13	; case 105
  3063  0008D2  A4D8               	btfss	status,2,c
  3064  0008D4  D09B               	goto	l2636
  3065  0008D6                     l2596:
  3066                           
  3067                           ; BSR set to: 0
  3068                           ;doprnt.c: 1262: {
  3069                           ;doprnt.c: 1268: _val._val = (int)(*(int *)__va_arg((*(int **)ap), (int)0));
  3070  0008D6  C0C0  FFD9         	movff	sprintf@ap,fsr2l
  3071  0008DA  C0C1  FFDA         	movff	sprintf@ap+1,fsr2h
  3072  0008DE  0100               	movlb	0	; () banked
  3073  0008E0  CFDE F0C4          	movff	postinc2,sprintf@_val
  3074  0008E4  0100               	movlb	0	; () banked
  3075  0008E6  CFDD F0C5          	movff	postdec2,sprintf@_val+1
  3076                           
  3077                           ; BSR set to: 0
  3078  0008EA  0E02               	movlw	2
  3079  0008EC  0100               	movlb	0	; () banked
  3080  0008EE  27C0               	addwf	sprintf@ap& (0+255),f,b
  3081  0008F0  0E00               	movlw	0
  3082  0008F2  0100               	movlb	0	; () banked
  3083  0008F4  23C1               	addwfc	(sprintf@ap+1)& (0+255),f,b
  3084                           
  3085                           ; BSR set to: 0
  3086                           ;doprnt.c: 1270: if((int)_val._val < 0) {
  3087  0008F6  0100               	movlb	0	; () banked
  3088  0008F8  51C5               	movf	(sprintf@_val+1)& (0+255),w,b
  3089  0008FA  0A80               	xorlw	128
  3090  0008FC  6EF3               	movwf	prodl,c
  3091  0008FE  0E80               	movlw	128
  3092  000900  5CF3               	subwf	prodl,w,c
  3093  000902  0E00               	movlw	0
  3094  000904  B4D8               	btfsc	status,2,c
  3095  000906  5DC4               	subwf	sprintf@_val& (0+255),w,b
  3096  000908  B0D8               	btfsc	status,0,c
  3097  00090A  D009               	goto	l2606
  3098                           
  3099                           ; BSR set to: 0
  3100                           ;doprnt.c: 1271: flag |= 0x03;
  3101  00090C  0E03               	movlw	3
  3102  00090E  0100               	movlb	0	; () banked
  3103  000910  13C2               	iorwf	sprintf@flag& (0+255),f,b
  3104                           
  3105                           ; BSR set to: 0
  3106                           ;doprnt.c: 1272: _val._val = -_val._val;
  3107  000912  0100               	movlb	0	; () banked
  3108  000914  6DC4               	negf	sprintf@_val& (0+255),b
  3109  000916  0100               	movlb	0	; () banked
  3110  000918  1FC5               	comf	(sprintf@_val+1)& (0+255),f,b
  3111  00091A  B0D8               	btfsc	status,0,c
  3112  00091C  2BC5               	incf	(sprintf@_val+1)& (0+255),f,b
  3113  00091E                     l2606:
  3114                           
  3115                           ; BSR set to: 0
  3116                           ;doprnt.c: 1273: }
  3117                           ;doprnt.c: 1275: }
  3118                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  3119  00091E  0E01               	movlw	1
  3120  000920  0100               	movlb	0	; () banked
  3121  000922  6FC9               	movwf	sprintf@c& (0+255),b
  3122  000924                     
  3123                           ; BSR set to: 0
  3124  000924  0100               	movlb	0	; () banked
  3125  000926  51C9               	movf	sprintf@c& (0+255),w,b
  3126  000928  0A05               	xorlw	5
  3127  00092A  B4D8               	btfsc	status,2,c
  3128  00092C  D01F               	goto	l2620
  3129                           
  3130                           ; BSR set to: 0
  3131                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  3132                           
  3133                           ; BSR set to: 0
  3134                           
  3135                           ; BSR set to: 0
  3136  00092E  0100               	movlb	0	; () banked
  3137  000930  51C9               	movf	sprintf@c& (0+255),w,b
  3138  000932  0D02               	mullw	2
  3139  000934  0E01               	movlw	low _dpowers
  3140  000936  24F3               	addwf	prodl,w,c
  3141  000938  6EF6               	movwf	tblptrl,c
  3142  00093A  0E08               	movlw	high _dpowers
  3143  00093C  20F4               	addwfc	prodh,w,c
  3144  00093E  6EF7               	movwf	tblptrh,c
  3145  000940                     	if	1	;There are 3 active tblptr bytes
  3146  000940  6AF8               	clrf	tblptru,c
  3147  000942  0E00               	movlw	low (__mediumconst shr (0+16))
  3148  000944  22F8               	addwfc	tblptru,f,c
  3149  000946                     	endif
  3150  000946  0009               	tblrd		*+
  3151  000948  CFF5 F0BE          	movff	tablat,??_sprintf
  3152  00094C  0009               	tblrd		*+
  3153  00094E  CFF5 F0BF          	movff	tablat,??_sprintf+1
  3154  000952  0100               	movlb	0	; () banked
  3155  000954  51BE               	movf	??_sprintf& (0+255),w,b
  3156  000956  0100               	movlb	0	; () banked
  3157  000958  5DC4               	subwf	sprintf@_val& (0+255),w,b
  3158  00095A  0100               	movlb	0	; () banked
  3159  00095C  51BF               	movf	(??_sprintf+1)& (0+255),w,b
  3160  00095E  0100               	movlb	0	; () banked
  3161  000960  59C5               	subwfb	(sprintf@_val+1)& (0+255),w,b
  3162  000962  A0D8               	btfss	status,0,c
  3163  000964  D003               	goto	l2620
  3164                           
  3165                           ; BSR set to: 0
  3166                           
  3167                           ; BSR set to: 0
  3168                           
  3169                           ; BSR set to: 0
  3170                           ;doprnt.c: 1316: break;
  3171  000966  0100               	movlb	0	; () banked
  3172  000968  2BC9               	incf	sprintf@c& (0+255),f,b
  3173  00096A  D7DC               	goto	L2
  3174  00096C                     l2620:
  3175                           
  3176                           ; BSR set to: 0
  3177                           ;doprnt.c: 1431: {
  3178                           ;doprnt.c: 1447: if(flag & 0x03)
  3179  00096C  C0C2  F0BE         	movff	sprintf@flag,??_sprintf
  3180  000970  0E03               	movlw	3
  3181  000972  0100               	movlb	0	; () banked
  3182  000974  17BE               	andwf	??_sprintf& (0+255),f,b
  3183  000976  B4D8               	btfsc	status,2,c
  3184  000978  D009               	goto	l2626
  3185                           
  3186                           ; BSR set to: 0
  3187                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  3188  00097A  C0B8  FFD9         	movff	sprintf@sp,fsr2l
  3189  00097E  C0B9  FFDA         	movff	sprintf@sp+1,fsr2h
  3190  000982  0E2D               	movlw	45
  3191  000984  6EDF               	movwf	indf2,c
  3192                           
  3193                           ; BSR set to: 0
  3194  000986  0100               	movlb	0	; () banked
  3195  000988  4BB8               	infsnz	sprintf@sp& (0+255),f,b
  3196  00098A  2BB9               	incf	(sprintf@sp+1)& (0+255),f,b
  3197  00098C                     l2626:
  3198                           
  3199                           ; BSR set to: 0
  3200                           ;doprnt.c: 1478: }
  3201                           ;doprnt.c: 1481: prec = c;
  3202  00098C  C0C9  F0C3         	movff	sprintf@c,sprintf@prec
  3203                           
  3204                           ;doprnt.c: 1483: while(prec--) {
  3205  000990  D037               	goto	l2634
  3206  000992                     l2628:
  3207                           
  3208                           ; BSR set to: 0
  3209                           ;doprnt.c: 1487: {
  3210                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  3211  000992  0100               	movlb	0	; () banked
  3212  000994  51C3               	movf	sprintf@prec& (0+255),w,b
  3213  000996  0D02               	mullw	2
  3214  000998  0E01               	movlw	low _dpowers
  3215  00099A  24F3               	addwf	prodl,w,c
  3216  00099C  6EF6               	movwf	tblptrl,c
  3217  00099E  0E08               	movlw	high _dpowers
  3218  0009A0  20F4               	addwfc	prodh,w,c
  3219  0009A2  6EF7               	movwf	tblptrh,c
  3220  0009A4                     	if	1	;There are 3 active tblptr bytes
  3221  0009A4  6AF8               	clrf	tblptru,c
  3222  0009A6  0E00               	movlw	low (__mediumconst shr (0+16))
  3223  0009A8  22F8               	addwfc	tblptru,f,c
  3224  0009AA                     	endif
  3225  0009AA  0009               	tblrd		*+
  3226  0009AC  0100               	movlb	0	; () banked
  3227  0009AE  CFF5 F0AE          	movff	tablat,___lwdiv@divisor
  3228  0009B2  000A               	tblrd		*-
  3229  0009B4  0100               	movlb	0	; () banked
  3230  0009B6  CFF5 F0AF          	movff	tablat,___lwdiv@divisor+1
  3231  0009BA  C0C4  F0AC         	movff	sprintf@_val,___lwdiv@dividend
  3232  0009BE  C0C5  F0AD         	movff	sprintf@_val+1,___lwdiv@dividend+1
  3233  0009C2  ECE7  F00B         	call	___lwdiv	;wreg free
  3234  0009C6  0100               	movlb	0	; () banked
  3235  0009C8  C0AC  F0B3         	movff	?___lwdiv,___lwmod@dividend
  3236  0009CC  0100               	movlb	0	; () banked
  3237  0009CE  C0AD  F0B4         	movff	?___lwdiv+1,___lwmod@dividend+1
  3238  0009D2  0E00               	movlw	0
  3239  0009D4  0100               	movlb	0	; () banked
  3240  0009D6  6FB6               	movwf	(___lwmod@divisor+1)& (0+255),b
  3241  0009D8  0E0A               	movlw	10
  3242  0009DA  0100               	movlb	0	; () banked
  3243  0009DC  6FB5               	movwf	___lwmod@divisor& (0+255),b
  3244  0009DE  EC2B  F00D         	call	___lwmod	;wreg free
  3245  0009E2  0100               	movlb	0	; () banked
  3246  0009E4  51B3               	movf	?___lwmod& (0+255),w,b
  3247  0009E6  0F30               	addlw	48
  3248  0009E8  0100               	movlb	0	; () banked
  3249  0009EA  6FC9               	movwf	sprintf@c& (0+255),b
  3250                           
  3251                           ; BSR set to: 0
  3252                           ;doprnt.c: 1532: }
  3253                           ;doprnt.c: 1533: ((*sp++ = (c)));
  3254  0009EC  C0B8  FFD9         	movff	sprintf@sp,fsr2l
  3255  0009F0  C0B9  FFDA         	movff	sprintf@sp+1,fsr2h
  3256  0009F4  0100               	movlb	0	; () banked
  3257  0009F6  C0C9  FFDF         	movff	sprintf@c,indf2
  3258                           
  3259                           ; BSR set to: 0
  3260  0009FA  0100               	movlb	0	; () banked
  3261  0009FC  4BB8               	infsnz	sprintf@sp& (0+255),f,b
  3262  0009FE  2BB9               	incf	(sprintf@sp+1)& (0+255),f,b
  3263  000A00                     l2634:
  3264                           
  3265                           ; BSR set to: 0
  3266  000A00  0100               	movlb	0	; () banked
  3267  000A02  07C3               	decf	sprintf@prec& (0+255),f,b
  3268  000A04  0100               	movlb	0	; () banked
  3269  000A06  29C3               	incf	sprintf@prec& (0+255),w,b
  3270  000A08  A4D8               	btfss	status,2,c
  3271  000A0A  D7C3               	goto	l2628
  3272  000A0C                     l2636:
  3273                           
  3274                           ; BSR set to: 0
  3275  000A0C  0100               	movlb	0	; () banked
  3276  000A0E  C0BA  FFF6         	movff	sprintf@f,tblptrl
  3277  000A12  0100               	movlb	0	; () banked
  3278  000A14  C0BB  FFF7         	movff	sprintf@f+1,tblptrh
  3279  000A18  0100               	movlb	0	; () banked
  3280  000A1A  4BBA               	infsnz	sprintf@f& (0+255),f,b
  3281  000A1C  2BBB               	incf	(sprintf@f+1)& (0+255),f,b
  3282  000A1E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3283  000A1E  6AF8               	clrf	tblptru,c
  3284  000A20                     	endif
  3285  000A20                     	if	0	;tblptru may be non-zero
  3286  000A20                     	endif
  3287  000A20  0008               	tblrd		*
  3288  000A22  0100               	movlb	0	; () banked
  3289  000A24  CFF5 F0C9          	movff	tablat,sprintf@c
  3290  000A28  0100               	movlb	0	; () banked
  3291  000A2A  67C9               	tstfsz	sprintf@c& (0+255),b
  3292  000A2C  D728               	goto	l2584
  3293  000A2E                     l2638:
  3294                           
  3295                           ; BSR set to: 0
  3296                           ;doprnt.c: 1547: *sp = 0;
  3297  000A2E  C0B8  FFD9         	movff	sprintf@sp,fsr2l
  3298  000A32  C0B9  FFDA         	movff	sprintf@sp+1,fsr2h
  3299  000A36  0E00               	movlw	0
  3300  000A38  6EDF               	movwf	indf2,c
  3301                           
  3302                           ; BSR set to: 0
  3303                           
  3304                           ; BSR set to: 0
  3305                           ;doprnt.c: 1549: return 0;
  3306                           ;	Return value of _sprintf is never used
  3307  000A3A  0012               	return	
  3308  000A3C                     __end_of_sprintf:
  3309                           	opt stack 0
  3310                           tblptru	equ	0xFF8
  3311                           tblptrh	equ	0xFF7
  3312                           tblptrl	equ	0xFF6
  3313                           tablat	equ	0xFF5
  3314                           prodh	equ	0xFF4
  3315                           prodl	equ	0xFF3
  3316                           intcon	equ	0xFF2
  3317                           indf0	equ	0xFEF
  3318                           postinc0	equ	0xFEE
  3319                           fsr0h	equ	0xFEA
  3320                           fsr0l	equ	0xFE9
  3321                           wreg	equ	0xFE8
  3322                           postinc1	equ	0xFE6
  3323                           postdec1	equ	0xFE5
  3324                           fsr1l	equ	0xFE1
  3325                           indf2	equ	0xFDF
  3326                           postinc2	equ	0xFDE
  3327                           postdec2	equ	0xFDD
  3328                           fsr2h	equ	0xFDA
  3329                           fsr2l	equ	0xFD9
  3330                           status	equ	0xFD8
  3331                           
  3332 ;; *************** function ___lwmod *****************
  3333 ;; Defined at:
  3334 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwmod.c"
  3335 ;; Parameters:    Size  Location     Type
  3336 ;;  dividend        2    7[BANK0 ] unsigned int 
  3337 ;;  divisor         2    9[BANK0 ] unsigned int 
  3338 ;; Auto vars:     Size  Location     Type
  3339 ;;  counter         1   11[BANK0 ] unsigned char 
  3340 ;; Return value:  Size  Location     Type
  3341 ;;                  2    7[BANK0 ] unsigned int 
  3342 ;; Registers used:
  3343 ;;		wreg, status,2, status,0
  3344 ;; Tracked objects:
  3345 ;;		On entry : 0/0
  3346 ;;		On exit  : 0/0
  3347 ;;		Unchanged: 0/0
  3348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3349 ;;      Params:         0       4       0       0       0       0       0       0       0
  3350 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3351 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3352 ;;      Totals:         0       5       0       0       0       0       0       0       0
  3353 ;;Total ram usage:        5 bytes
  3354 ;; Hardware stack levels used:    1
  3355 ;; Hardware stack levels required when called:    5
  3356 ;; This function calls:
  3357 ;;		Nothing
  3358 ;; This function is called by:
  3359 ;;		_sprintf
  3360 ;; This function uses a non-reentrant model
  3361 ;;
  3362                           
  3363                           	psect	text16
  3364  001A56                     __ptext16:
  3365                           	opt stack 0
  3366  001A56                     ___lwmod:
  3367                           	opt stack 22
  3368                           
  3369                           ; BSR set to: 0
  3370                           ;incstack = 0
  3371  001A56  0100               	movlb	0	; () banked
  3372  001A58  51B6               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3373  001A5A  11B5               	iorwf	___lwmod@divisor& (0+255),w,b
  3374  001A5C  B4D8               	btfsc	status,2,c
  3375  001A5E  D026               	goto	l1091
  3376                           
  3377                           ; BSR set to: 0
  3378  001A60  0E01               	movlw	1
  3379  001A62  0100               	movlb	0	; () banked
  3380  001A64  6FB7               	movwf	___lwmod@counter& (0+255),b
  3381  001A66  D006               	goto	l2524
  3382  001A68                     l2522:
  3383                           
  3384                           ; BSR set to: 0
  3385  001A68  0100               	movlb	0	; () banked
  3386  001A6A  90D8               	bcf	status,0,c
  3387  001A6C  37B5               	rlcf	___lwmod@divisor& (0+255),f,b
  3388  001A6E  37B6               	rlcf	(___lwmod@divisor+1)& (0+255),f,b
  3389  001A70  0100               	movlb	0	; () banked
  3390  001A72  2BB7               	incf	___lwmod@counter& (0+255),f,b
  3391  001A74                     l2524:
  3392                           
  3393                           ; BSR set to: 0
  3394  001A74  0100               	movlb	0	; () banked
  3395  001A76  AFB6               	btfss	(___lwmod@divisor+1)& (0+255),7,b
  3396  001A78  D7F7               	goto	l2522
  3397  001A7A                     l2526:
  3398                           
  3399                           ; BSR set to: 0
  3400  001A7A  0100               	movlb	0	; () banked
  3401  001A7C  51B5               	movf	___lwmod@divisor& (0+255),w,b
  3402  001A7E  0100               	movlb	0	; () banked
  3403  001A80  5DB3               	subwf	___lwmod@dividend& (0+255),w,b
  3404  001A82  0100               	movlb	0	; () banked
  3405  001A84  51B6               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3406  001A86  0100               	movlb	0	; () banked
  3407  001A88  59B4               	subwfb	(___lwmod@dividend+1)& (0+255),w,b
  3408  001A8A  A0D8               	btfss	status,0,c
  3409  001A8C  D008               	goto	l2530
  3410                           
  3411                           ; BSR set to: 0
  3412  001A8E  0100               	movlb	0	; () banked
  3413  001A90  51B5               	movf	___lwmod@divisor& (0+255),w,b
  3414  001A92  0100               	movlb	0	; () banked
  3415  001A94  5FB3               	subwf	___lwmod@dividend& (0+255),f,b
  3416  001A96  0100               	movlb	0	; () banked
  3417  001A98  51B6               	movf	(___lwmod@divisor+1)& (0+255),w,b
  3418  001A9A  0100               	movlb	0	; () banked
  3419  001A9C  5BB4               	subwfb	(___lwmod@dividend+1)& (0+255),f,b
  3420  001A9E                     l2530:
  3421                           
  3422                           ; BSR set to: 0
  3423  001A9E  0100               	movlb	0	; () banked
  3424  001AA0  90D8               	bcf	status,0,c
  3425  001AA2  33B6               	rrcf	(___lwmod@divisor+1)& (0+255),f,b
  3426  001AA4  33B5               	rrcf	___lwmod@divisor& (0+255),f,b
  3427                           
  3428                           ; BSR set to: 0
  3429  001AA6  0100               	movlb	0	; () banked
  3430  001AA8  2FB7               	decfsz	___lwmod@counter& (0+255),f,b
  3431  001AAA  D7E7               	goto	l2526
  3432  001AAC                     l1091:
  3433                           
  3434                           ; BSR set to: 0
  3435  001AAC  C0B3  F0B3         	movff	___lwmod@dividend,?___lwmod
  3436  001AB0  C0B4  F0B4         	movff	___lwmod@dividend+1,?___lwmod+1
  3437                           
  3438                           ; BSR set to: 0
  3439  001AB4  0012               	return	
  3440  001AB6                     __end_of___lwmod:
  3441                           	opt stack 0
  3442                           tblptru	equ	0xFF8
  3443                           tblptrh	equ	0xFF7
  3444                           tblptrl	equ	0xFF6
  3445                           tablat	equ	0xFF5
  3446                           prodh	equ	0xFF4
  3447                           prodl	equ	0xFF3
  3448                           intcon	equ	0xFF2
  3449                           indf0	equ	0xFEF
  3450                           postinc0	equ	0xFEE
  3451                           fsr0h	equ	0xFEA
  3452                           fsr0l	equ	0xFE9
  3453                           wreg	equ	0xFE8
  3454                           postinc1	equ	0xFE6
  3455                           postdec1	equ	0xFE5
  3456                           fsr1l	equ	0xFE1
  3457                           indf2	equ	0xFDF
  3458                           postinc2	equ	0xFDE
  3459                           postdec2	equ	0xFDD
  3460                           fsr2h	equ	0xFDA
  3461                           fsr2l	equ	0xFD9
  3462                           status	equ	0xFD8
  3463                           
  3464 ;; *************** function ___lwdiv *****************
  3465 ;; Defined at:
  3466 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lwdiv.c"
  3467 ;; Parameters:    Size  Location     Type
  3468 ;;  dividend        2    0[BANK0 ] unsigned int 
  3469 ;;  divisor         2    2[BANK0 ] unsigned int 
  3470 ;; Auto vars:     Size  Location     Type
  3471 ;;  quotient        2    4[BANK0 ] unsigned int 
  3472 ;;  counter         1    6[BANK0 ] unsigned char 
  3473 ;; Return value:  Size  Location     Type
  3474 ;;                  2    0[BANK0 ] unsigned int 
  3475 ;; Registers used:
  3476 ;;		wreg, status,2, status,0
  3477 ;; Tracked objects:
  3478 ;;		On entry : 0/0
  3479 ;;		On exit  : 0/0
  3480 ;;		Unchanged: 0/0
  3481 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3482 ;;      Params:         0       4       0       0       0       0       0       0       0
  3483 ;;      Locals:         0       3       0       0       0       0       0       0       0
  3484 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3485 ;;      Totals:         0       7       0       0       0       0       0       0       0
  3486 ;;Total ram usage:        7 bytes
  3487 ;; Hardware stack levels used:    1
  3488 ;; Hardware stack levels required when called:    5
  3489 ;; This function calls:
  3490 ;;		Nothing
  3491 ;; This function is called by:
  3492 ;;		_sprintf
  3493 ;; This function uses a non-reentrant model
  3494 ;;
  3495                           
  3496                           	psect	text17
  3497  0017CE                     __ptext17:
  3498                           	opt stack 0
  3499  0017CE                     ___lwdiv:
  3500                           	opt stack 22
  3501                           
  3502                           ; BSR set to: 0
  3503                           ;incstack = 0
  3504  0017CE  0E00               	movlw	0
  3505  0017D0  0100               	movlb	0	; () banked
  3506  0017D2  6FB1               	movwf	(___lwdiv@quotient+1)& (0+255),b
  3507  0017D4  0E00               	movlw	0
  3508  0017D6  0100               	movlb	0	; () banked
  3509  0017D8  6FB0               	movwf	___lwdiv@quotient& (0+255),b
  3510                           
  3511                           ; BSR set to: 0
  3512  0017DA  0100               	movlb	0	; () banked
  3513  0017DC  51AF               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  3514  0017DE  11AE               	iorwf	___lwdiv@divisor& (0+255),w,b
  3515  0017E0  B4D8               	btfsc	status,2,c
  3516  0017E2  D02C               	goto	l1081
  3517                           
  3518                           ; BSR set to: 0
  3519  0017E4  0E01               	movlw	1
  3520  0017E6  0100               	movlb	0	; () banked
  3521  0017E8  6FB2               	movwf	___lwdiv@counter& (0+255),b
  3522  0017EA  D006               	goto	l2504
  3523  0017EC                     l2502:
  3524                           
  3525                           ; BSR set to: 0
  3526  0017EC  0100               	movlb	0	; () banked
  3527  0017EE  90D8               	bcf	status,0,c
  3528  0017F0  37AE               	rlcf	___lwdiv@divisor& (0+255),f,b
  3529  0017F2  37AF               	rlcf	(___lwdiv@divisor+1)& (0+255),f,b
  3530  0017F4  0100               	movlb	0	; () banked
  3531  0017F6  2BB2               	incf	___lwdiv@counter& (0+255),f,b
  3532  0017F8                     l2504:
  3533                           
  3534                           ; BSR set to: 0
  3535  0017F8  0100               	movlb	0	; () banked
  3536  0017FA  AFAF               	btfss	(___lwdiv@divisor+1)& (0+255),7,b
  3537  0017FC  D7F7               	goto	l2502
  3538  0017FE                     l2506:
  3539                           
  3540                           ; BSR set to: 0
  3541  0017FE  0100               	movlb	0	; () banked
  3542  001800  90D8               	bcf	status,0,c
  3543  001802  37B0               	rlcf	___lwdiv@quotient& (0+255),f,b
  3544  001804  37B1               	rlcf	(___lwdiv@quotient+1)& (0+255),f,b
  3545                           
  3546                           ; BSR set to: 0
  3547  001806  0100               	movlb	0	; () banked
  3548  001808  51AE               	movf	___lwdiv@divisor& (0+255),w,b
  3549  00180A  0100               	movlb	0	; () banked
  3550  00180C  5DAC               	subwf	___lwdiv@dividend& (0+255),w,b
  3551  00180E  0100               	movlb	0	; () banked
  3552  001810  51AF               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  3553  001812  0100               	movlb	0	; () banked
  3554  001814  59AD               	subwfb	(___lwdiv@dividend+1)& (0+255),w,b
  3555  001816  A0D8               	btfss	status,0,c
  3556  001818  D00A               	goto	l2514
  3557                           
  3558                           ; BSR set to: 0
  3559  00181A  0100               	movlb	0	; () banked
  3560  00181C  51AE               	movf	___lwdiv@divisor& (0+255),w,b
  3561  00181E  0100               	movlb	0	; () banked
  3562  001820  5FAC               	subwf	___lwdiv@dividend& (0+255),f,b
  3563  001822  0100               	movlb	0	; () banked
  3564  001824  51AF               	movf	(___lwdiv@divisor+1)& (0+255),w,b
  3565  001826  0100               	movlb	0	; () banked
  3566  001828  5BAD               	subwfb	(___lwdiv@dividend+1)& (0+255),f,b
  3567                           
  3568                           ; BSR set to: 0
  3569  00182A  0100               	movlb	0	; () banked
  3570  00182C  81B0               	bsf	___lwdiv@quotient& (0+255),0,b
  3571  00182E                     l2514:
  3572                           
  3573                           ; BSR set to: 0
  3574  00182E  0100               	movlb	0	; () banked
  3575  001830  90D8               	bcf	status,0,c
  3576  001832  33AF               	rrcf	(___lwdiv@divisor+1)& (0+255),f,b
  3577  001834  33AE               	rrcf	___lwdiv@divisor& (0+255),f,b
  3578                           
  3579                           ; BSR set to: 0
  3580  001836  0100               	movlb	0	; () banked
  3581  001838  2FB2               	decfsz	___lwdiv@counter& (0+255),f,b
  3582  00183A  D7E1               	goto	l2506
  3583  00183C                     l1081:
  3584                           
  3585                           ; BSR set to: 0
  3586  00183C  C0B0  F0AC         	movff	___lwdiv@quotient,?___lwdiv
  3587  001840  C0B1  F0AD         	movff	___lwdiv@quotient+1,?___lwdiv+1
  3588                           
  3589                           ; BSR set to: 0
  3590  001844  0012               	return	
  3591  001846                     __end_of___lwdiv:
  3592                           	opt stack 0
  3593                           tblptru	equ	0xFF8
  3594                           tblptrh	equ	0xFF7
  3595                           tblptrl	equ	0xFF6
  3596                           tablat	equ	0xFF5
  3597                           prodh	equ	0xFF4
  3598                           prodl	equ	0xFF3
  3599                           intcon	equ	0xFF2
  3600                           indf0	equ	0xFEF
  3601                           postinc0	equ	0xFEE
  3602                           fsr0h	equ	0xFEA
  3603                           fsr0l	equ	0xFE9
  3604                           wreg	equ	0xFE8
  3605                           postinc1	equ	0xFE6
  3606                           postdec1	equ	0xFE5
  3607                           fsr1l	equ	0xFE1
  3608                           indf2	equ	0xFDF
  3609                           postinc2	equ	0xFDE
  3610                           postdec2	equ	0xFDD
  3611                           fsr2h	equ	0xFDA
  3612                           fsr2l	equ	0xFD9
  3613                           status	equ	0xFD8
  3614                           
  3615 ;; *************** function _WriteUSART *****************
  3616 ;; Defined at:
  3617 ;;		line 13 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\USART\uwrite.c"
  3618 ;; Parameters:    Size  Location     Type
  3619 ;;  data            1    wreg     unsigned char 
  3620 ;; Auto vars:     Size  Location     Type
  3621 ;;  data            1    0[BANK0 ] unsigned char 
  3622 ;; Return value:  Size  Location     Type
  3623 ;;		None               void
  3624 ;; Registers used:
  3625 ;;		wreg
  3626 ;; Tracked objects:
  3627 ;;		On entry : 0/0
  3628 ;;		On exit  : 0/0
  3629 ;;		Unchanged: 0/0
  3630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3631 ;;      Params:         0       0       0       0       0       0       0       0       0
  3632 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3633 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3634 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3635 ;;Total ram usage:        1 bytes
  3636 ;; Hardware stack levels used:    1
  3637 ;; Hardware stack levels required when called:    5
  3638 ;; This function calls:
  3639 ;;		Nothing
  3640 ;; This function is called by:
  3641 ;;		_putcBluetoothString
  3642 ;;		_putcBluetoothInt
  3643 ;;		_putcTxU1
  3644 ;; This function uses a non-reentrant model
  3645 ;;
  3646                           
  3647                           	psect	text18
  3648  001D8C                     __ptext18:
  3649                           	opt stack 0
  3650  001D8C                     _WriteUSART:
  3651                           	opt stack 20
  3652                           
  3653                           ; BSR set to: 0
  3654                           ;incstack = 0
  3655                           ;WriteUSART@data stored from wreg
  3656  001D8C  0100               	movlb	0	; () banked
  3657  001D8E  6FAC               	movwf	WriteUSART@data& (0+255),b
  3658                           
  3659                           ; BSR set to: 0
  3660  001D90  ACAC               	btfss	4012,6,c	;volatile
  3661  001D92  D003               	goto	l2256
  3662                           
  3663                           ; BSR set to: 0
  3664  001D94  90AC               	bcf	4012,0,c	;volatile
  3665  001D96  B254               	btfsc	_USART_Status,1,c
  3666                           
  3667                           ; BSR set to: 0
  3668  001D98  80AC               	bsf	4012,0,c	;volatile
  3669  001D9A                     l2256:
  3670                           
  3671                           ; BSR set to: 0
  3672  001D9A  C0AC  FFAD         	movff	WriteUSART@data,4013	;volatile
  3673                           
  3674                           ; BSR set to: 0
  3675  001D9E  0012               	return	
  3676  001DA0                     __end_of_WriteUSART:
  3677                           	opt stack 0
  3678                           tblptru	equ	0xFF8
  3679                           tblptrh	equ	0xFF7
  3680                           tblptrl	equ	0xFF6
  3681                           tablat	equ	0xFF5
  3682                           prodh	equ	0xFF4
  3683                           prodl	equ	0xFF3
  3684                           intcon	equ	0xFF2
  3685                           indf0	equ	0xFEF
  3686                           postinc0	equ	0xFEE
  3687                           fsr0h	equ	0xFEA
  3688                           fsr0l	equ	0xFE9
  3689                           wreg	equ	0xFE8
  3690                           postinc1	equ	0xFE6
  3691                           postdec1	equ	0xFE5
  3692                           fsr1l	equ	0xFE1
  3693                           indf2	equ	0xFDF
  3694                           postinc2	equ	0xFDE
  3695                           postdec2	equ	0xFDD
  3696                           fsr2h	equ	0xFDA
  3697                           fsr2l	equ	0xFD9
  3698                           status	equ	0xFD8
  3699                           
  3700 ;; *************** function _UART1_Init *****************
  3701 ;; Defined at:
  3702 ;;		line 5 in file "UART1.c"
  3703 ;; Parameters:    Size  Location     Type
  3704 ;;  bdr             1    wreg     unsigned char 
  3705 ;; Auto vars:     Size  Location     Type
  3706 ;;  bdr             1    6[BANK0 ] unsigned char 
  3707 ;; Return value:  Size  Location     Type
  3708 ;;		None               void
  3709 ;; Registers used:
  3710 ;;		wreg, status,2, cstack
  3711 ;; Tracked objects:
  3712 ;;		On entry : 0/0
  3713 ;;		On exit  : 0/0
  3714 ;;		Unchanged: 0/0
  3715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3716 ;;      Params:         0       0       0       0       0       0       0       0       0
  3717 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3718 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3719 ;;      Totals:         0       1       0       0       0       0       0       0       0
  3720 ;;Total ram usage:        1 bytes
  3721 ;; Hardware stack levels used:    1
  3722 ;; Hardware stack levels required when called:    6
  3723 ;; This function calls:
  3724 ;;		_OpenUSART
  3725 ;; This function is called by:
  3726 ;;		_BT_Init
  3727 ;;		_putcBluetoothString
  3728 ;;		_putcBluetoothInt
  3729 ;;		_main
  3730 ;;		_EstadoBluetooth
  3731 ;; This function uses a non-reentrant model
  3732 ;;
  3733                           
  3734                           	psect	text19
  3735  001D62                     __ptext19:
  3736                           	opt stack 0
  3737  001D62                     _UART1_Init:
  3738                           	opt stack 24
  3739                           
  3740                           ; BSR set to: 0
  3741                           ;incstack = 0
  3742                           ;UART1_Init@bdr stored from wreg
  3743  001D62  0100               	movlb	0	; () banked
  3744  001D64  6FB2               	movwf	UART1_Init@bdr& (0+255),b
  3745                           
  3746                           ; BSR set to: 0
  3747                           ;UART1.c: 8: OpenUSART(0b01111111 & 0b11111111 & 0b11111110 & 0b11111101 & 0b11111111 & 
      +                          0b11111111,bdr);
  3748  001D66  0100               	movlb	0	; () banked
  3749  001D68  C0B2  F0AC         	movff	UART1_Init@bdr,OpenUSART@spbrg
  3750  001D6C  0100               	movlb	0	; () banked
  3751  001D6E  6BAD               	clrf	(OpenUSART@spbrg+1)& (0+255),b
  3752  001D70  0E7C               	movlw	124
  3753  001D72  EC2B  F00B         	call	_OpenUSART
  3754  001D76  0012               	return	
  3755  001D78                     __end_of_UART1_Init:
  3756                           	opt stack 0
  3757                           tblptru	equ	0xFF8
  3758                           tblptrh	equ	0xFF7
  3759                           tblptrl	equ	0xFF6
  3760                           tablat	equ	0xFF5
  3761                           prodh	equ	0xFF4
  3762                           prodl	equ	0xFF3
  3763                           intcon	equ	0xFF2
  3764                           indf0	equ	0xFEF
  3765                           postinc0	equ	0xFEE
  3766                           fsr0h	equ	0xFEA
  3767                           fsr0l	equ	0xFE9
  3768                           wreg	equ	0xFE8
  3769                           postinc1	equ	0xFE6
  3770                           postdec1	equ	0xFE5
  3771                           fsr1l	equ	0xFE1
  3772                           indf2	equ	0xFDF
  3773                           postinc2	equ	0xFDE
  3774                           postdec2	equ	0xFDD
  3775                           fsr2h	equ	0xFDA
  3776                           fsr2l	equ	0xFD9
  3777                           status	equ	0xFD8
  3778                           
  3779 ;; *************** function _OpenUSART *****************
  3780 ;; Defined at:
  3781 ;;		line 73 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\USART\uopen.c"
  3782 ;; Parameters:    Size  Location     Type
  3783 ;;  config          1    wreg     unsigned char 
  3784 ;;  spbrg           2    0[BANK0 ] unsigned int 
  3785 ;; Auto vars:     Size  Location     Type
  3786 ;;  config          1    5[BANK0 ] unsigned char 
  3787 ;; Return value:  Size  Location     Type
  3788 ;;		None               void
  3789 ;; Registers used:
  3790 ;;		wreg, status,2
  3791 ;; Tracked objects:
  3792 ;;		On entry : 0/0
  3793 ;;		On exit  : 0/0
  3794 ;;		Unchanged: 0/0
  3795 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3796 ;;      Params:         0       2       0       0       0       0       0       0       0
  3797 ;;      Locals:         0       1       0       0       0       0       0       0       0
  3798 ;;      Temps:          0       3       0       0       0       0       0       0       0
  3799 ;;      Totals:         0       6       0       0       0       0       0       0       0
  3800 ;;Total ram usage:        6 bytes
  3801 ;; Hardware stack levels used:    1
  3802 ;; Hardware stack levels required when called:    5
  3803 ;; This function calls:
  3804 ;;		Nothing
  3805 ;; This function is called by:
  3806 ;;		_UART1_Init
  3807 ;; This function uses a non-reentrant model
  3808 ;;
  3809                           
  3810                           	psect	text20
  3811  001656                     __ptext20:
  3812                           	opt stack 0
  3813  001656                     _OpenUSART:
  3814                           	opt stack 24
  3815                           
  3816                           ;incstack = 0
  3817                           ;OpenUSART@config stored from wreg
  3818  001656  0100               	movlb	0	; () banked
  3819  001658  6FB1               	movwf	OpenUSART@config& (0+255),b
  3820                           
  3821                           ; BSR set to: 0
  3822  00165A  0E00               	movlw	0
  3823  00165C  6EAC               	movwf	4012,c	;volatile
  3824  00165E  0E00               	movlw	0
  3825  001660  6EAB               	movwf	4011,c	;volatile
  3826                           
  3827                           ; BSR set to: 0
  3828  001662  0100               	movlb	0	; () banked
  3829  001664  B1B1               	btfsc	OpenUSART@config& (0+255),0,b
  3830                           
  3831                           ; BSR set to: 0
  3832  001666  88AC               	bsf	4012,4,c	;volatile
  3833                           
  3834                           ; BSR set to: 0
  3835                           
  3836                           ; BSR set to: 0
  3837  001668  0100               	movlb	0	; () banked
  3838  00166A  A3B1               	btfss	OpenUSART@config& (0+255),1,b
  3839  00166C  D002               	goto	l2452
  3840                           
  3841                           ; BSR set to: 0
  3842  00166E  8CAC               	bsf	4012,6,c	;volatile
  3843  001670  8CAB               	bsf	4011,6,c	;volatile
  3844  001672                     l2452:
  3845                           
  3846                           ; BSR set to: 0
  3847  001672  0100               	movlb	0	; () banked
  3848  001674  B5B1               	btfsc	OpenUSART@config& (0+255),2,b
  3849                           
  3850                           ; BSR set to: 0
  3851  001676  8EAC               	bsf	4012,7,c	;volatile
  3852                           
  3853                           ; BSR set to: 0
  3854                           
  3855                           ; BSR set to: 0
  3856  001678  0100               	movlb	0	; () banked
  3857  00167A  A7B1               	btfss	OpenUSART@config& (0+255),3,b
  3858  00167C  D002               	goto	l533
  3859                           
  3860                           ; BSR set to: 0
  3861  00167E  88AB               	bsf	4011,4,c	;volatile
  3862  001680  D001               	goto	l2460
  3863  001682                     l533:
  3864                           
  3865                           ; BSR set to: 0
  3866  001682  8AAB               	bsf	4011,5,c	;volatile
  3867  001684                     l2460:
  3868                           
  3869                           ; BSR set to: 0
  3870  001684  0100               	movlb	0	; () banked
  3871  001686  B9B1               	btfsc	OpenUSART@config& (0+255),4,b
  3872                           
  3873                           ; BSR set to: 0
  3874  001688  84AC               	bsf	4012,2,c	;volatile
  3875                           
  3876                           ; BSR set to: 0
  3877  00168A  989E               	bcf	3998,4,c	;volatile
  3878                           
  3879                           ; BSR set to: 0
  3880  00168C  0100               	movlb	0	; () banked
  3881  00168E  BBB1               	btfsc	OpenUSART@config& (0+255),5,b
  3882                           
  3883                           ; BSR set to: 0
  3884  001690  86AB               	bsf	4011,3,c	;volatile
  3885                           
  3886                           ; BSR set to: 0
  3887                           
  3888                           ; BSR set to: 0
  3889  001692  0100               	movlb	0	; () banked
  3890  001694  ADB1               	btfss	OpenUSART@config& (0+255),6,b
  3891  001696  D002               	goto	l537
  3892                           
  3893                           ; BSR set to: 0
  3894  001698  8A9D               	bsf	3997,5,c	;volatile
  3895  00169A  D001               	goto	l538
  3896  00169C                     l537:
  3897                           
  3898                           ; BSR set to: 0
  3899  00169C  9A9D               	bcf	3997,5,c	;volatile
  3900  00169E                     l538:
  3901                           
  3902                           ; BSR set to: 0
  3903  00169E  9A9E               	bcf	3998,5,c	;volatile
  3904                           
  3905                           ; BSR set to: 0
  3906  0016A0  0100               	movlb	0	; () banked
  3907  0016A2  AFB1               	btfss	OpenUSART@config& (0+255),7,b
  3908  0016A4  D002               	goto	l539
  3909                           
  3910                           ; BSR set to: 0
  3911  0016A6  889D               	bsf	3997,4,c	;volatile
  3912  0016A8  D001               	goto	l540
  3913  0016AA                     l539:
  3914                           
  3915                           ; BSR set to: 0
  3916  0016AA  989D               	bcf	3997,4,c	;volatile
  3917  0016AC                     l540:
  3918                           
  3919                           ; BSR set to: 0
  3920  0016AC  C0AC  FFAF         	movff	OpenUSART@spbrg,4015	;volatile
  3921                           
  3922                           ; BSR set to: 0
  3923  0016B0  0100               	movlb	0	; () banked
  3924  0016B2  C0AD  F0AE         	movff	OpenUSART@spbrg+1,??_OpenUSART
  3925  0016B6  C0AE  F0AF         	movff	??_OpenUSART,??_OpenUSART+1
  3926  0016BA  0100               	movlb	0	; () banked
  3927  0016BC  6BB0               	clrf	(??_OpenUSART+2)& (0+255),b
  3928  0016BE  0100               	movlb	0	; () banked
  3929  0016C0  51AF               	movf	(??_OpenUSART+1)& (0+255),w,b
  3930  0016C2  6EB0               	movwf	4016,c	;volatile
  3931                           
  3932                           ; BSR set to: 0
  3933  0016C4  8AAC               	bsf	4012,5,c	;volatile
  3934                           
  3935                           ; BSR set to: 0
  3936  0016C6  8EAB               	bsf	4011,7,c	;volatile
  3937                           
  3938                           ; BSR set to: 0
  3939  0016C8  9C94               	bcf	3988,6,c	;volatile
  3940                           
  3941                           ; BSR set to: 0
  3942  0016CA  8E94               	bsf	3988,7,c	;volatile
  3943                           
  3944                           ; BSR set to: 0
  3945  0016CC  B8AC               	btfsc	4012,4,c	;volatile
  3946                           
  3947                           ; BSR set to: 0
  3948  0016CE  BEAC               	btfsc	4012,7,c	;volatile
  3949  0016D0  D001               	goto	l542
  3950                           
  3951                           ; BSR set to: 0
  3952  0016D2  8C94               	bsf	3988,6,c	;volatile
  3953  0016D4                     l542:
  3954                           
  3955                           ; BSR set to: 0
  3956  0016D4  0012               	return	
  3957  0016D6                     __end_of_OpenUSART:
  3958                           	opt stack 0
  3959                           tblptru	equ	0xFF8
  3960                           tblptrh	equ	0xFF7
  3961                           tblptrl	equ	0xFF6
  3962                           tablat	equ	0xFF5
  3963                           prodh	equ	0xFF4
  3964                           prodl	equ	0xFF3
  3965                           intcon	equ	0xFF2
  3966                           indf0	equ	0xFEF
  3967                           postinc0	equ	0xFEE
  3968                           fsr0h	equ	0xFEA
  3969                           fsr0l	equ	0xFE9
  3970                           wreg	equ	0xFE8
  3971                           postinc1	equ	0xFE6
  3972                           postdec1	equ	0xFE5
  3973                           fsr1l	equ	0xFE1
  3974                           indf2	equ	0xFDF
  3975                           postinc2	equ	0xFDE
  3976                           postdec2	equ	0xFDD
  3977                           fsr2h	equ	0xFDA
  3978                           fsr2l	equ	0xFD9
  3979                           status	equ	0xFD8
  3980                           
  3981 ;; *************** function _getCNY70Value *****************
  3982 ;; Defined at:
  3983 ;;		line 5 in file "cny70.c"
  3984 ;; Parameters:    Size  Location     Type
  3985 ;;		None
  3986 ;; Auto vars:     Size  Location     Type
  3987 ;;		None
  3988 ;; Return value:  Size  Location     Type
  3989 ;;                  2   51[BANK0 ] int 
  3990 ;; Registers used:
  3991 ;;		wreg, status,2, status,0, cstack
  3992 ;; Tracked objects:
  3993 ;;		On entry : 0/0
  3994 ;;		On exit  : 0/0
  3995 ;;		Unchanged: 0/0
  3996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3997 ;;      Params:         0       2       0       0       0       0       0       0       0
  3998 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3999 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4000 ;;      Totals:         0       2       0       0       0       0       0       0       0
  4001 ;;Total ram usage:        2 bytes
  4002 ;; Hardware stack levels used:    1
  4003 ;; Hardware stack levels required when called:    9
  4004 ;; This function calls:
  4005 ;;		_go_back
  4006 ;;		_go_straight
  4007 ;;		_left
  4008 ;;		_right
  4009 ;; This function is called by:
  4010 ;;		_Comando_Tablet
  4011 ;;		_main
  4012 ;; This function uses a non-reentrant model
  4013 ;;
  4014                           
  4015                           	psect	text21
  4016  000CEA                     __ptext21:
  4017                           	opt stack 0
  4018  000CEA                     _getCNY70Value:
  4019                           	opt stack 21
  4020                           
  4021                           ;cny70.c: 25: if(PORTBbits.RB2 == 1 && PORTBbits.RB3 == 1 && PORTBbits.RB0 == 0 && PORTB
      +                          bits.RB4 == 1 && PORTBbits.RB1 == 1){
  4022                           
  4023                           ; BSR set to: 0
  4024                           ;incstack = 0
  4025  000CEA  B481               	btfsc	3969,2,c	;volatile
  4026  000CEC  A681               	btfss	3969,3,c	;volatile
  4027  000CEE  D008               	goto	l396
  4028  000CF0  A081               	btfss	3969,0,c	;volatile
  4029  000CF2  A881               	btfss	3969,4,c	;volatile
  4030  000CF4  D005               	goto	l396
  4031  000CF6  A281               	btfss	3969,1,c	;volatile
  4032  000CF8  D003               	goto	l396
  4033                           
  4034                           ;cny70.c: 26: go_straight();
  4035  000CFA  ECF4  F00E         	call	_go_straight	;wreg free
  4036  000CFE  D077               	goto	l3070
  4037  000D00                     l396:
  4038                           
  4039                           ;cny70.c: 30: else if(PORTBbits.RB2 == 1 && PORTBbits.RB3 == 0 && PORTBbits.RB0 == 1 && 
      +                          PORTBbits.RB4 == 1 && PORTBbits.RB1 == 1){
  4040  000D00  B481               	btfsc	3969,2,c	;volatile
  4041  000D02  B681               	btfsc	3969,3,c	;volatile
  4042  000D04  D008               	goto	l399
  4043  000D06  B081               	btfsc	3969,0,c	;volatile
  4044  000D08  A881               	btfss	3969,4,c	;volatile
  4045  000D0A  D005               	goto	l399
  4046  000D0C  A281               	btfss	3969,1,c	;volatile
  4047  000D0E  D003               	goto	l399
  4048                           
  4049                           ;cny70.c: 31: left();
  4050  000D10  ECEB  F00E         	call	_left	;wreg free
  4051  000D14  D049               	goto	L4
  4052  000D16                     l399:
  4053                           
  4054                           ;cny70.c: 35: else if(PORTBbits.RB2 == 0 && PORTBbits.RB3 == 1 && PORTBbits.RB0 == 1 && 
      +                          PORTBbits.RB4 == 1 && PORTBbits.RB1 == 1){
  4055  000D16  A481               	btfss	3969,2,c	;volatile
  4056  000D18  A681               	btfss	3969,3,c	;volatile
  4057  000D1A  D00C               	goto	l401
  4058  000D1C  B081               	btfsc	3969,0,c	;volatile
  4059  000D1E  A881               	btfss	3969,4,c	;volatile
  4060  000D20  D009               	goto	l401
  4061  000D22  A281               	btfss	3969,1,c	;volatile
  4062  000D24  D007               	goto	l401
  4063                           
  4064                           ;cny70.c: 36: left();
  4065  000D26  ECEB  F00E         	call	_left	;wreg free
  4066  000D2A                     
  4067                           ;cny70.c: 37: return -2;
  4068  000D2A  0EFF               	movlw	255
  4069  000D2C  0100               	movlb	0	; () banked
  4070  000D2E  6FE0               	movwf	(?_getCNY70Value+1)& (0+255),b
  4071  000D30  0EFE               	movlw	254
  4072  000D32  D061               	goto	L9
  4073  000D34                     l401:
  4074                           
  4075                           ;cny70.c: 40: else if(PORTBbits.RB2 == 1 && PORTBbits.RB3 == 1 && PORTBbits.RB0 == 1 && 
      +                          PORTBbits.RB4 == 0 && PORTBbits.RB1 == 1){
  4076  000D34  B481               	btfsc	3969,2,c	;volatile
  4077  000D36  A681               	btfss	3969,3,c	;volatile
  4078  000D38  D008               	goto	l403
  4079  000D3A  B081               	btfsc	3969,0,c	;volatile
  4080  000D3C  B881               	btfsc	3969,4,c	;volatile
  4081  000D3E  D005               	goto	l403
  4082  000D40  A281               	btfss	3969,1,c	;volatile
  4083  000D42  D003               	goto	l403
  4084                           
  4085                           ;cny70.c: 41: right();
  4086  000D44  ECE2  F00E         	call	_right	;wreg free
  4087  000D48  D03E               	goto	L8
  4088  000D4A                     l403:
  4089                           
  4090                           ;cny70.c: 45: else if(PORTBbits.RB2 == 1 && PORTBbits.RB3 == 1 && PORTBbits.RB0 == 1 && 
      +                          PORTBbits.RB4 == 1 && PORTBbits.RB1 == 0){
  4091  000D4A  B481               	btfsc	3969,2,c	;volatile
  4092  000D4C  A681               	btfss	3969,3,c	;volatile
  4093  000D4E  D008               	goto	l405
  4094  000D50  B081               	btfsc	3969,0,c	;volatile
  4095  000D52  A881               	btfss	3969,4,c	;volatile
  4096  000D54  D005               	goto	l405
  4097  000D56  B281               	btfsc	3969,1,c	;volatile
  4098  000D58  D003               	goto	l405
  4099                           
  4100                           ;cny70.c: 46: right();
  4101  000D5A  ECE2  F00E         	call	_right	;wreg free
  4102  000D5E  D00A               	goto	L7
  4103  000D60                     l405:
  4104                           
  4105                           ;cny70.c: 51: else if(PORTBbits.RB2 == 1 && PORTBbits.RB3 == 1 && PORTBbits.RB0 == 1 && 
      +                          PORTBbits.RB4 == 0 && PORTBbits.RB1 == 0){
  4106  000D60  B481               	btfsc	3969,2,c	;volatile
  4107  000D62  A681               	btfss	3969,3,c	;volatile
  4108  000D64  D00C               	goto	l407
  4109  000D66  B081               	btfsc	3969,0,c	;volatile
  4110  000D68  B881               	btfsc	3969,4,c	;volatile
  4111  000D6A  D009               	goto	l407
  4112  000D6C  B281               	btfsc	3969,1,c	;volatile
  4113  000D6E  D007               	goto	l407
  4114                           
  4115                           ;cny70.c: 52: right();
  4116  000D70  ECE2  F00E         	call	_right	;wreg free
  4117  000D74                     L7:
  4118                           
  4119                           ;cny70.c: 53: return 2;
  4120  000D74  0E00               	movlw	0
  4121  000D76  0100               	movlb	0	; () banked
  4122  000D78  6FE0               	movwf	(?_getCNY70Value+1)& (0+255),b
  4123  000D7A  0E02               	movlw	2
  4124  000D7C  D03C               	goto	L9
  4125  000D7E                     l407:
  4126                           
  4127                           ;cny70.c: 56: else if(PORTBbits.RB2 == 0 && PORTBbits.RB3 == 0 && PORTBbits.RB0 == 1 && 
      +                          PORTBbits.RB4 == 1 && PORTBbits.RB1 == 1){
  4128  000D7E  A481               	btfss	3969,2,c	;volatile
  4129  000D80  B681               	btfsc	3969,3,c	;volatile
  4130  000D82  D008               	goto	l409
  4131  000D84  B081               	btfsc	3969,0,c	;volatile
  4132  000D86  A881               	btfss	3969,4,c	;volatile
  4133  000D88  D005               	goto	l409
  4134  000D8A  A281               	btfss	3969,1,c	;volatile
  4135  000D8C  D003               	goto	l409
  4136                           
  4137                           ;cny70.c: 57: left();
  4138  000D8E  ECEB  F00E         	call	_left	;wreg free
  4139  000D92  D7CB               	goto	L10
  4140  000D94                     l409:
  4141                           
  4142                           ;cny70.c: 61: else if(PORTBbits.RB2 == 1 && PORTBbits.RB3 == 0 && PORTBbits.RB0 == 0 && 
      +                          PORTBbits.RB4 == 1 && PORTBbits.RB1 == 1){
  4143  000D94  B481               	btfsc	3969,2,c	;volatile
  4144  000D96  B681               	btfsc	3969,3,c	;volatile
  4145  000D98  D00C               	goto	l411
  4146  000D9A  A081               	btfss	3969,0,c	;volatile
  4147  000D9C  A881               	btfss	3969,4,c	;volatile
  4148  000D9E  D009               	goto	l411
  4149  000DA0  A281               	btfss	3969,1,c	;volatile
  4150  000DA2  D007               	goto	l411
  4151                           
  4152                           ;cny70.c: 62: go_straight();
  4153  000DA4  ECF4  F00E         	call	_go_straight	;wreg free
  4154  000DA8                     L4:
  4155                           
  4156                           ;cny70.c: 63: return -1;
  4157  000DA8  0100               	movlb	0	; () banked
  4158  000DAA  69DF               	setf	?_getCNY70Value& (0+255),b
  4159  000DAC  0100               	movlb	0	; () banked
  4160  000DAE  69E0               	setf	(?_getCNY70Value+1)& (0+255),b
  4161  000DB0  D024               	goto	l397
  4162  000DB2                     l411:
  4163                           
  4164                           ;cny70.c: 66: else if(PORTBbits.RB2 == 1 && PORTBbits.RB3 == 1 && PORTBbits.RB0 == 0 && 
      +                          PORTBbits.RB4 == 0 && PORTBbits.RB1 == 1){
  4165  000DB2  B481               	btfsc	3969,2,c	;volatile
  4166  000DB4  A681               	btfss	3969,3,c	;volatile
  4167  000DB6  D00C               	goto	l413
  4168  000DB8  A081               	btfss	3969,0,c	;volatile
  4169  000DBA  B881               	btfsc	3969,4,c	;volatile
  4170  000DBC  D009               	goto	l413
  4171  000DBE  A281               	btfss	3969,1,c	;volatile
  4172  000DC0  D007               	goto	l413
  4173                           
  4174                           ;cny70.c: 67: go_straight();
  4175  000DC2  ECF4  F00E         	call	_go_straight	;wreg free
  4176  000DC6                     L8:
  4177                           
  4178                           ;cny70.c: 68: return 1;
  4179  000DC6  0E00               	movlw	0
  4180  000DC8  0100               	movlb	0	; () banked
  4181  000DCA  6FE0               	movwf	(?_getCNY70Value+1)& (0+255),b
  4182  000DCC  0E01               	movlw	1
  4183  000DCE  D013               	goto	L9
  4184  000DD0                     l413:
  4185                           
  4186                           ;cny70.c: 71: else if(PORTBbits.RB2 == 1 && PORTBbits.RB3 == 1 && PORTBbits.RB0 == 1 && 
      +                          PORTBbits.RB4 == 1 && PORTBbits.RB1 == 1){
  4187  000DD0  B481               	btfsc	3969,2,c	;volatile
  4188  000DD2  A681               	btfss	3969,3,c	;volatile
  4189  000DD4  D00C               	goto	l3070
  4190  000DD6  B081               	btfsc	3969,0,c	;volatile
  4191  000DD8  A881               	btfss	3969,4,c	;volatile
  4192  000DDA  D009               	goto	l3070
  4193  000DDC  A281               	btfss	3969,1,c	;volatile
  4194  000DDE  D007               	goto	l3070
  4195                           
  4196                           ;cny70.c: 72: go_back();
  4197  000DE0  ECFD  F00E         	call	_go_back	;wreg free
  4198                           
  4199                           ;cny70.c: 73: return -10;
  4200  000DE4  0EFF               	movlw	255
  4201  000DE6  0100               	movlb	0	; () banked
  4202  000DE8  6FE0               	movwf	(?_getCNY70Value+1)& (0+255),b
  4203  000DEA  0EF6               	movlw	246
  4204  000DEC  D004               	goto	L9
  4205  000DEE                     l3070:
  4206                           
  4207                           ;cny70.c: 76: else
  4208                           ;cny70.c: 77: return 0;
  4209  000DEE  0E00               	movlw	0
  4210  000DF0  0100               	movlb	0	; () banked
  4211  000DF2  6FE0               	movwf	(?_getCNY70Value+1)& (0+255),b
  4212  000DF4  0E00               	movlw	0
  4213  000DF6                     L9:
  4214  000DF6  0100               	movlb	0	; () banked
  4215  000DF8  6FDF               	movwf	?_getCNY70Value& (0+255),b
  4216  000DFA                     l397:
  4217                           
  4218                           ; BSR set to: 0
  4219  000DFA  0012               	return	
  4220  000DFC                     __end_of_getCNY70Value:
  4221                           	opt stack 0
  4222                           tblptru	equ	0xFF8
  4223                           tblptrh	equ	0xFF7
  4224                           tblptrl	equ	0xFF6
  4225                           tablat	equ	0xFF5
  4226                           prodh	equ	0xFF4
  4227                           prodl	equ	0xFF3
  4228                           intcon	equ	0xFF2
  4229                           indf0	equ	0xFEF
  4230                           postinc0	equ	0xFEE
  4231                           fsr0h	equ	0xFEA
  4232                           fsr0l	equ	0xFE9
  4233                           wreg	equ	0xFE8
  4234                           postinc1	equ	0xFE6
  4235                           postdec1	equ	0xFE5
  4236                           fsr1l	equ	0xFE1
  4237                           indf2	equ	0xFDF
  4238                           postinc2	equ	0xFDE
  4239                           postdec2	equ	0xFDD
  4240                           fsr2h	equ	0xFDA
  4241                           fsr2l	equ	0xFD9
  4242                           status	equ	0xFD8
  4243                           
  4244 ;; *************** function _right *****************
  4245 ;; Defined at:
  4246 ;;		line 100 in file "cny70.c"
  4247 ;; Parameters:    Size  Location     Type
  4248 ;;		None
  4249 ;; Auto vars:     Size  Location     Type
  4250 ;;		None
  4251 ;; Return value:  Size  Location     Type
  4252 ;;		None               void
  4253 ;; Registers used:
  4254 ;;		wreg, status,2, status,0, cstack
  4255 ;; Tracked objects:
  4256 ;;		On entry : 0/0
  4257 ;;		On exit  : 0/0
  4258 ;;		Unchanged: 0/0
  4259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4260 ;;      Params:         0       0       0       0       0       0       0       0       0
  4261 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4262 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4263 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4264 ;;Total ram usage:        0 bytes
  4265 ;; Hardware stack levels used:    1
  4266 ;; Hardware stack levels required when called:    8
  4267 ;; This function calls:
  4268 ;;		_PWM_DutyCycle1
  4269 ;;		_PWM_DutyCycle2
  4270 ;;		_motor_forward
  4271 ;; This function is called by:
  4272 ;;		_getCNY70Value
  4273 ;; This function uses a non-reentrant model
  4274 ;;
  4275                           
  4276                           	psect	text22
  4277  001DC4                     __ptext22:
  4278                           	opt stack 0
  4279  001DC4                     _right:
  4280                           	opt stack 21
  4281                           
  4282                           ;cny70.c: 102: motor_forward();
  4283                           
  4284                           ; BSR set to: 0
  4285                           ;incstack = 0
  4286  001DC4  EC21  F00F         	call	_motor_forward	;wreg free
  4287                           
  4288                           ;cny70.c: 103: PWM_DutyCycle1(100);
  4289  001DC8  0E64               	movlw	100
  4290  001DCA  ECA9  F00B         	call	_PWM_DutyCycle1
  4291                           
  4292                           ;cny70.c: 104: PWM_DutyCycle2(0);
  4293  001DCE  0E00               	movlw	0
  4294  001DD0  EC6B  F00B         	call	_PWM_DutyCycle2
  4295                           
  4296                           ;cny70.c: 105: return;
  4297  001DD4  0012               	return	
  4298  001DD6                     __end_of_right:
  4299                           	opt stack 0
  4300                           tblptru	equ	0xFF8
  4301                           tblptrh	equ	0xFF7
  4302                           tblptrl	equ	0xFF6
  4303                           tablat	equ	0xFF5
  4304                           prodh	equ	0xFF4
  4305                           prodl	equ	0xFF3
  4306                           intcon	equ	0xFF2
  4307                           indf0	equ	0xFEF
  4308                           postinc0	equ	0xFEE
  4309                           fsr0h	equ	0xFEA
  4310                           fsr0l	equ	0xFE9
  4311                           wreg	equ	0xFE8
  4312                           postinc1	equ	0xFE6
  4313                           postdec1	equ	0xFE5
  4314                           fsr1l	equ	0xFE1
  4315                           indf2	equ	0xFDF
  4316                           postinc2	equ	0xFDE
  4317                           postdec2	equ	0xFDD
  4318                           fsr2h	equ	0xFDA
  4319                           fsr2l	equ	0xFD9
  4320                           status	equ	0xFD8
  4321                           
  4322 ;; *************** function _left *****************
  4323 ;; Defined at:
  4324 ;;		line 108 in file "cny70.c"
  4325 ;; Parameters:    Size  Location     Type
  4326 ;;		None
  4327 ;; Auto vars:     Size  Location     Type
  4328 ;;		None
  4329 ;; Return value:  Size  Location     Type
  4330 ;;		None               void
  4331 ;; Registers used:
  4332 ;;		wreg, status,2, status,0, cstack
  4333 ;; Tracked objects:
  4334 ;;		On entry : 0/0
  4335 ;;		On exit  : 0/0
  4336 ;;		Unchanged: 0/0
  4337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4338 ;;      Params:         0       0       0       0       0       0       0       0       0
  4339 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4340 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4341 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4342 ;;Total ram usage:        0 bytes
  4343 ;; Hardware stack levels used:    1
  4344 ;; Hardware stack levels required when called:    8
  4345 ;; This function calls:
  4346 ;;		_PWM_DutyCycle1
  4347 ;;		_PWM_DutyCycle2
  4348 ;;		_motor_forward
  4349 ;; This function is called by:
  4350 ;;		_getCNY70Value
  4351 ;; This function uses a non-reentrant model
  4352 ;;
  4353                           
  4354                           	psect	text23
  4355  001DD6                     __ptext23:
  4356                           	opt stack 0
  4357  001DD6                     _left:
  4358                           	opt stack 21
  4359                           
  4360                           ;cny70.c: 110: motor_forward();
  4361                           
  4362                           ;incstack = 0
  4363  001DD6  EC21  F00F         	call	_motor_forward	;wreg free
  4364                           
  4365                           ;cny70.c: 111: PWM_DutyCycle1(0);
  4366  001DDA  0E00               	movlw	0
  4367  001DDC  ECA9  F00B         	call	_PWM_DutyCycle1
  4368                           
  4369                           ;cny70.c: 112: PWM_DutyCycle2(100);
  4370  001DE0  0E64               	movlw	100
  4371  001DE2  EC6B  F00B         	call	_PWM_DutyCycle2
  4372                           
  4373                           ;cny70.c: 113: return;
  4374  001DE6  0012               	return	
  4375  001DE8                     __end_of_left:
  4376                           	opt stack 0
  4377                           tblptru	equ	0xFF8
  4378                           tblptrh	equ	0xFF7
  4379                           tblptrl	equ	0xFF6
  4380                           tablat	equ	0xFF5
  4381                           prodh	equ	0xFF4
  4382                           prodl	equ	0xFF3
  4383                           intcon	equ	0xFF2
  4384                           indf0	equ	0xFEF
  4385                           postinc0	equ	0xFEE
  4386                           fsr0h	equ	0xFEA
  4387                           fsr0l	equ	0xFE9
  4388                           wreg	equ	0xFE8
  4389                           postinc1	equ	0xFE6
  4390                           postdec1	equ	0xFE5
  4391                           fsr1l	equ	0xFE1
  4392                           indf2	equ	0xFDF
  4393                           postinc2	equ	0xFDE
  4394                           postdec2	equ	0xFDD
  4395                           fsr2h	equ	0xFDA
  4396                           fsr2l	equ	0xFD9
  4397                           status	equ	0xFD8
  4398                           
  4399 ;; *************** function _go_straight *****************
  4400 ;; Defined at:
  4401 ;;		line 116 in file "cny70.c"
  4402 ;; Parameters:    Size  Location     Type
  4403 ;;		None
  4404 ;; Auto vars:     Size  Location     Type
  4405 ;;		None
  4406 ;; Return value:  Size  Location     Type
  4407 ;;		None               void
  4408 ;; Registers used:
  4409 ;;		wreg, status,2, status,0, cstack
  4410 ;; Tracked objects:
  4411 ;;		On entry : 0/0
  4412 ;;		On exit  : 0/0
  4413 ;;		Unchanged: 0/0
  4414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4415 ;;      Params:         0       0       0       0       0       0       0       0       0
  4416 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4417 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4418 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4419 ;;Total ram usage:        0 bytes
  4420 ;; Hardware stack levels used:    1
  4421 ;; Hardware stack levels required when called:    8
  4422 ;; This function calls:
  4423 ;;		_PWM_DutyCycle1
  4424 ;;		_PWM_DutyCycle2
  4425 ;;		_motor_forward
  4426 ;; This function is called by:
  4427 ;;		_getCNY70Value
  4428 ;; This function uses a non-reentrant model
  4429 ;;
  4430                           
  4431                           	psect	text24
  4432  001DE8                     __ptext24:
  4433                           	opt stack 0
  4434  001DE8                     _go_straight:
  4435                           	opt stack 21
  4436                           
  4437                           ;cny70.c: 118: motor_forward();
  4438                           
  4439                           ;incstack = 0
  4440  001DE8  EC21  F00F         	call	_motor_forward	;wreg free
  4441                           
  4442                           ;cny70.c: 119: PWM_DutyCycle1(100);
  4443  001DEC  0E64               	movlw	100
  4444  001DEE  ECA9  F00B         	call	_PWM_DutyCycle1
  4445                           
  4446                           ;cny70.c: 120: PWM_DutyCycle2(100);
  4447  001DF2  0E64               	movlw	100
  4448  001DF4  EC6B  F00B         	call	_PWM_DutyCycle2
  4449                           
  4450                           ;cny70.c: 121: return;
  4451  001DF8  0012               	return	
  4452  001DFA                     __end_of_go_straight:
  4453                           	opt stack 0
  4454                           tblptru	equ	0xFF8
  4455                           tblptrh	equ	0xFF7
  4456                           tblptrl	equ	0xFF6
  4457                           tablat	equ	0xFF5
  4458                           prodh	equ	0xFF4
  4459                           prodl	equ	0xFF3
  4460                           intcon	equ	0xFF2
  4461                           indf0	equ	0xFEF
  4462                           postinc0	equ	0xFEE
  4463                           fsr0h	equ	0xFEA
  4464                           fsr0l	equ	0xFE9
  4465                           wreg	equ	0xFE8
  4466                           postinc1	equ	0xFE6
  4467                           postdec1	equ	0xFE5
  4468                           fsr1l	equ	0xFE1
  4469                           indf2	equ	0xFDF
  4470                           postinc2	equ	0xFDE
  4471                           postdec2	equ	0xFDD
  4472                           fsr2h	equ	0xFDA
  4473                           fsr2l	equ	0xFD9
  4474                           status	equ	0xFD8
  4475                           
  4476 ;; *************** function _motor_forward *****************
  4477 ;; Defined at:
  4478 ;;		line 11 in file "motor.c"
  4479 ;; Parameters:    Size  Location     Type
  4480 ;;		None
  4481 ;; Auto vars:     Size  Location     Type
  4482 ;;		None
  4483 ;; Return value:  Size  Location     Type
  4484 ;;		None               void
  4485 ;; Registers used:
  4486 ;;		None
  4487 ;; Tracked objects:
  4488 ;;		On entry : 0/0
  4489 ;;		On exit  : 0/0
  4490 ;;		Unchanged: 0/0
  4491 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4492 ;;      Params:         0       0       0       0       0       0       0       0       0
  4493 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4494 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4495 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4496 ;;Total ram usage:        0 bytes
  4497 ;; Hardware stack levels used:    1
  4498 ;; Hardware stack levels required when called:    5
  4499 ;; This function calls:
  4500 ;;		Nothing
  4501 ;; This function is called by:
  4502 ;;		_right
  4503 ;;		_left
  4504 ;;		_go_straight
  4505 ;; This function uses a non-reentrant model
  4506 ;;
  4507                           
  4508                           	psect	text25
  4509  001E42                     __ptext25:
  4510                           	opt stack 0
  4511  001E42                     _motor_forward:
  4512                           	opt stack 23
  4513                           
  4514                           ;motor.c: 13: PORTDbits.RD7 = 1;
  4515                           
  4516                           ;incstack = 0
  4517  001E42  8E83               	bsf	3971,7,c	;volatile
  4518                           
  4519                           ;motor.c: 14: PORTDbits.RD4 = 0;
  4520  001E44  9883               	bcf	3971,4,c	;volatile
  4521                           
  4522                           ;motor.c: 15: PORTDbits.RD2 = 1;
  4523  001E46  8483               	bsf	3971,2,c	;volatile
  4524                           
  4525                           ;motor.c: 16: PORTDbits.RD3 = 0;
  4526  001E48  9683               	bcf	3971,3,c	;volatile
  4527                           
  4528                           ;motor.c: 18: return;
  4529  001E4A  0012               	return	
  4530  001E4C                     __end_of_motor_forward:
  4531                           	opt stack 0
  4532                           tblptru	equ	0xFF8
  4533                           tblptrh	equ	0xFF7
  4534                           tblptrl	equ	0xFF6
  4535                           tablat	equ	0xFF5
  4536                           prodh	equ	0xFF4
  4537                           prodl	equ	0xFF3
  4538                           intcon	equ	0xFF2
  4539                           indf0	equ	0xFEF
  4540                           postinc0	equ	0xFEE
  4541                           fsr0h	equ	0xFEA
  4542                           fsr0l	equ	0xFE9
  4543                           wreg	equ	0xFE8
  4544                           postinc1	equ	0xFE6
  4545                           postdec1	equ	0xFE5
  4546                           fsr1l	equ	0xFE1
  4547                           indf2	equ	0xFDF
  4548                           postinc2	equ	0xFDE
  4549                           postdec2	equ	0xFDD
  4550                           fsr2h	equ	0xFDA
  4551                           fsr2l	equ	0xFD9
  4552                           status	equ	0xFD8
  4553                           
  4554 ;; *************** function _go_back *****************
  4555 ;; Defined at:
  4556 ;;		line 124 in file "cny70.c"
  4557 ;; Parameters:    Size  Location     Type
  4558 ;;		None
  4559 ;; Auto vars:     Size  Location     Type
  4560 ;;		None
  4561 ;; Return value:  Size  Location     Type
  4562 ;;		None               void
  4563 ;; Registers used:
  4564 ;;		wreg, status,2, status,0, cstack
  4565 ;; Tracked objects:
  4566 ;;		On entry : 0/0
  4567 ;;		On exit  : 0/0
  4568 ;;		Unchanged: 0/0
  4569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4570 ;;      Params:         0       0       0       0       0       0       0       0       0
  4571 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4572 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4573 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4574 ;;Total ram usage:        0 bytes
  4575 ;; Hardware stack levels used:    1
  4576 ;; Hardware stack levels required when called:    8
  4577 ;; This function calls:
  4578 ;;		_PWM_DutyCycle1
  4579 ;;		_PWM_DutyCycle2
  4580 ;;		_motor_Backforward
  4581 ;; This function is called by:
  4582 ;;		_getCNY70Value
  4583 ;; This function uses a non-reentrant model
  4584 ;;
  4585                           
  4586                           	psect	text26
  4587  001DFA                     __ptext26:
  4588                           	opt stack 0
  4589  001DFA                     _go_back:
  4590                           	opt stack 21
  4591                           
  4592                           ;cny70.c: 126: motor_Backforward();
  4593                           
  4594                           ;incstack = 0
  4595  001DFA  EC26  F00F         	call	_motor_Backforward	;wreg free
  4596                           
  4597                           ;cny70.c: 127: PWM_DutyCycle1(100);
  4598  001DFE  0E64               	movlw	100
  4599  001E00  ECA9  F00B         	call	_PWM_DutyCycle1
  4600                           
  4601                           ;cny70.c: 128: PWM_DutyCycle2(100);
  4602  001E04  0E64               	movlw	100
  4603  001E06  EC6B  F00B         	call	_PWM_DutyCycle2
  4604                           
  4605                           ;cny70.c: 129: return;
  4606  001E0A  0012               	return	
  4607  001E0C                     __end_of_go_back:
  4608                           	opt stack 0
  4609                           tblptru	equ	0xFF8
  4610                           tblptrh	equ	0xFF7
  4611                           tblptrl	equ	0xFF6
  4612                           tablat	equ	0xFF5
  4613                           prodh	equ	0xFF4
  4614                           prodl	equ	0xFF3
  4615                           intcon	equ	0xFF2
  4616                           indf0	equ	0xFEF
  4617                           postinc0	equ	0xFEE
  4618                           fsr0h	equ	0xFEA
  4619                           fsr0l	equ	0xFE9
  4620                           wreg	equ	0xFE8
  4621                           postinc1	equ	0xFE6
  4622                           postdec1	equ	0xFE5
  4623                           fsr1l	equ	0xFE1
  4624                           indf2	equ	0xFDF
  4625                           postinc2	equ	0xFDE
  4626                           postdec2	equ	0xFDD
  4627                           fsr2h	equ	0xFDA
  4628                           fsr2l	equ	0xFD9
  4629                           status	equ	0xFD8
  4630                           
  4631 ;; *************** function _motor_Backforward *****************
  4632 ;; Defined at:
  4633 ;;		line 21 in file "motor.c"
  4634 ;; Parameters:    Size  Location     Type
  4635 ;;		None
  4636 ;; Auto vars:     Size  Location     Type
  4637 ;;		None
  4638 ;; Return value:  Size  Location     Type
  4639 ;;		None               void
  4640 ;; Registers used:
  4641 ;;		None
  4642 ;; Tracked objects:
  4643 ;;		On entry : 0/0
  4644 ;;		On exit  : 0/0
  4645 ;;		Unchanged: 0/0
  4646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4647 ;;      Params:         0       0       0       0       0       0       0       0       0
  4648 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4649 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4650 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4651 ;;Total ram usage:        0 bytes
  4652 ;; Hardware stack levels used:    1
  4653 ;; Hardware stack levels required when called:    5
  4654 ;; This function calls:
  4655 ;;		Nothing
  4656 ;; This function is called by:
  4657 ;;		_go_back
  4658 ;; This function uses a non-reentrant model
  4659 ;;
  4660                           
  4661                           	psect	text27
  4662  001E4C                     __ptext27:
  4663                           	opt stack 0
  4664  001E4C                     _motor_Backforward:
  4665                           	opt stack 23
  4666                           
  4667                           ;motor.c: 23: PORTDbits.RD7 = 0;
  4668                           
  4669                           ;incstack = 0
  4670  001E4C  9E83               	bcf	3971,7,c	;volatile
  4671                           
  4672                           ;motor.c: 24: PORTDbits.RD4 = 1;
  4673  001E4E  8883               	bsf	3971,4,c	;volatile
  4674                           
  4675                           ;motor.c: 25: PORTDbits.RD2 = 0;
  4676  001E50  9483               	bcf	3971,2,c	;volatile
  4677                           
  4678                           ;motor.c: 26: PORTDbits.RD3 = 1;
  4679  001E52  8683               	bsf	3971,3,c	;volatile
  4680                           
  4681                           ;motor.c: 28: return;
  4682  001E54  0012               	return	
  4683  001E56                     __end_of_motor_Backforward:
  4684                           	opt stack 0
  4685                           tblptru	equ	0xFF8
  4686                           tblptrh	equ	0xFF7
  4687                           tblptrl	equ	0xFF6
  4688                           tablat	equ	0xFF5
  4689                           prodh	equ	0xFF4
  4690                           prodl	equ	0xFF3
  4691                           intcon	equ	0xFF2
  4692                           indf0	equ	0xFEF
  4693                           postinc0	equ	0xFEE
  4694                           fsr0h	equ	0xFEA
  4695                           fsr0l	equ	0xFE9
  4696                           wreg	equ	0xFE8
  4697                           postinc1	equ	0xFE6
  4698                           postdec1	equ	0xFE5
  4699                           fsr1l	equ	0xFE1
  4700                           indf2	equ	0xFDF
  4701                           postinc2	equ	0xFDE
  4702                           postdec2	equ	0xFDD
  4703                           fsr2h	equ	0xFDA
  4704                           fsr2l	equ	0xFD9
  4705                           status	equ	0xFD8
  4706                           
  4707 ;; *************** function _PWM_DutyCycle2 *****************
  4708 ;; Defined at:
  4709 ;;		line 55 in file "pwm.c"
  4710 ;; Parameters:    Size  Location     Type
  4711 ;;  percentageDu    1    wreg     unsigned char 
  4712 ;; Auto vars:     Size  Location     Type
  4713 ;;  percentageDu    1   48[BANK0 ] unsigned char 
  4714 ;;  DC              2   49[BANK0 ] unsigned int 
  4715 ;;  DutyCycle       2   46[BANK0 ] unsigned int 
  4716 ;; Return value:  Size  Location     Type
  4717 ;;		None               void
  4718 ;; Registers used:
  4719 ;;		wreg, status,2, status,0, cstack
  4720 ;; Tracked objects:
  4721 ;;		On entry : 0/0
  4722 ;;		On exit  : 0/0
  4723 ;;		Unchanged: 0/0
  4724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4725 ;;      Params:         0       0       0       0       0       0       0       0       0
  4726 ;;      Locals:         0       5       0       0       0       0       0       0       0
  4727 ;;      Temps:          0       4       0       0       0       0       0       0       0
  4728 ;;      Totals:         0       9       0       0       0       0       0       0       0
  4729 ;;Total ram usage:        9 bytes
  4730 ;; Hardware stack levels used:    1
  4731 ;; Hardware stack levels required when called:    7
  4732 ;; This function calls:
  4733 ;;		_SetDCPWM2
  4734 ;;		___ftmul
  4735 ;;		___fttol
  4736 ;;		___lbtoft
  4737 ;; This function is called by:
  4738 ;;		_Inicializa_Driveby
  4739 ;;		_Comando_Tablet
  4740 ;;		_right
  4741 ;;		_left
  4742 ;;		_go_straight
  4743 ;;		_go_back
  4744 ;; This function uses a non-reentrant model
  4745 ;;
  4746                           
  4747                           	psect	text28
  4748  0016D6                     __ptext28:
  4749                           	opt stack 0
  4750  0016D6                     _PWM_DutyCycle2:
  4751                           	opt stack 21
  4752                           
  4753                           ;incstack = 0
  4754                           ;PWM_DutyCycle2@percentageDuty stored from wreg
  4755  0016D6  0100               	movlb	0	; () banked
  4756  0016D8  6FDC               	movwf	PWM_DutyCycle2@percentageDuty& (0+255),b
  4757                           
  4758                           ; BSR set to: 0
  4759                           ;pwm.c: 57: unsigned int DC = 0, DutyCycle = 0;
  4760  0016DA  0E00               	movlw	0
  4761  0016DC  0100               	movlb	0	; () banked
  4762  0016DE  6FDE               	movwf	(PWM_DutyCycle2@DC+1)& (0+255),b
  4763  0016E0  0E00               	movlw	0
  4764  0016E2  0100               	movlb	0	; () banked
  4765  0016E4  6FDD               	movwf	PWM_DutyCycle2@DC& (0+255),b
  4766  0016E6  0E00               	movlw	0
  4767  0016E8  0100               	movlb	0	; () banked
  4768  0016EA  6FDB               	movwf	(PWM_DutyCycle2@DutyCycle+1)& (0+255),b
  4769  0016EC  0E00               	movlw	0
  4770  0016EE  0100               	movlb	0	; () banked
  4771  0016F0  6FDA               	movwf	PWM_DutyCycle2@DutyCycle& (0+255),b
  4772                           
  4773                           ; BSR set to: 0
  4774                           ;pwm.c: 59: DC = (unsigned int)(percentageDuty * 10.23);
  4775  0016F2  0EAE               	movlw	174
  4776  0016F4  0100               	movlb	0	; () banked
  4777  0016F6  6FBB               	movwf	___ftmul@f2& (0+255),b
  4778  0016F8  0E23               	movlw	35
  4779  0016FA  0100               	movlb	0	; () banked
  4780  0016FC  6FBC               	movwf	(___ftmul@f2+1)& (0+255),b
  4781  0016FE  0E41               	movlw	65
  4782  001700  0100               	movlb	0	; () banked
  4783  001702  6FBD               	movwf	(___ftmul@f2+2)& (0+255),b
  4784  001704  0100               	movlb	0	; () banked
  4785  001706  51DC               	movf	PWM_DutyCycle2@percentageDuty& (0+255),w,b
  4786  001708  EC44  F00E         	call	___lbtoft
  4787  00170C  C0B4  F0B8         	movff	?___lbtoft,___ftmul@f1
  4788  001710  C0B5  F0B9         	movff	?___lbtoft+1,___ftmul@f1+1
  4789  001714  C0B6  F0BA         	movff	?___lbtoft+2,___ftmul@f1+2
  4790  001718  EC1E  F005         	call	___ftmul	;wreg free
  4791  00171C  C0B8  F0C7         	movff	?___ftmul,___fttol@f1
  4792  001720  C0B9  F0C8         	movff	?___ftmul+1,___fttol@f1+1
  4793  001724  C0BA  F0C9         	movff	?___ftmul+2,___fttol@f1+2
  4794  001728  ECD0  F005         	call	___fttol	;wreg free
  4795  00172C  C0C7  F0D6         	movff	?___fttol,??_PWM_DutyCycle2
  4796  001730  C0C8  F0D7         	movff	?___fttol+1,??_PWM_DutyCycle2+1
  4797  001734  C0C9  F0D8         	movff	?___fttol+2,??_PWM_DutyCycle2+2
  4798  001738  C0CA  F0D9         	movff	?___fttol+3,??_PWM_DutyCycle2+3
  4799  00173C  C0D6  F0DD         	movff	??_PWM_DutyCycle2,PWM_DutyCycle2@DC
  4800  001740  C0D7  F0DE         	movff	??_PWM_DutyCycle2+1,PWM_DutyCycle2@DC+1
  4801                           
  4802                           ;pwm.c: 60: SetDCPWM2(DC);
  4803  001744  C0DD  F0AC         	movff	PWM_DutyCycle2@DC,SetDCPWM2@dutycycle
  4804  001748  C0DE  F0AD         	movff	PWM_DutyCycle2@DC+1,SetDCPWM2@dutycycle+1
  4805  00174C  EC5B  F00D         	call	_SetDCPWM2	;wreg free
  4806                           
  4807                           ;pwm.c: 61: return;
  4808  001750  0012               	return	
  4809  001752                     __end_of_PWM_DutyCycle2:
  4810                           	opt stack 0
  4811                           tblptru	equ	0xFF8
  4812                           tblptrh	equ	0xFF7
  4813                           tblptrl	equ	0xFF6
  4814                           tablat	equ	0xFF5
  4815                           prodh	equ	0xFF4
  4816                           prodl	equ	0xFF3
  4817                           intcon	equ	0xFF2
  4818                           indf0	equ	0xFEF
  4819                           postinc0	equ	0xFEE
  4820                           fsr0h	equ	0xFEA
  4821                           fsr0l	equ	0xFE9
  4822                           wreg	equ	0xFE8
  4823                           postinc1	equ	0xFE6
  4824                           postdec1	equ	0xFE5
  4825                           fsr1l	equ	0xFE1
  4826                           indf2	equ	0xFDF
  4827                           postinc2	equ	0xFDE
  4828                           postdec2	equ	0xFDD
  4829                           fsr2h	equ	0xFDA
  4830                           fsr2l	equ	0xFD9
  4831                           status	equ	0xFD8
  4832                           
  4833 ;; *************** function _SetDCPWM2 *****************
  4834 ;; Defined at:
  4835 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw2setdc.c"
  4836 ;; Parameters:    Size  Location     Type
  4837 ;;  dutycycle       2    0[BANK0 ] unsigned int 
  4838 ;; Auto vars:     Size  Location     Type
  4839 ;;  DCycle          2    4[BANK0 ] struct PWMDC
  4840 ;; Return value:  Size  Location     Type
  4841 ;;		None               void
  4842 ;; Registers used:
  4843 ;;		wreg, status,2, status,0
  4844 ;; Tracked objects:
  4845 ;;		On entry : 0/0
  4846 ;;		On exit  : 0/0
  4847 ;;		Unchanged: 0/0
  4848 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4849 ;;      Params:         0       2       0       0       0       0       0       0       0
  4850 ;;      Locals:         0       2       0       0       0       0       0       0       0
  4851 ;;      Temps:          0       2       0       0       0       0       0       0       0
  4852 ;;      Totals:         0       6       0       0       0       0       0       0       0
  4853 ;;Total ram usage:        6 bytes
  4854 ;; Hardware stack levels used:    1
  4855 ;; Hardware stack levels required when called:    5
  4856 ;; This function calls:
  4857 ;;		Nothing
  4858 ;; This function is called by:
  4859 ;;		_PWM_DutyCycle2
  4860 ;; This function uses a non-reentrant model
  4861 ;;
  4862                           
  4863                           	psect	text29
  4864  001AB6                     __ptext29:
  4865                           	opt stack 0
  4866  001AB6                     _SetDCPWM2:
  4867                           	opt stack 22
  4868                           
  4869                           ;incstack = 0
  4870  001AB6  0100               	movlb	0	; () banked
  4871  001AB8  C0AC  F0AE         	movff	SetDCPWM2@dutycycle,??_SetDCPWM2
  4872  001ABC  0100               	movlb	0	; () banked
  4873  001ABE  C0AD  F0AF         	movff	SetDCPWM2@dutycycle+1,??_SetDCPWM2+1
  4874  001AC2  0E06               	movlw	6
  4875  001AC4                     u1775:
  4876  001AC4  90D8               	bcf	status,0,c
  4877  001AC6  0100               	movlb	0	; () banked
  4878  001AC8  37AE               	rlcf	??_SetDCPWM2& (0+255),f,b
  4879  001ACA  37AF               	rlcf	(??_SetDCPWM2+1)& (0+255),f,b
  4880  001ACC  2EE8               	decfsz	wreg,f,c
  4881  001ACE  D7FA               	goto	u1775
  4882  001AD0  C0AE  F0B0         	movff	??_SetDCPWM2,SetDCPWM2@DCycle
  4883  001AD4  C0AF  F0B1         	movff	??_SetDCPWM2+1,SetDCPWM2@DCycle+1
  4884                           
  4885                           ; BSR set to: 0
  4886  001AD8  C0B1  FFBB         	movff	SetDCPWM2@DCycle+1,4027	;volatile
  4887  001ADC  C0B0  F0AE         	movff	SetDCPWM2@DCycle,??_SetDCPWM2
  4888  001AE0  0100               	movlb	0	; () banked
  4889  001AE2  90D8               	bcf	status,0,c
  4890  001AE4  33AE               	rrcf	??_SetDCPWM2& (0+255),f,b
  4891  001AE6  0100               	movlb	0	; () banked
  4892  001AE8  90D8               	bcf	status,0,c
  4893  001AEA  33AE               	rrcf	??_SetDCPWM2& (0+255),f,b
  4894  001AEC  0E30               	movlw	48
  4895  001AEE  0100               	movlb	0	; () banked
  4896  001AF0  17AE               	andwf	??_SetDCPWM2& (0+255),f,b
  4897  001AF2  50BA               	movf	4026,w,c	;volatile
  4898  001AF4  0BCF               	andlw	207
  4899  001AF6  0100               	movlb	0	; () banked
  4900  001AF8  11AE               	iorwf	??_SetDCPWM2& (0+255),w,b
  4901  001AFA  6EBA               	movwf	4026,c	;volatile
  4902                           
  4903                           ; BSR set to: 0
  4904  001AFC  0012               	return	
  4905  001AFE                     __end_of_SetDCPWM2:
  4906                           	opt stack 0
  4907                           tblptru	equ	0xFF8
  4908                           tblptrh	equ	0xFF7
  4909                           tblptrl	equ	0xFF6
  4910                           tablat	equ	0xFF5
  4911                           prodh	equ	0xFF4
  4912                           prodl	equ	0xFF3
  4913                           intcon	equ	0xFF2
  4914                           indf0	equ	0xFEF
  4915                           postinc0	equ	0xFEE
  4916                           fsr0h	equ	0xFEA
  4917                           fsr0l	equ	0xFE9
  4918                           wreg	equ	0xFE8
  4919                           postinc1	equ	0xFE6
  4920                           postdec1	equ	0xFE5
  4921                           fsr1l	equ	0xFE1
  4922                           indf2	equ	0xFDF
  4923                           postinc2	equ	0xFDE
  4924                           postdec2	equ	0xFDD
  4925                           fsr2h	equ	0xFDA
  4926                           fsr2l	equ	0xFD9
  4927                           status	equ	0xFD8
  4928                           
  4929 ;; *************** function _PWM_DutyCycle1 *****************
  4930 ;; Defined at:
  4931 ;;		line 33 in file "pwm.c"
  4932 ;; Parameters:    Size  Location     Type
  4933 ;;  percentageDu    1    wreg     unsigned char 
  4934 ;; Auto vars:     Size  Location     Type
  4935 ;;  percentageDu    1   48[BANK0 ] unsigned char 
  4936 ;;  DC              2   49[BANK0 ] unsigned int 
  4937 ;;  DutyCycle       2   46[BANK0 ] unsigned int 
  4938 ;; Return value:  Size  Location     Type
  4939 ;;		None               void
  4940 ;; Registers used:
  4941 ;;		wreg, status,2, status,0, cstack
  4942 ;; Tracked objects:
  4943 ;;		On entry : 0/0
  4944 ;;		On exit  : 0/0
  4945 ;;		Unchanged: 0/0
  4946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4947 ;;      Params:         0       0       0       0       0       0       0       0       0
  4948 ;;      Locals:         0       5       0       0       0       0       0       0       0
  4949 ;;      Temps:          0       4       0       0       0       0       0       0       0
  4950 ;;      Totals:         0       9       0       0       0       0       0       0       0
  4951 ;;Total ram usage:        9 bytes
  4952 ;; Hardware stack levels used:    1
  4953 ;; Hardware stack levels required when called:    7
  4954 ;; This function calls:
  4955 ;;		_SetDCPWM1
  4956 ;;		___ftmul
  4957 ;;		___fttol
  4958 ;;		___lbtoft
  4959 ;; This function is called by:
  4960 ;;		_Inicializa_Driveby
  4961 ;;		_Comando_Tablet
  4962 ;;		_right
  4963 ;;		_left
  4964 ;;		_go_straight
  4965 ;;		_go_back
  4966 ;; This function uses a non-reentrant model
  4967 ;;
  4968                           
  4969                           	psect	text30
  4970  001752                     __ptext30:
  4971                           	opt stack 0
  4972  001752                     _PWM_DutyCycle1:
  4973                           	opt stack 21
  4974                           
  4975                           ; BSR set to: 0
  4976                           ;incstack = 0
  4977                           ;PWM_DutyCycle1@percentageDuty stored from wreg
  4978  001752  0100               	movlb	0	; () banked
  4979  001754  6FDC               	movwf	PWM_DutyCycle1@percentageDuty& (0+255),b
  4980                           
  4981                           ; BSR set to: 0
  4982                           ;pwm.c: 35: unsigned int DC = 0, DutyCycle = 0;
  4983  001756  0E00               	movlw	0
  4984  001758  0100               	movlb	0	; () banked
  4985  00175A  6FDE               	movwf	(PWM_DutyCycle1@DC+1)& (0+255),b
  4986  00175C  0E00               	movlw	0
  4987  00175E  0100               	movlb	0	; () banked
  4988  001760  6FDD               	movwf	PWM_DutyCycle1@DC& (0+255),b
  4989  001762  0E00               	movlw	0
  4990  001764  0100               	movlb	0	; () banked
  4991  001766  6FDB               	movwf	(PWM_DutyCycle1@DutyCycle+1)& (0+255),b
  4992  001768  0E00               	movlw	0
  4993  00176A  0100               	movlb	0	; () banked
  4994  00176C  6FDA               	movwf	PWM_DutyCycle1@DutyCycle& (0+255),b
  4995                           
  4996                           ; BSR set to: 0
  4997                           ;pwm.c: 37: DC = (unsigned int)(percentageDuty * 10.23);
  4998  00176E  0EAE               	movlw	174
  4999  001770  0100               	movlb	0	; () banked
  5000  001772  6FBB               	movwf	___ftmul@f2& (0+255),b
  5001  001774  0E23               	movlw	35
  5002  001776  0100               	movlb	0	; () banked
  5003  001778  6FBC               	movwf	(___ftmul@f2+1)& (0+255),b
  5004  00177A  0E41               	movlw	65
  5005  00177C  0100               	movlb	0	; () banked
  5006  00177E  6FBD               	movwf	(___ftmul@f2+2)& (0+255),b
  5007  001780  0100               	movlb	0	; () banked
  5008  001782  51DC               	movf	PWM_DutyCycle1@percentageDuty& (0+255),w,b
  5009  001784  EC44  F00E         	call	___lbtoft
  5010  001788  C0B4  F0B8         	movff	?___lbtoft,___ftmul@f1
  5011  00178C  C0B5  F0B9         	movff	?___lbtoft+1,___ftmul@f1+1
  5012  001790  C0B6  F0BA         	movff	?___lbtoft+2,___ftmul@f1+2
  5013  001794  EC1E  F005         	call	___ftmul	;wreg free
  5014  001798  C0B8  F0C7         	movff	?___ftmul,___fttol@f1
  5015  00179C  C0B9  F0C8         	movff	?___ftmul+1,___fttol@f1+1
  5016  0017A0  C0BA  F0C9         	movff	?___ftmul+2,___fttol@f1+2
  5017  0017A4  ECD0  F005         	call	___fttol	;wreg free
  5018  0017A8  C0C7  F0D6         	movff	?___fttol,??_PWM_DutyCycle1
  5019  0017AC  C0C8  F0D7         	movff	?___fttol+1,??_PWM_DutyCycle1+1
  5020  0017B0  C0C9  F0D8         	movff	?___fttol+2,??_PWM_DutyCycle1+2
  5021  0017B4  C0CA  F0D9         	movff	?___fttol+3,??_PWM_DutyCycle1+3
  5022  0017B8  C0D6  F0DD         	movff	??_PWM_DutyCycle1,PWM_DutyCycle1@DC
  5023  0017BC  C0D7  F0DE         	movff	??_PWM_DutyCycle1+1,PWM_DutyCycle1@DC+1
  5024                           
  5025                           ;pwm.c: 38: SetDCPWM1(DC);
  5026  0017C0  C0DD  F0AC         	movff	PWM_DutyCycle1@DC,SetDCPWM1@dutycycle
  5027  0017C4  C0DE  F0AD         	movff	PWM_DutyCycle1@DC+1,SetDCPWM1@dutycycle+1
  5028  0017C8  EC7F  F00D         	call	_SetDCPWM1	;wreg free
  5029                           
  5030                           ;pwm.c: 39: return;
  5031  0017CC  0012               	return	
  5032  0017CE                     __end_of_PWM_DutyCycle1:
  5033                           	opt stack 0
  5034                           tblptru	equ	0xFF8
  5035                           tblptrh	equ	0xFF7
  5036                           tblptrl	equ	0xFF6
  5037                           tablat	equ	0xFF5
  5038                           prodh	equ	0xFF4
  5039                           prodl	equ	0xFF3
  5040                           intcon	equ	0xFF2
  5041                           indf0	equ	0xFEF
  5042                           postinc0	equ	0xFEE
  5043                           fsr0h	equ	0xFEA
  5044                           fsr0l	equ	0xFE9
  5045                           wreg	equ	0xFE8
  5046                           postinc1	equ	0xFE6
  5047                           postdec1	equ	0xFE5
  5048                           fsr1l	equ	0xFE1
  5049                           indf2	equ	0xFDF
  5050                           postinc2	equ	0xFDE
  5051                           postdec2	equ	0xFDD
  5052                           fsr2h	equ	0xFDA
  5053                           fsr2l	equ	0xFD9
  5054                           status	equ	0xFD8
  5055                           
  5056 ;; *************** function ___lbtoft *****************
  5057 ;; Defined at:
  5058 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lbtoft.c"
  5059 ;; Parameters:    Size  Location     Type
  5060 ;;  c               1    wreg     unsigned char 
  5061 ;; Auto vars:     Size  Location     Type
  5062 ;;  c               1   11[BANK0 ] unsigned char 
  5063 ;; Return value:  Size  Location     Type
  5064 ;;                  3    8[BANK0 ] float 
  5065 ;; Registers used:
  5066 ;;		wreg, status,2, status,0, cstack
  5067 ;; Tracked objects:
  5068 ;;		On entry : 0/0
  5069 ;;		On exit  : 0/0
  5070 ;;		Unchanged: 0/0
  5071 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5072 ;;      Params:         0       3       0       0       0       0       0       0       0
  5073 ;;      Locals:         0       1       0       0       0       0       0       0       0
  5074 ;;      Temps:          0       0       0       0       0       0       0       0       0
  5075 ;;      Totals:         0       4       0       0       0       0       0       0       0
  5076 ;;Total ram usage:        4 bytes
  5077 ;; Hardware stack levels used:    1
  5078 ;; Hardware stack levels required when called:    6
  5079 ;; This function calls:
  5080 ;;		___ftpack
  5081 ;; This function is called by:
  5082 ;;		_PWM_DutyCycle1
  5083 ;;		_PWM_DutyCycle2
  5084 ;; This function uses a non-reentrant model
  5085 ;;
  5086                           
  5087                           	psect	text31
  5088  001C88                     __ptext31:
  5089                           	opt stack 0
  5090  001C88                     ___lbtoft:
  5091                           	opt stack 21
  5092                           
  5093                           ;incstack = 0
  5094                           ;___lbtoft@c stored from wreg
  5095  001C88  0100               	movlb	0	; () banked
  5096  001C8A  6FB7               	movwf	___lbtoft@c& (0+255),b
  5097                           
  5098                           ; BSR set to: 0
  5099  001C8C  0100               	movlb	0	; () banked
  5100  001C8E  51B7               	movf	___lbtoft@c& (0+255),w,b
  5101  001C90  0100               	movlb	0	; () banked
  5102  001C92  6FAC               	movwf	___ftpack@arg& (0+255),b
  5103  001C94  0100               	movlb	0	; () banked
  5104  001C96  6BAD               	clrf	(___ftpack@arg+1)& (0+255),b
  5105  001C98  0100               	movlb	0	; () banked
  5106  001C9A  6BAE               	clrf	(___ftpack@arg+2)& (0+255),b
  5107  001C9C  0E8E               	movlw	142
  5108  001C9E  0100               	movlb	0	; () banked
  5109  001CA0  6FAF               	movwf	___ftpack@exp& (0+255),b
  5110  001CA2  0E00               	movlw	0
  5111  001CA4  0100               	movlb	0	; () banked
  5112  001CA6  6FB0               	movwf	___ftpack@sign& (0+255),b
  5113  001CA8  ECFE  F006         	call	___ftpack	;wreg free
  5114  001CAC  C0AC  F0B4         	movff	?___ftpack,?___lbtoft
  5115  001CB0  C0AD  F0B5         	movff	?___ftpack+1,?___lbtoft+1
  5116  001CB4  C0AE  F0B6         	movff	?___ftpack+2,?___lbtoft+2
  5117  001CB8  0012               	return	
  5118  001CBA                     __end_of___lbtoft:
  5119                           	opt stack 0
  5120                           tblptru	equ	0xFF8
  5121                           tblptrh	equ	0xFF7
  5122                           tblptrl	equ	0xFF6
  5123                           tablat	equ	0xFF5
  5124                           prodh	equ	0xFF4
  5125                           prodl	equ	0xFF3
  5126                           intcon	equ	0xFF2
  5127                           indf0	equ	0xFEF
  5128                           postinc0	equ	0xFEE
  5129                           fsr0h	equ	0xFEA
  5130                           fsr0l	equ	0xFE9
  5131                           wreg	equ	0xFE8
  5132                           postinc1	equ	0xFE6
  5133                           postdec1	equ	0xFE5
  5134                           fsr1l	equ	0xFE1
  5135                           indf2	equ	0xFDF
  5136                           postinc2	equ	0xFDE
  5137                           postdec2	equ	0xFDD
  5138                           fsr2h	equ	0xFDA
  5139                           fsr2l	equ	0xFD9
  5140                           status	equ	0xFD8
  5141                           
  5142 ;; *************** function ___fttol *****************
  5143 ;; Defined at:
  5144 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  5145 ;; Parameters:    Size  Location     Type
  5146 ;;  f1              3   27[BANK0 ] float 
  5147 ;; Auto vars:     Size  Location     Type
  5148 ;;  lval            4   37[BANK0 ] unsigned long 
  5149 ;;  exp1            1   41[BANK0 ] unsigned char 
  5150 ;;  sign1           1   36[BANK0 ] unsigned char 
  5151 ;; Return value:  Size  Location     Type
  5152 ;;                  4   27[BANK0 ] long 
  5153 ;; Registers used:
  5154 ;;		wreg, status,2, status,0
  5155 ;; Tracked objects:
  5156 ;;		On entry : 0/0
  5157 ;;		On exit  : 0/0
  5158 ;;		Unchanged: 0/0
  5159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5160 ;;      Params:         0       4       0       0       0       0       0       0       0
  5161 ;;      Locals:         0       6       0       0       0       0       0       0       0
  5162 ;;      Temps:          0       5       0       0       0       0       0       0       0
  5163 ;;      Totals:         0      15       0       0       0       0       0       0       0
  5164 ;;Total ram usage:       15 bytes
  5165 ;; Hardware stack levels used:    1
  5166 ;; Hardware stack levels required when called:    5
  5167 ;; This function calls:
  5168 ;;		Nothing
  5169 ;; This function is called by:
  5170 ;;		_PWM_DutyCycle1
  5171 ;;		_PWM_DutyCycle2
  5172 ;; This function uses a non-reentrant model
  5173 ;;
  5174                           
  5175                           	psect	text32
  5176  000BA0                     __ptext32:
  5177                           	opt stack 0
  5178  000BA0                     ___fttol:
  5179                           	opt stack 22
  5180                           
  5181                           ;incstack = 0
  5182  000BA0  0100               	movlb	0	; () banked
  5183  000BA2  C0C9  F0CB         	movff	___fttol@f1+2,??___fttol
  5184  000BA6  0100               	movlb	0	; () banked
  5185  000BA8  6BCC               	clrf	(??___fttol+1)& (0+255),b
  5186  000BAA  6BCD               	clrf	(??___fttol+2)& (0+255),b
  5187  000BAC  0100               	movlb	0	; () banked
  5188  000BAE  35C8               	rlcf	(___fttol@f1+1)& (0+255),w,b
  5189  000BB0  0100               	movlb	0	; () banked
  5190  000BB2  37CB               	rlcf	??___fttol& (0+255),f,b
  5191  000BB4  E301               	bnc	u1841
  5192  000BB6  81CC               	bsf	(??___fttol+1)& (0+255),0,b
  5193  000BB8                     u1841:
  5194  000BB8  0100               	movlb	0	; () banked
  5195  000BBA  51CB               	movf	??___fttol& (0+255),w,b
  5196  000BBC  0100               	movlb	0	; () banked
  5197  000BBE  6FD5               	movwf	___fttol@exp1& (0+255),b
  5198  000BC0  0100               	movlb	0	; () banked
  5199  000BC2  67D5               	tstfsz	___fttol@exp1& (0+255),b
  5200  000BC4  D001               	goto	l2356
  5201  000BC6  D059               	goto	u1890
  5202  000BC8                     l2356:
  5203                           
  5204                           ; BSR set to: 0
  5205  000BC8  0E17               	movlw	23
  5206  000BCA  0100               	movlb	0	; () banked
  5207  000BCC  6FCB               	movwf	??___fttol& (0+255),b
  5208  000BCE  0100               	movlb	0	; () banked
  5209  000BD0  C0C7  F0CC         	movff	___fttol@f1,??___fttol+1
  5210  000BD4  0100               	movlb	0	; () banked
  5211  000BD6  C0C8  F0CD         	movff	___fttol@f1+1,??___fttol+2
  5212  000BDA  0100               	movlb	0	; () banked
  5213  000BDC  C0C9  F0CE         	movff	___fttol@f1+2,??___fttol+3
  5214  000BE0  0100               	movlb	0	; () banked
  5215  000BE2  29CB               	incf	??___fttol& (0+255),w,b
  5216  000BE4  0100               	movlb	0	; () banked
  5217  000BE6  6FCF               	movwf	(??___fttol+4)& (0+255),b
  5218  000BE8  D005               	goto	u1860
  5219  000BEA                     u1865:
  5220  000BEA  0100               	movlb	0	; () banked
  5221  000BEC  90D8               	bcf	status,0,c
  5222  000BEE  33CE               	rrcf	(??___fttol+3)& (0+255),f,b
  5223  000BF0  33CD               	rrcf	(??___fttol+2)& (0+255),f,b
  5224  000BF2  33CC               	rrcf	(??___fttol+1)& (0+255),f,b
  5225  000BF4                     u1860:
  5226  000BF4  0100               	movlb	0	; () banked
  5227  000BF6  2FCF               	decfsz	(??___fttol+4)& (0+255),f,b
  5228  000BF8  D7F8               	goto	u1865
  5229  000BFA  0100               	movlb	0	; () banked
  5230  000BFC  51CC               	movf	(??___fttol+1)& (0+255),w,b
  5231  000BFE  0100               	movlb	0	; () banked
  5232  000C00  6FD0               	movwf	___fttol@sign1& (0+255),b
  5233                           
  5234                           ; BSR set to: 0
  5235  000C02  0100               	movlb	0	; () banked
  5236  000C04  8FC8               	bsf	(___fttol@f1+1)& (0+255),7,b
  5237                           
  5238                           ; BSR set to: 0
  5239  000C06  0EFF               	movlw	255
  5240  000C08  0100               	movlb	0	; () banked
  5241  000C0A  17C7               	andwf	___fttol@f1& (0+255),f,b
  5242  000C0C  0EFF               	movlw	255
  5243  000C0E  0100               	movlb	0	; () banked
  5244  000C10  17C8               	andwf	(___fttol@f1+1)& (0+255),f,b
  5245  000C12  0E00               	movlw	0
  5246  000C14  0100               	movlb	0	; () banked
  5247  000C16  17C9               	andwf	(___fttol@f1+2)& (0+255),f,b
  5248                           
  5249                           ; BSR set to: 0
  5250  000C18  0100               	movlb	0	; () banked
  5251  000C1A  51C7               	movf	___fttol@f1& (0+255),w,b
  5252  000C1C  0100               	movlb	0	; () banked
  5253  000C1E  6FD1               	movwf	___fttol@lval& (0+255),b
  5254  000C20  0100               	movlb	0	; () banked
  5255  000C22  51C8               	movf	(___fttol@f1+1)& (0+255),w,b
  5256  000C24  0100               	movlb	0	; () banked
  5257  000C26  6FD2               	movwf	(___fttol@lval+1)& (0+255),b
  5258  000C28  0100               	movlb	0	; () banked
  5259  000C2A  51C9               	movf	(___fttol@f1+2)& (0+255),w,b
  5260  000C2C  0100               	movlb	0	; () banked
  5261  000C2E  6FD3               	movwf	(___fttol@lval+2)& (0+255),b
  5262  000C30  0100               	movlb	0	; () banked
  5263  000C32  6BD4               	clrf	(___fttol@lval+3)& (0+255),b
  5264                           
  5265                           ; BSR set to: 0
  5266  000C34  0E8E               	movlw	142
  5267  000C36  0100               	movlb	0	; () banked
  5268  000C38  5FD5               	subwf	___fttol@exp1& (0+255),f,b
  5269                           
  5270                           ; BSR set to: 0
  5271  000C3A  0100               	movlb	0	; () banked
  5272  000C3C  AFD5               	btfss	___fttol@exp1& (0+255),7,b
  5273  000C3E  D019               	goto	l2378
  5274                           
  5275                           ; BSR set to: 0
  5276  000C40  0100               	movlb	0	; () banked
  5277  000C42  51D5               	movf	___fttol@exp1& (0+255),w,b
  5278  000C44  0A80               	xorlw	128
  5279  000C46  0100               	movlb	0	; () banked
  5280  000C48  6FCB               	movwf	??___fttol& (0+255),b
  5281  000C4A  0EF1               	movlw	241
  5282  000C4C  0A80               	xorlw	128
  5283  000C4E  0100               	movlb	0	; () banked
  5284  000C50  5DCB               	subwf	??___fttol& (0+255),w,b
  5285  000C52  A0D8               	btfss	status,0,c
  5286  000C54  D012               	goto	u1890
  5287  000C56                     l2374:
  5288                           
  5289                           ; BSR set to: 0
  5290  000C56  0100               	movlb	0	; () banked
  5291  000C58  90D8               	bcf	status,0,c
  5292  000C5A  0100               	movlb	0	; () banked
  5293  000C5C  33D4               	rrcf	(___fttol@lval+3)& (0+255),f,b
  5294  000C5E  0100               	movlb	0	; () banked
  5295  000C60  33D3               	rrcf	(___fttol@lval+2)& (0+255),f,b
  5296  000C62  0100               	movlb	0	; () banked
  5297  000C64  33D2               	rrcf	(___fttol@lval+1)& (0+255),f,b
  5298  000C66  0100               	movlb	0	; () banked
  5299  000C68  33D1               	rrcf	___fttol@lval& (0+255),f,b
  5300                           
  5301                           ; BSR set to: 0
  5302  000C6A  0100               	movlb	0	; () banked
  5303  000C6C  3FD5               	incfsz	___fttol@exp1& (0+255),f,b
  5304  000C6E  D7F3               	goto	l2374
  5305  000C70  D020               	goto	l2388
  5306  000C72                     l2378:
  5307                           
  5308                           ; BSR set to: 0
  5309  000C72  0E17               	movlw	23
  5310  000C74  0100               	movlb	0	; () banked
  5311  000C76  65D5               	cpfsgt	___fttol@exp1& (0+255),b
  5312  000C78  D019               	goto	l2386
  5313  000C7A                     u1890:
  5314                           
  5315                           ; BSR set to: 0
  5316  000C7A  0E00               	movlw	0
  5317  000C7C  0100               	movlb	0	; () banked
  5318  000C7E  6FC7               	movwf	?___fttol& (0+255),b
  5319  000C80  0E00               	movlw	0
  5320  000C82  0100               	movlb	0	; () banked
  5321  000C84  6FC8               	movwf	(?___fttol+1)& (0+255),b
  5322  000C86  0E00               	movlw	0
  5323  000C88  0100               	movlb	0	; () banked
  5324  000C8A  6FC9               	movwf	(?___fttol+2)& (0+255),b
  5325  000C8C  0E00               	movlw	0
  5326  000C8E  0100               	movlb	0	; () banked
  5327  000C90  6FCA               	movwf	(?___fttol+3)& (0+255),b
  5328  000C92  D02A               	goto	l979
  5329  000C94                     l2384:
  5330                           
  5331                           ; BSR set to: 0
  5332  000C94  0100               	movlb	0	; () banked
  5333  000C96  90D8               	bcf	status,0,c
  5334  000C98  0100               	movlb	0	; () banked
  5335  000C9A  37D1               	rlcf	___fttol@lval& (0+255),f,b
  5336  000C9C  0100               	movlb	0	; () banked
  5337  000C9E  37D2               	rlcf	(___fttol@lval+1)& (0+255),f,b
  5338  000CA0  0100               	movlb	0	; () banked
  5339  000CA2  37D3               	rlcf	(___fttol@lval+2)& (0+255),f,b
  5340  000CA4  0100               	movlb	0	; () banked
  5341  000CA6  37D4               	rlcf	(___fttol@lval+3)& (0+255),f,b
  5342  000CA8  0100               	movlb	0	; () banked
  5343  000CAA  07D5               	decf	___fttol@exp1& (0+255),f,b
  5344  000CAC                     l2386:
  5345                           
  5346                           ; BSR set to: 0
  5347  000CAC  0100               	movlb	0	; () banked
  5348  000CAE  67D5               	tstfsz	___fttol@exp1& (0+255),b
  5349  000CB0  D7F1               	goto	l2384
  5350  000CB2                     l2388:
  5351                           
  5352                           ; BSR set to: 0
  5353  000CB2  0100               	movlb	0	; () banked
  5354  000CB4  51D0               	movf	___fttol@sign1& (0+255),w,b
  5355  000CB6  B4D8               	btfsc	status,2,c
  5356  000CB8  D00F               	goto	l2392
  5357                           
  5358                           ; BSR set to: 0
  5359  000CBA  0100               	movlb	0	; () banked
  5360  000CBC  1FD4               	comf	(___fttol@lval+3)& (0+255),f,b
  5361  000CBE  0100               	movlb	0	; () banked
  5362  000CC0  1FD3               	comf	(___fttol@lval+2)& (0+255),f,b
  5363  000CC2  0100               	movlb	0	; () banked
  5364  000CC4  1FD2               	comf	(___fttol@lval+1)& (0+255),f,b
  5365  000CC6  0100               	movlb	0	; () banked
  5366  000CC8  6DD1               	negf	___fttol@lval& (0+255),b
  5367  000CCA  0E00               	movlw	0
  5368  000CCC  0100               	movlb	0	; () banked
  5369  000CCE  23D2               	addwfc	(___fttol@lval+1)& (0+255),f,b
  5370  000CD0  0100               	movlb	0	; () banked
  5371  000CD2  23D3               	addwfc	(___fttol@lval+2)& (0+255),f,b
  5372  000CD4  0100               	movlb	0	; () banked
  5373  000CD6  23D4               	addwfc	(___fttol@lval+3)& (0+255),f,b
  5374  000CD8                     l2392:
  5375                           
  5376                           ; BSR set to: 0
  5377  000CD8  C0D1  F0C7         	movff	___fttol@lval,?___fttol
  5378  000CDC  C0D2  F0C8         	movff	___fttol@lval+1,?___fttol+1
  5379  000CE0  C0D3  F0C9         	movff	___fttol@lval+2,?___fttol+2
  5380  000CE4  C0D4  F0CA         	movff	___fttol@lval+3,?___fttol+3
  5381  000CE8                     l979:
  5382                           
  5383                           ; BSR set to: 0
  5384  000CE8  0012               	return	
  5385  000CEA                     __end_of___fttol:
  5386                           	opt stack 0
  5387                           tblptru	equ	0xFF8
  5388                           tblptrh	equ	0xFF7
  5389                           tblptrl	equ	0xFF6
  5390                           tablat	equ	0xFF5
  5391                           prodh	equ	0xFF4
  5392                           prodl	equ	0xFF3
  5393                           intcon	equ	0xFF2
  5394                           indf0	equ	0xFEF
  5395                           postinc0	equ	0xFEE
  5396                           fsr0h	equ	0xFEA
  5397                           fsr0l	equ	0xFE9
  5398                           wreg	equ	0xFE8
  5399                           postinc1	equ	0xFE6
  5400                           postdec1	equ	0xFE5
  5401                           fsr1l	equ	0xFE1
  5402                           indf2	equ	0xFDF
  5403                           postinc2	equ	0xFDE
  5404                           postdec2	equ	0xFDD
  5405                           fsr2h	equ	0xFDA
  5406                           fsr2l	equ	0xFD9
  5407                           status	equ	0xFD8
  5408                           
  5409 ;; *************** function ___ftmul *****************
  5410 ;; Defined at:
  5411 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  5412 ;; Parameters:    Size  Location     Type
  5413 ;;  f1              3   12[BANK0 ] float 
  5414 ;;  f2              3   15[BANK0 ] float 
  5415 ;; Auto vars:     Size  Location     Type
  5416 ;;  f3_as_produc    3   22[BANK0 ] unsigned um
  5417 ;;  sign            1   26[BANK0 ] unsigned char 
  5418 ;;  cntr            1   25[BANK0 ] unsigned char 
  5419 ;;  exp             1   21[BANK0 ] unsigned char 
  5420 ;; Return value:  Size  Location     Type
  5421 ;;                  3   12[BANK0 ] float 
  5422 ;; Registers used:
  5423 ;;		wreg, status,2, status,0, cstack
  5424 ;; Tracked objects:
  5425 ;;		On entry : 0/0
  5426 ;;		On exit  : 0/0
  5427 ;;		Unchanged: 0/0
  5428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5429 ;;      Params:         0       6       0       0       0       0       0       0       0
  5430 ;;      Locals:         0       6       0       0       0       0       0       0       0
  5431 ;;      Temps:          0       3       0       0       0       0       0       0       0
  5432 ;;      Totals:         0      15       0       0       0       0       0       0       0
  5433 ;;Total ram usage:       15 bytes
  5434 ;; Hardware stack levels used:    1
  5435 ;; Hardware stack levels required when called:    6
  5436 ;; This function calls:
  5437 ;;		___ftpack
  5438 ;; This function is called by:
  5439 ;;		_PWM_DutyCycle1
  5440 ;;		_PWM_DutyCycle2
  5441 ;; This function uses a non-reentrant model
  5442 ;;
  5443                           
  5444                           	psect	text33
  5445  000A3C                     __ptext33:
  5446                           	opt stack 0
  5447  000A3C                     ___ftmul:
  5448                           	opt stack 21
  5449                           
  5450                           ; BSR set to: 0
  5451                           ;incstack = 0
  5452  000A3C  0100               	movlb	0	; () banked
  5453  000A3E  C0BA  F0BE         	movff	___ftmul@f1+2,??___ftmul
  5454  000A42  0100               	movlb	0	; () banked
  5455  000A44  6BBF               	clrf	(??___ftmul+1)& (0+255),b
  5456  000A46  6BC0               	clrf	(??___ftmul+2)& (0+255),b
  5457  000A48  0100               	movlb	0	; () banked
  5458  000A4A  35B9               	rlcf	(___ftmul@f1+1)& (0+255),w,b
  5459  000A4C  0100               	movlb	0	; () banked
  5460  000A4E  37BE               	rlcf	??___ftmul& (0+255),f,b
  5461  000A50  E301               	bnc	u1781
  5462  000A52  81BF               	bsf	(??___ftmul+1)& (0+255),0,b
  5463  000A54                     u1781:
  5464  000A54  0100               	movlb	0	; () banked
  5465  000A56  51BE               	movf	??___ftmul& (0+255),w,b
  5466  000A58  0100               	movlb	0	; () banked
  5467  000A5A  6FC1               	movwf	___ftmul@exp& (0+255),b
  5468  000A5C  0100               	movlb	0	; () banked
  5469  000A5E  67C1               	tstfsz	___ftmul@exp& (0+255),b
  5470  000A60  D001               	goto	l2308
  5471  000A62  D013               	goto	u1810
  5472  000A64                     l2308:
  5473                           
  5474                           ; BSR set to: 0
  5475  000A64  0100               	movlb	0	; () banked
  5476  000A66  C0BD  F0BE         	movff	___ftmul@f2+2,??___ftmul
  5477  000A6A  0100               	movlb	0	; () banked
  5478  000A6C  6BBF               	clrf	(??___ftmul+1)& (0+255),b
  5479  000A6E  6BC0               	clrf	(??___ftmul+2)& (0+255),b
  5480  000A70  0100               	movlb	0	; () banked
  5481  000A72  35BC               	rlcf	(___ftmul@f2+1)& (0+255),w,b
  5482  000A74  0100               	movlb	0	; () banked
  5483  000A76  37BE               	rlcf	??___ftmul& (0+255),f,b
  5484  000A78  E301               	bnc	u1801
  5485  000A7A  81BF               	bsf	(??___ftmul+1)& (0+255),0,b
  5486  000A7C                     u1801:
  5487  000A7C  0100               	movlb	0	; () banked
  5488  000A7E  51BE               	movf	??___ftmul& (0+255),w,b
  5489  000A80  0100               	movlb	0	; () banked
  5490  000A82  6FC6               	movwf	___ftmul@sign& (0+255),b
  5491  000A84  0100               	movlb	0	; () banked
  5492  000A86  67C6               	tstfsz	___ftmul@sign& (0+255),b
  5493  000A88  D00A               	goto	l2314
  5494  000A8A                     u1810:
  5495                           
  5496                           ; BSR set to: 0
  5497  000A8A  0E00               	movlw	0
  5498  000A8C  0100               	movlb	0	; () banked
  5499  000A8E  6FB8               	movwf	?___ftmul& (0+255),b
  5500  000A90  0E00               	movlw	0
  5501  000A92  0100               	movlb	0	; () banked
  5502  000A94  6FB9               	movwf	(?___ftmul+1)& (0+255),b
  5503  000A96  0E00               	movlw	0
  5504  000A98  0100               	movlb	0	; () banked
  5505  000A9A  6FBA               	movwf	(?___ftmul+2)& (0+255),b
  5506  000A9C  D080               	goto	l959
  5507  000A9E                     l2314:
  5508                           
  5509                           ; BSR set to: 0
  5510  000A9E  0100               	movlb	0	; () banked
  5511  000AA0  51C6               	movf	___ftmul@sign& (0+255),w,b
  5512  000AA2  0F7B               	addlw	123
  5513  000AA4  0100               	movlb	0	; () banked
  5514  000AA6  27C1               	addwf	___ftmul@exp& (0+255),f,b
  5515                           
  5516                           ; BSR set to: 0
  5517  000AA8  C0BA  F0C6         	movff	___ftmul@f1+2,___ftmul@sign
  5518  000AAC  0100               	movlb	0	; () banked
  5519  000AAE  51BD               	movf	(___ftmul@f2+2)& (0+255),w,b
  5520  000AB0  0100               	movlb	0	; () banked
  5521  000AB2  1BC6               	xorwf	___ftmul@sign& (0+255),f,b
  5522  000AB4  0E80               	movlw	128
  5523  000AB6  0100               	movlb	0	; () banked
  5524  000AB8  17C6               	andwf	___ftmul@sign& (0+255),f,b
  5525                           
  5526                           ; BSR set to: 0
  5527  000ABA  0100               	movlb	0	; () banked
  5528  000ABC  8FB9               	bsf	(___ftmul@f1+1)& (0+255),7,b
  5529                           
  5530                           ; BSR set to: 0
  5531  000ABE  0100               	movlb	0	; () banked
  5532  000AC0  8FBC               	bsf	(___ftmul@f2+1)& (0+255),7,b
  5533                           
  5534                           ; BSR set to: 0
  5535  000AC2  0EFF               	movlw	255
  5536  000AC4  0100               	movlb	0	; () banked
  5537  000AC6  17BB               	andwf	___ftmul@f2& (0+255),f,b
  5538  000AC8  0EFF               	movlw	255
  5539  000ACA  0100               	movlb	0	; () banked
  5540  000ACC  17BC               	andwf	(___ftmul@f2+1)& (0+255),f,b
  5541  000ACE  0E00               	movlw	0
  5542  000AD0  0100               	movlb	0	; () banked
  5543  000AD2  17BD               	andwf	(___ftmul@f2+2)& (0+255),f,b
  5544                           
  5545                           ; BSR set to: 0
  5546  000AD4  0E00               	movlw	0
  5547  000AD6  0100               	movlb	0	; () banked
  5548  000AD8  6FC2               	movwf	___ftmul@f3_as_product& (0+255),b
  5549  000ADA  0E00               	movlw	0
  5550  000ADC  0100               	movlb	0	; () banked
  5551  000ADE  6FC3               	movwf	(___ftmul@f3_as_product+1)& (0+255),b
  5552  000AE0  0E00               	movlw	0
  5553  000AE2  0100               	movlb	0	; () banked
  5554  000AE4  6FC4               	movwf	(___ftmul@f3_as_product+2)& (0+255),b
  5555                           
  5556                           ; BSR set to: 0
  5557  000AE6  0E07               	movlw	7
  5558  000AE8  0100               	movlb	0	; () banked
  5559  000AEA  6FC5               	movwf	___ftmul@cntr& (0+255),b
  5560  000AEC                     l2328:
  5561                           
  5562                           ; BSR set to: 0
  5563  000AEC  0100               	movlb	0	; () banked
  5564  000AEE  A1B8               	btfss	___ftmul@f1& (0+255),0,b
  5565  000AF0  D00C               	goto	l2332
  5566                           
  5567                           ; BSR set to: 0
  5568  000AF2  0100               	movlb	0	; () banked
  5569  000AF4  51BB               	movf	___ftmul@f2& (0+255),w,b
  5570  000AF6  0100               	movlb	0	; () banked
  5571  000AF8  27C2               	addwf	___ftmul@f3_as_product& (0+255),f,b
  5572  000AFA  0100               	movlb	0	; () banked
  5573  000AFC  51BC               	movf	(___ftmul@f2+1)& (0+255),w,b
  5574  000AFE  0100               	movlb	0	; () banked
  5575  000B00  23C3               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  5576  000B02  0100               	movlb	0	; () banked
  5577  000B04  51BD               	movf	(___ftmul@f2+2)& (0+255),w,b
  5578  000B06  0100               	movlb	0	; () banked
  5579  000B08  23C4               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  5580  000B0A                     l2332:
  5581                           
  5582                           ; BSR set to: 0
  5583  000B0A  0100               	movlb	0	; () banked
  5584  000B0C  90D8               	bcf	status,0,c
  5585  000B0E  0100               	movlb	0	; () banked
  5586  000B10  33BA               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  5587  000B12  0100               	movlb	0	; () banked
  5588  000B14  33B9               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  5589  000B16  0100               	movlb	0	; () banked
  5590  000B18  33B8               	rrcf	___ftmul@f1& (0+255),f,b
  5591  000B1A  0100               	movlb	0	; () banked
  5592  000B1C  90D8               	bcf	status,0,c
  5593  000B1E  0100               	movlb	0	; () banked
  5594  000B20  37BB               	rlcf	___ftmul@f2& (0+255),f,b
  5595  000B22  0100               	movlb	0	; () banked
  5596  000B24  37BC               	rlcf	(___ftmul@f2+1)& (0+255),f,b
  5597  000B26  0100               	movlb	0	; () banked
  5598  000B28  37BD               	rlcf	(___ftmul@f2+2)& (0+255),f,b
  5599                           
  5600                           ; BSR set to: 0
  5601  000B2A  0100               	movlb	0	; () banked
  5602  000B2C  2FC5               	decfsz	___ftmul@cntr& (0+255),f,b
  5603  000B2E  D7DE               	goto	l2328
  5604                           
  5605                           ; BSR set to: 0
  5606                           
  5607                           ; BSR set to: 0
  5608  000B30  0E09               	movlw	9
  5609  000B32  0100               	movlb	0	; () banked
  5610  000B34  6FC5               	movwf	___ftmul@cntr& (0+255),b
  5611  000B36                     l2338:
  5612                           
  5613                           ; BSR set to: 0
  5614  000B36  0100               	movlb	0	; () banked
  5615  000B38  A1B8               	btfss	___ftmul@f1& (0+255),0,b
  5616  000B3A  D00C               	goto	l2342
  5617                           
  5618                           ; BSR set to: 0
  5619  000B3C  0100               	movlb	0	; () banked
  5620  000B3E  51BB               	movf	___ftmul@f2& (0+255),w,b
  5621  000B40  0100               	movlb	0	; () banked
  5622  000B42  27C2               	addwf	___ftmul@f3_as_product& (0+255),f,b
  5623  000B44  0100               	movlb	0	; () banked
  5624  000B46  51BC               	movf	(___ftmul@f2+1)& (0+255),w,b
  5625  000B48  0100               	movlb	0	; () banked
  5626  000B4A  23C3               	addwfc	(___ftmul@f3_as_product+1)& (0+255),f,b
  5627  000B4C  0100               	movlb	0	; () banked
  5628  000B4E  51BD               	movf	(___ftmul@f2+2)& (0+255),w,b
  5629  000B50  0100               	movlb	0	; () banked
  5630  000B52  23C4               	addwfc	(___ftmul@f3_as_product+2)& (0+255),f,b
  5631  000B54                     l2342:
  5632                           
  5633                           ; BSR set to: 0
  5634  000B54  0100               	movlb	0	; () banked
  5635  000B56  90D8               	bcf	status,0,c
  5636  000B58  0100               	movlb	0	; () banked
  5637  000B5A  33BA               	rrcf	(___ftmul@f1+2)& (0+255),f,b
  5638  000B5C  0100               	movlb	0	; () banked
  5639  000B5E  33B9               	rrcf	(___ftmul@f1+1)& (0+255),f,b
  5640  000B60  0100               	movlb	0	; () banked
  5641  000B62  33B8               	rrcf	___ftmul@f1& (0+255),f,b
  5642  000B64  0100               	movlb	0	; () banked
  5643  000B66  90D8               	bcf	status,0,c
  5644  000B68  0100               	movlb	0	; () banked
  5645  000B6A  33C4               	rrcf	(___ftmul@f3_as_product+2)& (0+255),f,b
  5646  000B6C  0100               	movlb	0	; () banked
  5647  000B6E  33C3               	rrcf	(___ftmul@f3_as_product+1)& (0+255),f,b
  5648  000B70  0100               	movlb	0	; () banked
  5649  000B72  33C2               	rrcf	___ftmul@f3_as_product& (0+255),f,b
  5650                           
  5651                           ; BSR set to: 0
  5652  000B74  0100               	movlb	0	; () banked
  5653  000B76  2FC5               	decfsz	___ftmul@cntr& (0+255),f,b
  5654  000B78  D7DE               	goto	l2338
  5655                           
  5656                           ; BSR set to: 0
  5657                           
  5658                           ; BSR set to: 0
  5659  000B7A  C0C2  F0AC         	movff	___ftmul@f3_as_product,___ftpack@arg
  5660  000B7E  C0C3  F0AD         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  5661  000B82  C0C4  F0AE         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  5662  000B86  C0C1  F0AF         	movff	___ftmul@exp,___ftpack@exp
  5663  000B8A  C0C6  F0B0         	movff	___ftmul@sign,___ftpack@sign
  5664  000B8E  ECFE  F006         	call	___ftpack	;wreg free
  5665  000B92  C0AC  F0B8         	movff	?___ftpack,?___ftmul
  5666  000B96  C0AD  F0B9         	movff	?___ftpack+1,?___ftmul+1
  5667  000B9A  C0AE  F0BA         	movff	?___ftpack+2,?___ftmul+2
  5668  000B9E                     l959:
  5669  000B9E  0012               	return	
  5670  000BA0                     __end_of___ftmul:
  5671                           	opt stack 0
  5672                           tblptru	equ	0xFF8
  5673                           tblptrh	equ	0xFF7
  5674                           tblptrl	equ	0xFF6
  5675                           tablat	equ	0xFF5
  5676                           prodh	equ	0xFF4
  5677                           prodl	equ	0xFF3
  5678                           intcon	equ	0xFF2
  5679                           indf0	equ	0xFEF
  5680                           postinc0	equ	0xFEE
  5681                           fsr0h	equ	0xFEA
  5682                           fsr0l	equ	0xFE9
  5683                           wreg	equ	0xFE8
  5684                           postinc1	equ	0xFE6
  5685                           postdec1	equ	0xFE5
  5686                           fsr1l	equ	0xFE1
  5687                           indf2	equ	0xFDF
  5688                           postinc2	equ	0xFDE
  5689                           postdec2	equ	0xFDD
  5690                           fsr2h	equ	0xFDA
  5691                           fsr2l	equ	0xFD9
  5692                           status	equ	0xFD8
  5693                           
  5694 ;; *************** function ___ftpack *****************
  5695 ;; Defined at:
  5696 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  5697 ;; Parameters:    Size  Location     Type
  5698 ;;  arg             3    0[BANK0 ] unsigned um
  5699 ;;  exp             1    3[BANK0 ] unsigned char 
  5700 ;;  sign            1    4[BANK0 ] unsigned char 
  5701 ;; Auto vars:     Size  Location     Type
  5702 ;;		None
  5703 ;; Return value:  Size  Location     Type
  5704 ;;                  3    0[BANK0 ] float 
  5705 ;; Registers used:
  5706 ;;		wreg, status,2, status,0
  5707 ;; Tracked objects:
  5708 ;;		On entry : 0/0
  5709 ;;		On exit  : 0/0
  5710 ;;		Unchanged: 0/0
  5711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5712 ;;      Params:         0       5       0       0       0       0       0       0       0
  5713 ;;      Locals:         0       0       0       0       0       0       0       0       0
  5714 ;;      Temps:          0       3       0       0       0       0       0       0       0
  5715 ;;      Totals:         0       8       0       0       0       0       0       0       0
  5716 ;;Total ram usage:        8 bytes
  5717 ;; Hardware stack levels used:    1
  5718 ;; Hardware stack levels required when called:    5
  5719 ;; This function calls:
  5720 ;;		Nothing
  5721 ;; This function is called by:
  5722 ;;		___ftmul
  5723 ;;		___lbtoft
  5724 ;; This function uses a non-reentrant model
  5725 ;;
  5726                           
  5727                           	psect	text34
  5728  000DFC                     __ptext34:
  5729                           	opt stack 0
  5730  000DFC                     ___ftpack:
  5731                           	opt stack 21
  5732                           
  5733                           ;incstack = 0
  5734  000DFC  0100               	movlb	0	; () banked
  5735  000DFE  51AF               	movf	___ftpack@exp& (0+255),w,b
  5736  000E00  B4D8               	btfsc	status,2,c
  5737  000E02  D008               	goto	l2262
  5738                           
  5739                           ; BSR set to: 0
  5740  000E04  0100               	movlb	0	; () banked
  5741  000E06  51AC               	movf	___ftpack@arg& (0+255),w,b
  5742  000E08  0100               	movlb	0	; () banked
  5743  000E0A  11AD               	iorwf	(___ftpack@arg+1)& (0+255),w,b
  5744  000E0C  0100               	movlb	0	; () banked
  5745  000E0E  11AE               	iorwf	(___ftpack@arg+2)& (0+255),w,b
  5746  000E10  A4D8               	btfss	status,2,c
  5747  000E12  D014               	goto	l2268
  5748  000E14                     l2262:
  5749                           
  5750                           ; BSR set to: 0
  5751  000E14  0E00               	movlw	0
  5752  000E16  0100               	movlb	0	; () banked
  5753  000E18  6FAC               	movwf	?___ftpack& (0+255),b
  5754  000E1A  0E00               	movlw	0
  5755  000E1C  0100               	movlb	0	; () banked
  5756  000E1E  6FAD               	movwf	(?___ftpack+1)& (0+255),b
  5757  000E20  0E00               	movlw	0
  5758  000E22  0100               	movlb	0	; () banked
  5759  000E24  6FAE               	movwf	(?___ftpack+2)& (0+255),b
  5760  000E26  D06E               	goto	l875
  5761  000E28                     l2266:
  5762                           
  5763                           ; BSR set to: 0
  5764  000E28  0100               	movlb	0	; () banked
  5765  000E2A  2BAF               	incf	___ftpack@exp& (0+255),f,b
  5766  000E2C  0100               	movlb	0	; () banked
  5767  000E2E  90D8               	bcf	status,0,c
  5768  000E30  0100               	movlb	0	; () banked
  5769  000E32  33AE               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  5770  000E34  0100               	movlb	0	; () banked
  5771  000E36  33AD               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  5772  000E38  0100               	movlb	0	; () banked
  5773  000E3A  33AC               	rrcf	___ftpack@arg& (0+255),f,b
  5774  000E3C                     l2268:
  5775                           
  5776                           ; BSR set to: 0
  5777  000E3C  0E00               	movlw	0
  5778  000E3E  0100               	movlb	0	; () banked
  5779  000E40  15AC               	andwf	___ftpack@arg& (0+255),w,b
  5780  000E42  0100               	movlb	0	; () banked
  5781  000E44  6FB1               	movwf	??___ftpack& (0+255),b
  5782  000E46  0E00               	movlw	0
  5783  000E48  0100               	movlb	0	; () banked
  5784  000E4A  15AD               	andwf	(___ftpack@arg+1)& (0+255),w,b
  5785  000E4C  0100               	movlb	0	; () banked
  5786  000E4E  6FB2               	movwf	(??___ftpack+1)& (0+255),b
  5787  000E50  0EFE               	movlw	254
  5788  000E52  0100               	movlb	0	; () banked
  5789  000E54  15AE               	andwf	(___ftpack@arg+2)& (0+255),w,b
  5790  000E56  0100               	movlb	0	; () banked
  5791  000E58  6FB3               	movwf	(??___ftpack+2)& (0+255),b
  5792  000E5A  0100               	movlb	0	; () banked
  5793  000E5C  51B1               	movf	??___ftpack& (0+255),w,b
  5794  000E5E  11B2               	iorwf	(??___ftpack+1)& (0+255),w,b
  5795  000E60  11B3               	iorwf	(??___ftpack+2)& (0+255),w,b
  5796  000E62  B4D8               	btfsc	status,2,c
  5797  000E64  D014               	goto	l2274
  5798  000E66  D7E0               	goto	l2266
  5799  000E68                     l2270:
  5800                           
  5801                           ; BSR set to: 0
  5802  000E68  0100               	movlb	0	; () banked
  5803  000E6A  2BAF               	incf	___ftpack@exp& (0+255),f,b
  5804                           
  5805                           ; BSR set to: 0
  5806  000E6C  0E01               	movlw	1
  5807  000E6E  0100               	movlb	0	; () banked
  5808  000E70  27AC               	addwf	___ftpack@arg& (0+255),f,b
  5809  000E72  0E00               	movlw	0
  5810  000E74  0100               	movlb	0	; () banked
  5811  000E76  23AD               	addwfc	(___ftpack@arg+1)& (0+255),f,b
  5812  000E78  0E00               	movlw	0
  5813  000E7A  0100               	movlb	0	; () banked
  5814  000E7C  23AE               	addwfc	(___ftpack@arg+2)& (0+255),f,b
  5815  000E7E  0100               	movlb	0	; () banked
  5816  000E80  90D8               	bcf	status,0,c
  5817  000E82  0100               	movlb	0	; () banked
  5818  000E84  33AE               	rrcf	(___ftpack@arg+2)& (0+255),f,b
  5819  000E86  0100               	movlb	0	; () banked
  5820  000E88  33AD               	rrcf	(___ftpack@arg+1)& (0+255),f,b
  5821  000E8A  0100               	movlb	0	; () banked
  5822  000E8C  33AC               	rrcf	___ftpack@arg& (0+255),f,b
  5823  000E8E                     l2274:
  5824                           
  5825                           ; BSR set to: 0
  5826  000E8E  0E00               	movlw	0
  5827  000E90  0100               	movlb	0	; () banked
  5828  000E92  15AC               	andwf	___ftpack@arg& (0+255),w,b
  5829  000E94  0100               	movlb	0	; () banked
  5830  000E96  6FB1               	movwf	??___ftpack& (0+255),b
  5831  000E98  0E00               	movlw	0
  5832  000E9A  0100               	movlb	0	; () banked
  5833  000E9C  15AD               	andwf	(___ftpack@arg+1)& (0+255),w,b
  5834  000E9E  0100               	movlb	0	; () banked
  5835  000EA0  6FB2               	movwf	(??___ftpack+1)& (0+255),b
  5836  000EA2  0EFF               	movlw	255
  5837  000EA4  0100               	movlb	0	; () banked
  5838  000EA6  15AE               	andwf	(___ftpack@arg+2)& (0+255),w,b
  5839  000EA8  0100               	movlb	0	; () banked
  5840  000EAA  6FB3               	movwf	(??___ftpack+2)& (0+255),b
  5841  000EAC  0100               	movlb	0	; () banked
  5842  000EAE  51B1               	movf	??___ftpack& (0+255),w,b
  5843  000EB0  11B2               	iorwf	(??___ftpack+1)& (0+255),w,b
  5844  000EB2  11B3               	iorwf	(??___ftpack+2)& (0+255),w,b
  5845  000EB4  B4D8               	btfsc	status,2,c
  5846  000EB6  D00B               	goto	l2278
  5847  000EB8  D7D7               	goto	l2270
  5848  000EBA                     l2276:
  5849                           
  5850                           ; BSR set to: 0
  5851  000EBA  0100               	movlb	0	; () banked
  5852  000EBC  07AF               	decf	___ftpack@exp& (0+255),f,b
  5853  000EBE  0100               	movlb	0	; () banked
  5854  000EC0  90D8               	bcf	status,0,c
  5855  000EC2  0100               	movlb	0	; () banked
  5856  000EC4  37AC               	rlcf	___ftpack@arg& (0+255),f,b
  5857  000EC6  0100               	movlb	0	; () banked
  5858  000EC8  37AD               	rlcf	(___ftpack@arg+1)& (0+255),f,b
  5859  000ECA  0100               	movlb	0	; () banked
  5860  000ECC  37AE               	rlcf	(___ftpack@arg+2)& (0+255),f,b
  5861  000ECE                     l2278:
  5862                           
  5863                           ; BSR set to: 0
  5864  000ECE  0100               	movlb	0	; () banked
  5865  000ED0  AFAD               	btfss	(___ftpack@arg+1)& (0+255),7,b
  5866  000ED2  D7F3               	goto	l2276
  5867                           
  5868                           ; BSR set to: 0
  5869  000ED4  0100               	movlb	0	; () banked
  5870  000ED6  B1AF               	btfsc	___ftpack@exp& (0+255),0,b
  5871  000ED8  D002               	goto	l2282
  5872                           
  5873                           ; BSR set to: 0
  5874  000EDA  0100               	movlb	0	; () banked
  5875  000EDC  9FAD               	bcf	(___ftpack@arg+1)& (0+255),7,b
  5876  000EDE                     l2282:
  5877                           
  5878                           ; BSR set to: 0
  5879  000EDE  0100               	movlb	0	; () banked
  5880  000EE0  90D8               	bcf	status,0,c
  5881  000EE2  33AF               	rrcf	___ftpack@exp& (0+255),f,b
  5882  000EE4  0100               	movlb	0	; () banked
  5883  000EE6  51AF               	movf	___ftpack@exp& (0+255),w,b
  5884  000EE8  0100               	movlb	0	; () banked
  5885  000EEA  13AE               	iorwf	(___ftpack@arg+2)& (0+255),f,b
  5886                           
  5887                           ; BSR set to: 0
  5888  000EEC  0100               	movlb	0	; () banked
  5889  000EEE  51B0               	movf	___ftpack@sign& (0+255),w,b
  5890  000EF0  B4D8               	btfsc	status,2,c
  5891  000EF2  D002               	goto	l2288
  5892                           
  5893                           ; BSR set to: 0
  5894  000EF4  0100               	movlb	0	; () banked
  5895  000EF6  8FAE               	bsf	(___ftpack@arg+2)& (0+255),7,b
  5896  000EF8                     l2288:
  5897                           
  5898                           ; BSR set to: 0
  5899  000EF8  C0AC  F0AC         	movff	___ftpack@arg,?___ftpack
  5900  000EFC  C0AD  F0AD         	movff	___ftpack@arg+1,?___ftpack+1
  5901  000F00  C0AE  F0AE         	movff	___ftpack@arg+2,?___ftpack+2
  5902  000F04                     l875:
  5903                           
  5904                           ; BSR set to: 0
  5905  000F04  0012               	return	
  5906  000F06                     __end_of___ftpack:
  5907                           	opt stack 0
  5908                           tblptru	equ	0xFF8
  5909                           tblptrh	equ	0xFF7
  5910                           tblptrl	equ	0xFF6
  5911                           tablat	equ	0xFF5
  5912                           prodh	equ	0xFF4
  5913                           prodl	equ	0xFF3
  5914                           intcon	equ	0xFF2
  5915                           indf0	equ	0xFEF
  5916                           postinc0	equ	0xFEE
  5917                           fsr0h	equ	0xFEA
  5918                           fsr0l	equ	0xFE9
  5919                           wreg	equ	0xFE8
  5920                           postinc1	equ	0xFE6
  5921                           postdec1	equ	0xFE5
  5922                           fsr1l	equ	0xFE1
  5923                           indf2	equ	0xFDF
  5924                           postinc2	equ	0xFDE
  5925                           postdec2	equ	0xFDD
  5926                           fsr2h	equ	0xFDA
  5927                           fsr2l	equ	0xFD9
  5928                           status	equ	0xFD8
  5929                           
  5930 ;; *************** function _SetDCPWM1 *****************
  5931 ;; Defined at:
  5932 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw1setdc.c"
  5933 ;; Parameters:    Size  Location     Type
  5934 ;;  dutycycle       2    0[BANK0 ] unsigned int 
  5935 ;; Auto vars:     Size  Location     Type
  5936 ;;  DCycle          2    4[BANK0 ] struct PWMDC
  5937 ;; Return value:  Size  Location     Type
  5938 ;;		None               void
  5939 ;; Registers used:
  5940 ;;		wreg, status,2, status,0
  5941 ;; Tracked objects:
  5942 ;;		On entry : 0/0
  5943 ;;		On exit  : 0/0
  5944 ;;		Unchanged: 0/0
  5945 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  5946 ;;      Params:         0       2       0       0       0       0       0       0       0
  5947 ;;      Locals:         0       2       0       0       0       0       0       0       0
  5948 ;;      Temps:          0       2       0       0       0       0       0       0       0
  5949 ;;      Totals:         0       6       0       0       0       0       0       0       0
  5950 ;;Total ram usage:        6 bytes
  5951 ;; Hardware stack levels used:    1
  5952 ;; Hardware stack levels required when called:    5
  5953 ;; This function calls:
  5954 ;;		Nothing
  5955 ;; This function is called by:
  5956 ;;		_PWM_DutyCycle1
  5957 ;; This function uses a non-reentrant model
  5958 ;;
  5959                           
  5960                           	psect	text35
  5961  001AFE                     __ptext35:
  5962                           	opt stack 0
  5963  001AFE                     _SetDCPWM1:
  5964                           	opt stack 22
  5965                           
  5966                           ; BSR set to: 0
  5967                           ;incstack = 0
  5968  001AFE  0100               	movlb	0	; () banked
  5969  001B00  C0AC  F0AE         	movff	SetDCPWM1@dutycycle,??_SetDCPWM1
  5970  001B04  0100               	movlb	0	; () banked
  5971  001B06  C0AD  F0AF         	movff	SetDCPWM1@dutycycle+1,??_SetDCPWM1+1
  5972  001B0A  0E06               	movlw	6
  5973  001B0C                     u1765:
  5974  001B0C  90D8               	bcf	status,0,c
  5975  001B0E  0100               	movlb	0	; () banked
  5976  001B10  37AE               	rlcf	??_SetDCPWM1& (0+255),f,b
  5977  001B12  37AF               	rlcf	(??_SetDCPWM1+1)& (0+255),f,b
  5978  001B14  2EE8               	decfsz	wreg,f,c
  5979  001B16  D7FA               	goto	u1765
  5980  001B18  C0AE  F0B0         	movff	??_SetDCPWM1,SetDCPWM1@DCycle
  5981  001B1C  C0AF  F0B1         	movff	??_SetDCPWM1+1,SetDCPWM1@DCycle+1
  5982                           
  5983                           ; BSR set to: 0
  5984  001B20  C0B1  FFBE         	movff	SetDCPWM1@DCycle+1,4030	;volatile
  5985  001B24  C0B0  F0AE         	movff	SetDCPWM1@DCycle,??_SetDCPWM1
  5986  001B28  0100               	movlb	0	; () banked
  5987  001B2A  90D8               	bcf	status,0,c
  5988  001B2C  33AE               	rrcf	??_SetDCPWM1& (0+255),f,b
  5989  001B2E  0100               	movlb	0	; () banked
  5990  001B30  90D8               	bcf	status,0,c
  5991  001B32  33AE               	rrcf	??_SetDCPWM1& (0+255),f,b
  5992  001B34  0E30               	movlw	48
  5993  001B36  0100               	movlb	0	; () banked
  5994  001B38  17AE               	andwf	??_SetDCPWM1& (0+255),f,b
  5995  001B3A  50BD               	movf	4029,w,c	;volatile
  5996  001B3C  0BCF               	andlw	207
  5997  001B3E  0100               	movlb	0	; () banked
  5998  001B40  11AE               	iorwf	??_SetDCPWM1& (0+255),w,b
  5999  001B42  6EBD               	movwf	4029,c	;volatile
  6000                           
  6001                           ; BSR set to: 0
  6002  001B44  0012               	return	
  6003  001B46                     __end_of_SetDCPWM1:
  6004                           	opt stack 0
  6005                           tblptru	equ	0xFF8
  6006                           tblptrh	equ	0xFF7
  6007                           tblptrl	equ	0xFF6
  6008                           tablat	equ	0xFF5
  6009                           prodh	equ	0xFF4
  6010                           prodl	equ	0xFF3
  6011                           intcon	equ	0xFF2
  6012                           indf0	equ	0xFEF
  6013                           postinc0	equ	0xFEE
  6014                           fsr0h	equ	0xFEA
  6015                           fsr0l	equ	0xFE9
  6016                           wreg	equ	0xFE8
  6017                           postinc1	equ	0xFE6
  6018                           postdec1	equ	0xFE5
  6019                           fsr1l	equ	0xFE1
  6020                           indf2	equ	0xFDF
  6021                           postinc2	equ	0xFDE
  6022                           postdec2	equ	0xFDD
  6023                           fsr2h	equ	0xFDA
  6024                           fsr2l	equ	0xFD9
  6025                           status	equ	0xFD8
  6026                           
  6027 ;; *************** function _clrBufferUSART *****************
  6028 ;; Defined at:
  6029 ;;		line 68 in file "Bluetooth.c"
  6030 ;; Parameters:    Size  Location     Type
  6031 ;;		None
  6032 ;; Auto vars:     Size  Location     Type
  6033 ;;  i               2    0[BANK0 ] int 
  6034 ;; Return value:  Size  Location     Type
  6035 ;;		None               void
  6036 ;; Registers used:
  6037 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6038 ;; Tracked objects:
  6039 ;;		On entry : 0/0
  6040 ;;		On exit  : 0/0
  6041 ;;		Unchanged: 0/0
  6042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6043 ;;      Params:         0       0       0       0       0       0       0       0       0
  6044 ;;      Locals:         0       2       0       0       0       0       0       0       0
  6045 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6046 ;;      Totals:         0       2       0       0       0       0       0       0       0
  6047 ;;Total ram usage:        2 bytes
  6048 ;; Hardware stack levels used:    1
  6049 ;; Hardware stack levels required when called:    5
  6050 ;; This function calls:
  6051 ;;		Nothing
  6052 ;; This function is called by:
  6053 ;;		_Inicializa_Driveby
  6054 ;;		_Comando_Tablet
  6055 ;;		_main
  6056 ;;		_CheckTX
  6057 ;;		_EstadoBluetooth
  6058 ;; This function uses a non-reentrant model
  6059 ;;
  6060                           
  6061                           	psect	text36
  6062  001BD0                     __ptext36:
  6063                           	opt stack 0
  6064  001BD0                     _clrBufferUSART:
  6065                           	opt stack 25
  6066                           
  6067                           ;Bluetooth.c: 69: int i;
  6068                           ;Bluetooth.c: 70: for (i = 0; i < 20; i++) {
  6069                           
  6070                           ; BSR set to: 0
  6071                           ;incstack = 0
  6072  001BD0  0E00               	movlw	0
  6073  001BD2  0100               	movlb	0	; () banked
  6074  001BD4  6FAD               	movwf	(clrBufferUSART@i+1)& (0+255),b
  6075  001BD6  0E00               	movlw	0
  6076  001BD8  0100               	movlb	0	; () banked
  6077  001BDA  6FAC               	movwf	clrBufferUSART@i& (0+255),b
  6078  001BDC                     
  6079                           ; BSR set to: 0
  6080  001BDC  0100               	movlb	0	; () banked
  6081  001BDE  51AD               	movf	(clrBufferUSART@i+1)& (0+255),w,b
  6082  001BE0  0A80               	xorlw	128
  6083  001BE2  0F80               	addlw	-128
  6084  001BE4  0E14               	movlw	20
  6085  001BE6  B4D8               	btfsc	status,2,c
  6086  001BE8  5DAC               	subwf	clrBufferUSART@i& (0+255),w,b
  6087  001BEA  B0D8               	btfsc	status,0,c
  6088  001BEC  D012               	goto	l54
  6089                           
  6090                           ; BSR set to: 0
  6091                           ;Bluetooth.c: 71: BluetoothDato[i] = 0;
  6092                           
  6093                           ; BSR set to: 0
  6094                           
  6095                           ; BSR set to: 0
  6096  001BEE  0100               	movlb	0	; () banked
  6097  001BF0  0E65               	movlw	low _BluetoothDato
  6098  001BF2  0100               	movlb	0	; () banked
  6099  001BF4  25AC               	addwf	clrBufferUSART@i& (0+255),w,b
  6100  001BF6  6ED9               	movwf	fsr2l,c
  6101  001BF8  0100               	movlb	0	; () banked
  6102  001BFA  0E00               	movlw	high _BluetoothDato
  6103  001BFC  0100               	movlb	0	; () banked
  6104  001BFE  21AD               	addwfc	(clrBufferUSART@i+1)& (0+255),w,b
  6105  001C00  6EDA               	movwf	fsr2h,c
  6106  001C02  0E00               	movlw	0
  6107  001C04  6EDF               	movwf	indf2,c
  6108                           
  6109                           ; BSR set to: 0
  6110                           ;Bluetooth.c: 72: cad = 0;
  6111  001C06  0E00               	movlw	0
  6112  001C08  6E55               	movwf	_cad,c
  6113                           
  6114                           ; BSR set to: 0
  6115  001C0A  0100               	movlb	0	; () banked
  6116  001C0C  4BAC               	infsnz	clrBufferUSART@i& (0+255),f,b
  6117  001C0E  2BAD               	incf	(clrBufferUSART@i+1)& (0+255),f,b
  6118  001C10  D7E5               	goto	L11
  6119  001C12                     l54:
  6120                           
  6121                           ; BSR set to: 0
  6122  001C12  0012               	return	
  6123  001C14                     __end_of_clrBufferUSART:
  6124                           	opt stack 0
  6125                           tblptru	equ	0xFF8
  6126                           tblptrh	equ	0xFF7
  6127                           tblptrl	equ	0xFF6
  6128                           tablat	equ	0xFF5
  6129                           prodh	equ	0xFF4
  6130                           prodl	equ	0xFF3
  6131                           intcon	equ	0xFF2
  6132                           indf0	equ	0xFEF
  6133                           postinc0	equ	0xFEE
  6134                           fsr0h	equ	0xFEA
  6135                           fsr0l	equ	0xFE9
  6136                           wreg	equ	0xFE8
  6137                           postinc1	equ	0xFE6
  6138                           postdec1	equ	0xFE5
  6139                           fsr1l	equ	0xFE1
  6140                           indf2	equ	0xFDF
  6141                           postinc2	equ	0xFDE
  6142                           postdec2	equ	0xFDD
  6143                           fsr2h	equ	0xFDA
  6144                           fsr2l	equ	0xFD9
  6145                           status	equ	0xFD8
  6146                           
  6147 ;; *************** function _TMRO_USART *****************
  6148 ;; Defined at:
  6149 ;;		line 85 in file "robot.c"
  6150 ;; Parameters:    Size  Location     Type
  6151 ;;		None
  6152 ;; Auto vars:     Size  Location     Type
  6153 ;;		None
  6154 ;; Return value:  Size  Location     Type
  6155 ;;		None               void
  6156 ;; Registers used:
  6157 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6158 ;; Tracked objects:
  6159 ;;		On entry : 0/0
  6160 ;;		On exit  : 0/0
  6161 ;;		Unchanged: 0/0
  6162 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6163 ;;      Params:         0       0       0       0       0       0       0       0       0
  6164 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6165 ;;      Temps:         14       0       0       0       0       0       0       0       0
  6166 ;;      Totals:        14       0       0       0       0       0       0       0       0
  6167 ;;Total ram usage:       14 bytes
  6168 ;; Hardware stack levels used:    1
  6169 ;; Hardware stack levels required when called:    4
  6170 ;; This function calls:
  6171 ;;		_ReadUSART
  6172 ;;		i2_go_straight
  6173 ;;		i2_left
  6174 ;;		i2_right
  6175 ;; This function is called by:
  6176 ;;		Interrupt level 2
  6177 ;; This function uses a non-reentrant model
  6178 ;;
  6179                           
  6180                           	psect	intcode
  6181  000008                     __pintcode:
  6182                           	opt stack 0
  6183  000008                     _TMRO_USART:
  6184                           	opt stack 20
  6185                           
  6186                           ; BSR set to: 0
  6187                           ;incstack = 0
  6188  000008  CFFA F034          	movff	pclath,??_TMRO_USART
  6189  00000C  CFFB F035          	movff	pclatu,??_TMRO_USART+1
  6190  000010  CFE9 F036          	movff	fsr0l,??_TMRO_USART+2
  6191  000014  ED83  F007         	call	int_func,f	;refresh shadow registers
  6192                           pclatu	equ	0xFFB
  6193                           pclath	equ	0xFFA
  6194                           tblptru	equ	0xFF8
  6195                           tblptrh	equ	0xFF7
  6196                           tblptrl	equ	0xFF6
  6197                           tablat	equ	0xFF5
  6198                           prodh	equ	0xFF4
  6199                           prodl	equ	0xFF3
  6200                           intcon	equ	0xFF2
  6201                           indf0	equ	0xFEF
  6202                           postinc0	equ	0xFEE
  6203                           fsr0h	equ	0xFEA
  6204                           fsr0l	equ	0xFE9
  6205                           wreg	equ	0xFE8
  6206                           postinc1	equ	0xFE6
  6207                           postdec1	equ	0xFE5
  6208                           fsr1l	equ	0xFE1
  6209                           indf2	equ	0xFDF
  6210                           postinc2	equ	0xFDE
  6211                           postdec2	equ	0xFDD
  6212                           fsr2h	equ	0xFDA
  6213                           fsr2l	equ	0xFD9
  6214                           status	equ	0xFD8
  6215                           
  6216                           	psect	intcode_body
  6217  000F06                     __pintcode_body:
  6218                           	opt stack 20
  6219  000F06                     int_func:
  6220                           	opt stack 20
  6221  000F06  0006               	pop		; remove dummy address from shadow register refresh
  6222  000F08  CFEA F037          	movff	fsr0h,??_TMRO_USART+3
  6223  000F0C  CFE1 F038          	movff	fsr1l,??_TMRO_USART+4
  6224  000F10  CFE2 F039          	movff	fsr1h,??_TMRO_USART+5
  6225  000F14  CFD9 F03A          	movff	fsr2l,??_TMRO_USART+6
  6226  000F18  CFDA F03B          	movff	fsr2h,??_TMRO_USART+7
  6227  000F1C  CFF3 F03C          	movff	prodl,??_TMRO_USART+8
  6228  000F20  CFF4 F03D          	movff	prodh,??_TMRO_USART+9
  6229  000F24  CFF6 F03E          	movff	tblptrl,??_TMRO_USART+10
  6230  000F28  CFF7 F03F          	movff	tblptrh,??_TMRO_USART+11
  6231  000F2C  CFF8 F040          	movff	tblptru,??_TMRO_USART+12
  6232  000F30  CFF5 F041          	movff	tablat,??_TMRO_USART+13
  6233                           
  6234                           ;robot.c: 90: if (PIR1bits.RCIF) {
  6235  000F34  AA9E               	btfss	3998,5,c	;volatile
  6236  000F36  D032               	goto	i2l3278
  6237                           
  6238                           ;robot.c: 92: BluetoothDato[cad] = ReadUSART();
  6239  000F38  5055               	movf	_cad,w,c
  6240  000F3A  0D01               	mullw	1
  6241  000F3C  0100               	movlb	0	; () banked
  6242  000F3E  0E65               	movlw	low _BluetoothDato
  6243  000F40  24F3               	addwf	prodl,w,c
  6244  000F42  6ED9               	movwf	fsr2l,c
  6245  000F44  0100               	movlb	0	; () banked
  6246  000F46  0E00               	movlw	high _BluetoothDato
  6247  000F48  20F4               	addwfc	prodh,w,c
  6248  000F4A  6EDA               	movwf	fsr2h,c
  6249  000F4C  EC95  F00E         	call	_ReadUSART	;wreg free
  6250  000F50  6EDF               	movwf	indf2,c
  6251                           
  6252                           ;robot.c: 93: if (BluetoothDato[cad] == '#') {
  6253  000F52  5055               	movf	_cad,w,c
  6254  000F54  0D01               	mullw	1
  6255  000F56  0100               	movlb	0	; () banked
  6256  000F58  0E65               	movlw	low _BluetoothDato
  6257  000F5A  24F3               	addwf	prodl,w,c
  6258  000F5C  6ED9               	movwf	fsr2l,c
  6259  000F5E  0100               	movlb	0	; () banked
  6260  000F60  0E00               	movlw	high _BluetoothDato
  6261  000F62  20F4               	addwfc	prodh,w,c
  6262  000F64  6EDA               	movwf	fsr2h,c
  6263  000F66  0E23               	movlw	35
  6264  000F68  62DF               	cpfseq	indf2,c
  6265  000F6A  D015               	goto	i2l3274
  6266                           
  6267                           ; BSR set to: 0
  6268                           ;robot.c: 94: if (ComanTFlag == 0) {
  6269  000F6C  664C               	tstfsz	_ComanTFlag,c
  6270  000F6E  D008               	goto	i2l3270
  6271                           
  6272                           ; BSR set to: 0
  6273                           ;robot.c: 95: EntTrama = 1;
  6274  000F70  0E01               	movlw	1
  6275  000F72  6E4F               	movwf	_EntTrama,c
  6276                           
  6277                           ;robot.c: 96: FinComandT = 0;
  6278  000F74  0E00               	movlw	0
  6279  000F76  0100               	movlb	0	; () banked
  6280  000F78  6F63               	movwf	_FinComandT& (0+255),b
  6281                           
  6282                           ;robot.c: 97: ComanTFlag = 1;
  6283  000F7A  0E01               	movlw	1
  6284  000F7C  6E4C               	movwf	_ComanTFlag,c
  6285  000F7E  D00D               	goto	i2u323_40
  6286  000F80                     i2l3270:
  6287                           
  6288                           ; BSR set to: 0
  6289                           ;robot.c: 100: else if (ComanTFlag == 1) {
  6290  000F80  044C               	decf	_ComanTFlag,w,c
  6291  000F82  A4D8               	btfss	status,2,c
  6292  000F84  D00B               	goto	i2l3278
  6293                           
  6294                           ; BSR set to: 0
  6295                           ;robot.c: 101: ComanTFlag = 0;
  6296  000F86  0E00               	movlw	0
  6297  000F88  6E4C               	movwf	_ComanTFlag,c
  6298                           
  6299                           ;robot.c: 102: FinComandT = 1;
  6300  000F8A  0E01               	movlw	1
  6301  000F8C  0100               	movlb	0	; () banked
  6302  000F8E  6F63               	movwf	_FinComandT& (0+255),b
  6303                           
  6304                           ;robot.c: 103: EntTrama = 0;
  6305  000F90  0E00               	movlw	0
  6306  000F92  6E4F               	movwf	_EntTrama,c
  6307  000F94  D003               	goto	i2l3278
  6308  000F96                     i2l3274:
  6309                           
  6310                           ; BSR set to: 0
  6311                           ;robot.c: 107: else if (EntTrama == 1)
  6312  000F96  044F               	decf	_EntTrama,w,c
  6313  000F98  B4D8               	btfsc	status,2,c
  6314  000F9A                     i2u323_40:
  6315                           
  6316                           ; BSR set to: 0
  6317                           ;robot.c: 108: cad++;
  6318  000F9A  2A55               	incf	_cad,f,c
  6319  000F9C                     i2l3278:
  6320                           
  6321                           ;robot.c: 110: }
  6322                           ;robot.c: 112: if(INTCONbits.INT0F == 1){
  6323  000F9C  B2F2               	btfsc	intcon,1,c	;volatile
  6324                           
  6325                           ;robot.c: 121: go_straight();
  6326  000F9E  EC18  F00F         	call	i2_go_straight	;wreg free
  6327                           
  6328                           ;robot.c: 122: }
  6329                           ;robot.c: 124: if(INTCON3bits.INT1F == 1){
  6330  000FA2  B0F0               	btfsc	intcon3,0,c	;volatile
  6331                           
  6332                           ;robot.c: 131: right();
  6333  000FA4  EC06  F00F         	call	i2_right	;wreg free
  6334                           
  6335                           ;robot.c: 132: }
  6336                           ;robot.c: 133: if(INTCON3bits.INT2F == 1){
  6337  000FA8  A2F0               	btfss	intcon3,1,c	;volatile
  6338  000FAA  D003               	goto	i2l324
  6339                           
  6340                           ;robot.c: 140: left();
  6341  000FAC  EC0F  F00F         	call	i2_left	;wreg free
  6342                           
  6343                           ;robot.c: 141: }
  6344  000FB0  D002               	goto	i2l325
  6345  000FB2                     i2l324:
  6346                           
  6347                           ;robot.c: 142: else if(PIR1bits.TMR2IF){
  6348  000FB2  B29E               	btfsc	3998,1,c	;volatile
  6349                           
  6350                           ;robot.c: 144: PIE1bits.TMR2IE = 0;
  6351  000FB4  929D               	bcf	3997,1,c	;volatile
  6352  000FB6                     i2l325:
  6353                           
  6354                           ;robot.c: 145: }
  6355                           ;robot.c: 146: INTCON3bits.INT2F = 0;
  6356  000FB6  92F0               	bcf	intcon3,1,c	;volatile
  6357                           
  6358                           ;robot.c: 147: INTCON3bits.INT1F = 0;
  6359  000FB8  90F0               	bcf	intcon3,0,c	;volatile
  6360                           
  6361                           ;robot.c: 148: INTCONbits.INT0F = 0;
  6362  000FBA  92F2               	bcf	intcon,1,c	;volatile
  6363                           
  6364                           ;robot.c: 149: PIR1bits.TMR2IF=0;
  6365  000FBC  929E               	bcf	3998,1,c	;volatile
  6366                           
  6367                           ;robot.c: 150: PIR1bits.RCIF=0;
  6368  000FBE  9A9E               	bcf	3998,5,c	;volatile
  6369                           
  6370                           ;robot.c: 152: return;
  6371  000FC0  C041  FFF5         	movff	??_TMRO_USART+13,tablat
  6372  000FC4  C040  FFF8         	movff	??_TMRO_USART+12,tblptru
  6373  000FC8  C03F  FFF7         	movff	??_TMRO_USART+11,tblptrh
  6374  000FCC  C03E  FFF6         	movff	??_TMRO_USART+10,tblptrl
  6375  000FD0  C03D  FFF4         	movff	??_TMRO_USART+9,prodh
  6376  000FD4  C03C  FFF3         	movff	??_TMRO_USART+8,prodl
  6377  000FD8  C03B  FFDA         	movff	??_TMRO_USART+7,fsr2h
  6378  000FDC  C03A  FFD9         	movff	??_TMRO_USART+6,fsr2l
  6379  000FE0  C039  FFE2         	movff	??_TMRO_USART+5,fsr1h
  6380  000FE4  C038  FFE1         	movff	??_TMRO_USART+4,fsr1l
  6381  000FE8  C037  FFEA         	movff	??_TMRO_USART+3,fsr0h
  6382  000FEC  C036  FFE9         	movff	??_TMRO_USART+2,fsr0l
  6383  000FF0  C035  FFFB         	movff	??_TMRO_USART+1,pclatu
  6384  000FF4  C034  FFFA         	movff	??_TMRO_USART,pclath
  6385  000FF8  0011               	retfie		f
  6386  000FFA                     __end_of_TMRO_USART:
  6387                           	opt stack 0
  6388                           pclatu	equ	0xFFB
  6389                           pclath	equ	0xFFA
  6390                           tblptru	equ	0xFF8
  6391                           tblptrh	equ	0xFF7
  6392                           tblptrl	equ	0xFF6
  6393                           tablat	equ	0xFF5
  6394                           prodh	equ	0xFF4
  6395                           prodl	equ	0xFF3
  6396                           intcon	equ	0xFF2
  6397                           intcon3	equ	0xFF0
  6398                           indf0	equ	0xFEF
  6399                           postinc0	equ	0xFEE
  6400                           fsr0h	equ	0xFEA
  6401                           fsr0l	equ	0xFE9
  6402                           wreg	equ	0xFE8
  6403                           postinc1	equ	0xFE6
  6404                           postdec1	equ	0xFE5
  6405                           fsr1h	equ	0xFE2
  6406                           fsr1l	equ	0xFE1
  6407                           indf2	equ	0xFDF
  6408                           postinc2	equ	0xFDE
  6409                           postdec2	equ	0xFDD
  6410                           fsr2h	equ	0xFDA
  6411                           fsr2l	equ	0xFD9
  6412                           status	equ	0xFD8
  6413                           
  6414 ;; *************** function i2_right *****************
  6415 ;; Defined at:
  6416 ;;		line 100 in file "cny70.c"
  6417 ;; Parameters:    Size  Location     Type
  6418 ;;		None
  6419 ;; Auto vars:     Size  Location     Type
  6420 ;;		None
  6421 ;; Return value:  Size  Location     Type
  6422 ;;		None               void
  6423 ;; Registers used:
  6424 ;;		wreg, status,2, status,0, cstack
  6425 ;; Tracked objects:
  6426 ;;		On entry : 0/0
  6427 ;;		On exit  : 0/0
  6428 ;;		Unchanged: 0/0
  6429 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6430 ;;      Params:         0       0       0       0       0       0       0       0       0
  6431 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6432 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6433 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6434 ;;Total ram usage:        0 bytes
  6435 ;; Hardware stack levels used:    1
  6436 ;; Hardware stack levels required when called:    3
  6437 ;; This function calls:
  6438 ;;		i2_PWM_DutyCycle1
  6439 ;;		i2_PWM_DutyCycle2
  6440 ;;		i2_motor_forward
  6441 ;; This function is called by:
  6442 ;;		_TMRO_USART
  6443 ;; This function uses a non-reentrant model
  6444 ;;
  6445                           
  6446                           	psect	text38
  6447  001E0C                     __ptext38:
  6448                           	opt stack 0
  6449  001E0C                     i2_right:
  6450                           	opt stack 20
  6451                           
  6452                           ;cny70.c: 102: motor_forward();
  6453                           
  6454                           ;incstack = 0
  6455  001E0C  EC2B  F00F         	call	i2_motor_forward	;wreg free
  6456                           
  6457                           ;cny70.c: 103: PWM_DutyCycle1(100);
  6458  001E10  0E64               	movlw	100
  6459  001E12  EC93  F00C         	call	i2_PWM_DutyCycle1
  6460                           
  6461                           ;cny70.c: 104: PWM_DutyCycle2(0);
  6462  001E16  0E00               	movlw	0
  6463  001E18  EC5E  F00C         	call	i2_PWM_DutyCycle2
  6464                           
  6465                           ;cny70.c: 105: return;
  6466  001E1C  0012               	return	
  6467  001E1E                     __end_ofi2_right:
  6468                           	opt stack 0
  6469                           pclatu	equ	0xFFB
  6470                           pclath	equ	0xFFA
  6471                           tblptru	equ	0xFF8
  6472                           tblptrh	equ	0xFF7
  6473                           tblptrl	equ	0xFF6
  6474                           tablat	equ	0xFF5
  6475                           prodh	equ	0xFF4
  6476                           prodl	equ	0xFF3
  6477                           intcon	equ	0xFF2
  6478                           intcon3	equ	0xFF0
  6479                           indf0	equ	0xFEF
  6480                           postinc0	equ	0xFEE
  6481                           fsr0h	equ	0xFEA
  6482                           fsr0l	equ	0xFE9
  6483                           wreg	equ	0xFE8
  6484                           postinc1	equ	0xFE6
  6485                           postdec1	equ	0xFE5
  6486                           fsr1h	equ	0xFE2
  6487                           fsr1l	equ	0xFE1
  6488                           indf2	equ	0xFDF
  6489                           postinc2	equ	0xFDE
  6490                           postdec2	equ	0xFDD
  6491                           fsr2h	equ	0xFDA
  6492                           fsr2l	equ	0xFD9
  6493                           status	equ	0xFD8
  6494                           
  6495 ;; *************** function i2_left *****************
  6496 ;; Defined at:
  6497 ;;		line 108 in file "cny70.c"
  6498 ;; Parameters:    Size  Location     Type
  6499 ;;		None
  6500 ;; Auto vars:     Size  Location     Type
  6501 ;;		None
  6502 ;; Return value:  Size  Location     Type
  6503 ;;		None               void
  6504 ;; Registers used:
  6505 ;;		wreg, status,2, status,0, cstack
  6506 ;; Tracked objects:
  6507 ;;		On entry : 0/0
  6508 ;;		On exit  : 0/0
  6509 ;;		Unchanged: 0/0
  6510 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6511 ;;      Params:         0       0       0       0       0       0       0       0       0
  6512 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6513 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6514 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6515 ;;Total ram usage:        0 bytes
  6516 ;; Hardware stack levels used:    1
  6517 ;; Hardware stack levels required when called:    3
  6518 ;; This function calls:
  6519 ;;		i2_PWM_DutyCycle1
  6520 ;;		i2_PWM_DutyCycle2
  6521 ;;		i2_motor_forward
  6522 ;; This function is called by:
  6523 ;;		_TMRO_USART
  6524 ;; This function uses a non-reentrant model
  6525 ;;
  6526                           
  6527                           	psect	text39
  6528  001E1E                     __ptext39:
  6529                           	opt stack 0
  6530  001E1E                     i2_left:
  6531                           	opt stack 20
  6532                           
  6533                           ;cny70.c: 110: motor_forward();
  6534                           
  6535                           ;incstack = 0
  6536  001E1E  EC2B  F00F         	call	i2_motor_forward	;wreg free
  6537                           
  6538                           ;cny70.c: 111: PWM_DutyCycle1(0);
  6539  001E22  0E00               	movlw	0
  6540  001E24  EC93  F00C         	call	i2_PWM_DutyCycle1
  6541                           
  6542                           ;cny70.c: 112: PWM_DutyCycle2(100);
  6543  001E28  0E64               	movlw	100
  6544  001E2A  EC5E  F00C         	call	i2_PWM_DutyCycle2
  6545                           
  6546                           ;cny70.c: 113: return;
  6547  001E2E  0012               	return	
  6548  001E30                     __end_ofi2_left:
  6549                           	opt stack 0
  6550                           pclatu	equ	0xFFB
  6551                           pclath	equ	0xFFA
  6552                           tblptru	equ	0xFF8
  6553                           tblptrh	equ	0xFF7
  6554                           tblptrl	equ	0xFF6
  6555                           tablat	equ	0xFF5
  6556                           prodh	equ	0xFF4
  6557                           prodl	equ	0xFF3
  6558                           intcon	equ	0xFF2
  6559                           intcon3	equ	0xFF0
  6560                           indf0	equ	0xFEF
  6561                           postinc0	equ	0xFEE
  6562                           fsr0h	equ	0xFEA
  6563                           fsr0l	equ	0xFE9
  6564                           wreg	equ	0xFE8
  6565                           postinc1	equ	0xFE6
  6566                           postdec1	equ	0xFE5
  6567                           fsr1h	equ	0xFE2
  6568                           fsr1l	equ	0xFE1
  6569                           indf2	equ	0xFDF
  6570                           postinc2	equ	0xFDE
  6571                           postdec2	equ	0xFDD
  6572                           fsr2h	equ	0xFDA
  6573                           fsr2l	equ	0xFD9
  6574                           status	equ	0xFD8
  6575                           
  6576 ;; *************** function i2_go_straight *****************
  6577 ;; Defined at:
  6578 ;;		line 116 in file "cny70.c"
  6579 ;; Parameters:    Size  Location     Type
  6580 ;;		None
  6581 ;; Auto vars:     Size  Location     Type
  6582 ;;		None
  6583 ;; Return value:  Size  Location     Type
  6584 ;;		None               void
  6585 ;; Registers used:
  6586 ;;		wreg, status,2, status,0, cstack
  6587 ;; Tracked objects:
  6588 ;;		On entry : 0/0
  6589 ;;		On exit  : 0/0
  6590 ;;		Unchanged: 0/0
  6591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6592 ;;      Params:         0       0       0       0       0       0       0       0       0
  6593 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6594 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6595 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6596 ;;Total ram usage:        0 bytes
  6597 ;; Hardware stack levels used:    1
  6598 ;; Hardware stack levels required when called:    3
  6599 ;; This function calls:
  6600 ;;		i2_PWM_DutyCycle1
  6601 ;;		i2_PWM_DutyCycle2
  6602 ;;		i2_motor_forward
  6603 ;; This function is called by:
  6604 ;;		_TMRO_USART
  6605 ;; This function uses a non-reentrant model
  6606 ;;
  6607                           
  6608                           	psect	text40
  6609  001E30                     __ptext40:
  6610                           	opt stack 0
  6611  001E30                     i2_go_straight:
  6612                           	opt stack 20
  6613                           
  6614                           ;cny70.c: 118: motor_forward();
  6615                           
  6616                           ;incstack = 0
  6617  001E30  EC2B  F00F         	call	i2_motor_forward	;wreg free
  6618                           
  6619                           ;cny70.c: 119: PWM_DutyCycle1(100);
  6620  001E34  0E64               	movlw	100
  6621  001E36  EC93  F00C         	call	i2_PWM_DutyCycle1
  6622                           
  6623                           ;cny70.c: 120: PWM_DutyCycle2(100);
  6624  001E3A  0E64               	movlw	100
  6625  001E3C  EC5E  F00C         	call	i2_PWM_DutyCycle2
  6626                           
  6627                           ;cny70.c: 121: return;
  6628  001E40  0012               	return	
  6629  001E42                     __end_ofi2_go_straight:
  6630                           	opt stack 0
  6631                           pclatu	equ	0xFFB
  6632                           pclath	equ	0xFFA
  6633                           tblptru	equ	0xFF8
  6634                           tblptrh	equ	0xFF7
  6635                           tblptrl	equ	0xFF6
  6636                           tablat	equ	0xFF5
  6637                           prodh	equ	0xFF4
  6638                           prodl	equ	0xFF3
  6639                           intcon	equ	0xFF2
  6640                           intcon3	equ	0xFF0
  6641                           indf0	equ	0xFEF
  6642                           postinc0	equ	0xFEE
  6643                           fsr0h	equ	0xFEA
  6644                           fsr0l	equ	0xFE9
  6645                           wreg	equ	0xFE8
  6646                           postinc1	equ	0xFE6
  6647                           postdec1	equ	0xFE5
  6648                           fsr1h	equ	0xFE2
  6649                           fsr1l	equ	0xFE1
  6650                           indf2	equ	0xFDF
  6651                           postinc2	equ	0xFDE
  6652                           postdec2	equ	0xFDD
  6653                           fsr2h	equ	0xFDA
  6654                           fsr2l	equ	0xFD9
  6655                           status	equ	0xFD8
  6656                           
  6657 ;; *************** function i2_motor_forward *****************
  6658 ;; Defined at:
  6659 ;;		line 11 in file "motor.c"
  6660 ;; Parameters:    Size  Location     Type
  6661 ;;		None
  6662 ;; Auto vars:     Size  Location     Type
  6663 ;;		None
  6664 ;; Return value:  Size  Location     Type
  6665 ;;		None               void
  6666 ;; Registers used:
  6667 ;;		None
  6668 ;; Tracked objects:
  6669 ;;		On entry : 0/0
  6670 ;;		On exit  : 0/0
  6671 ;;		Unchanged: 0/0
  6672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6673 ;;      Params:         0       0       0       0       0       0       0       0       0
  6674 ;;      Locals:         0       0       0       0       0       0       0       0       0
  6675 ;;      Temps:          0       0       0       0       0       0       0       0       0
  6676 ;;      Totals:         0       0       0       0       0       0       0       0       0
  6677 ;;Total ram usage:        0 bytes
  6678 ;; Hardware stack levels used:    1
  6679 ;; This function calls:
  6680 ;;		Nothing
  6681 ;; This function is called by:
  6682 ;;		i2_right
  6683 ;;		i2_left
  6684 ;;		i2_go_straight
  6685 ;; This function uses a non-reentrant model
  6686 ;;
  6687                           
  6688                           	psect	text41
  6689  001E56                     __ptext41:
  6690                           	opt stack 0
  6691  001E56                     i2_motor_forward:
  6692                           	opt stack 22
  6693                           
  6694                           ;motor.c: 13: PORTDbits.RD7 = 1;
  6695                           
  6696                           ;incstack = 0
  6697  001E56  8E83               	bsf	3971,7,c	;volatile
  6698                           
  6699                           ;motor.c: 14: PORTDbits.RD4 = 0;
  6700  001E58  9883               	bcf	3971,4,c	;volatile
  6701                           
  6702                           ;motor.c: 15: PORTDbits.RD2 = 1;
  6703  001E5A  8483               	bsf	3971,2,c	;volatile
  6704                           
  6705                           ;motor.c: 16: PORTDbits.RD3 = 0;
  6706  001E5C  9683               	bcf	3971,3,c	;volatile
  6707                           
  6708                           ;motor.c: 18: return;
  6709  001E5E  0012               	return	
  6710  001E60                     __end_ofi2_motor_forward:
  6711                           	opt stack 0
  6712                           pclatu	equ	0xFFB
  6713                           pclath	equ	0xFFA
  6714                           tblptru	equ	0xFF8
  6715                           tblptrh	equ	0xFF7
  6716                           tblptrl	equ	0xFF6
  6717                           tablat	equ	0xFF5
  6718                           prodh	equ	0xFF4
  6719                           prodl	equ	0xFF3
  6720                           intcon	equ	0xFF2
  6721                           intcon3	equ	0xFF0
  6722                           indf0	equ	0xFEF
  6723                           postinc0	equ	0xFEE
  6724                           fsr0h	equ	0xFEA
  6725                           fsr0l	equ	0xFE9
  6726                           wreg	equ	0xFE8
  6727                           postinc1	equ	0xFE6
  6728                           postdec1	equ	0xFE5
  6729                           fsr1h	equ	0xFE2
  6730                           fsr1l	equ	0xFE1
  6731                           indf2	equ	0xFDF
  6732                           postinc2	equ	0xFDE
  6733                           postdec2	equ	0xFDD
  6734                           fsr2h	equ	0xFDA
  6735                           fsr2l	equ	0xFD9
  6736                           status	equ	0xFD8
  6737                           
  6738 ;; *************** function i2_PWM_DutyCycle2 *****************
  6739 ;; Defined at:
  6740 ;;		line 55 in file "pwm.c"
  6741 ;; Parameters:    Size  Location     Type
  6742 ;;  percentageDu    1    wreg     unsigned char 
  6743 ;; Auto vars:     Size  Location     Type
  6744 ;;  percentageDu    1   48[COMRAM] unsigned char 
  6745 ;;  PWM_DutyCycl    2   49[COMRAM] unsigned int 
  6746 ;;  PWM_DutyCycl    2   46[COMRAM] unsigned int 
  6747 ;; Return value:  Size  Location     Type
  6748 ;;		None               void
  6749 ;; Registers used:
  6750 ;;		wreg, status,2, status,0, cstack
  6751 ;; Tracked objects:
  6752 ;;		On entry : 0/0
  6753 ;;		On exit  : 0/0
  6754 ;;		Unchanged: 0/0
  6755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6756 ;;      Params:         0       0       0       0       0       0       0       0       0
  6757 ;;      Locals:         5       0       0       0       0       0       0       0       0
  6758 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6759 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6760 ;;Total ram usage:        9 bytes
  6761 ;; Hardware stack levels used:    1
  6762 ;; Hardware stack levels required when called:    2
  6763 ;; This function calls:
  6764 ;;		i2_SetDCPWM2
  6765 ;;		i2___ftmul
  6766 ;;		i2___fttol
  6767 ;;		i2___lbtoft
  6768 ;; This function is called by:
  6769 ;;		i2_right
  6770 ;;		i2_left
  6771 ;;		i2_go_straight
  6772 ;; This function uses a non-reentrant model
  6773 ;;
  6774                           
  6775                           	psect	text42
  6776  0018BC                     __ptext42:
  6777                           	opt stack 0
  6778  0018BC                     i2_PWM_DutyCycle2:
  6779                           	opt stack 20
  6780                           
  6781                           ;incstack = 0
  6782                           ;i2PWM_DutyCycle2@percentageDuty stored from wreg
  6783  0018BC  6E31               	movwf	i2PWM_DutyCycle2@percentageDuty,c
  6784                           
  6785                           ;pwm.c: 57: unsigned int DC = 0, DutyCycle = 0;
  6786  0018BE  0E00               	movlw	0
  6787  0018C0  6E33               	movwf	i2PWM_DutyCycle2@DC+1,c
  6788  0018C2  0E00               	movlw	0
  6789  0018C4  6E32               	movwf	i2PWM_DutyCycle2@DC,c
  6790  0018C6  0E00               	movlw	0
  6791  0018C8  6E30               	movwf	i2PWM_DutyCycle2@DutyCycle+1,c
  6792  0018CA  0E00               	movlw	0
  6793  0018CC  6E2F               	movwf	i2PWM_DutyCycle2@DutyCycle,c
  6794                           
  6795                           ;pwm.c: 59: DC = (unsigned int)(percentageDuty * 10.23);
  6796  0018CE  0EAE               	movlw	174
  6797  0018D0  6E10               	movwf	i2___ftmul@f2,c
  6798  0018D2  0E23               	movlw	35
  6799  0018D4  6E11               	movwf	i2___ftmul@f2+1,c
  6800  0018D6  0E41               	movlw	65
  6801  0018D8  6E12               	movwf	i2___ftmul@f2+2,c
  6802  0018DA  5031               	movf	i2PWM_DutyCycle2@percentageDuty,w,c
  6803  0018DC  EC83  F00E         	call	i2___lbtoft
  6804  0018E0  C009  F00D         	movff	?i2___lbtoft,i2___ftmul@f1
  6805  0018E4  C00A  F00E         	movff	?i2___lbtoft+1,i2___ftmul@f1+1
  6806  0018E8  C00B  F00F         	movff	?i2___lbtoft+2,i2___ftmul@f1+2
  6807  0018EC  ECFD  F007         	call	i2___ftmul	;wreg free
  6808  0018F0  C00D  F01C         	movff	?i2___ftmul,i2___fttol@f1
  6809  0018F4  C00E  F01D         	movff	?i2___ftmul+1,i2___fttol@f1+1
  6810  0018F8  C00F  F01E         	movff	?i2___ftmul+2,i2___fttol@f1+2
  6811  0018FC  ECDB  F008         	call	i2___fttol	;wreg free
  6812  001900  C01C  F02B         	movff	?i2___fttol,??i2_PWM_DutyCycle2
  6813  001904  C01D  F02C         	movff	?i2___fttol+1,??i2_PWM_DutyCycle2+1
  6814  001908  C01E  F02D         	movff	?i2___fttol+2,??i2_PWM_DutyCycle2+2
  6815  00190C  C01F  F02E         	movff	?i2___fttol+3,??i2_PWM_DutyCycle2+3
  6816  001910  C02B  F032         	movff	??i2_PWM_DutyCycle2,i2PWM_DutyCycle2@DC
  6817  001914  C02C  F033         	movff	??i2_PWM_DutyCycle2+1,i2PWM_DutyCycle2@DC+1
  6818                           
  6819                           ;pwm.c: 60: SetDCPWM2(DC);
  6820  001918  C032  F001         	movff	i2PWM_DutyCycle2@DC,i2SetDCPWM2@dutycycle
  6821  00191C  C033  F002         	movff	i2PWM_DutyCycle2@DC+1,i2SetDCPWM2@dutycycle+1
  6822  001920  EC0A  F00E         	call	i2_SetDCPWM2	;wreg free
  6823                           
  6824                           ;pwm.c: 61: return;
  6825  001924  0012               	return	
  6826  001926                     __end_ofi2_PWM_DutyCycle2:
  6827                           	opt stack 0
  6828                           pclatu	equ	0xFFB
  6829                           pclath	equ	0xFFA
  6830                           tblptru	equ	0xFF8
  6831                           tblptrh	equ	0xFF7
  6832                           tblptrl	equ	0xFF6
  6833                           tablat	equ	0xFF5
  6834                           prodh	equ	0xFF4
  6835                           prodl	equ	0xFF3
  6836                           intcon	equ	0xFF2
  6837                           intcon3	equ	0xFF0
  6838                           indf0	equ	0xFEF
  6839                           postinc0	equ	0xFEE
  6840                           fsr0h	equ	0xFEA
  6841                           fsr0l	equ	0xFE9
  6842                           wreg	equ	0xFE8
  6843                           postinc1	equ	0xFE6
  6844                           postdec1	equ	0xFE5
  6845                           fsr1h	equ	0xFE2
  6846                           fsr1l	equ	0xFE1
  6847                           indf2	equ	0xFDF
  6848                           postinc2	equ	0xFDE
  6849                           postdec2	equ	0xFDD
  6850                           fsr2h	equ	0xFDA
  6851                           fsr2l	equ	0xFD9
  6852                           status	equ	0xFD8
  6853                           
  6854 ;; *************** function i2_SetDCPWM2 *****************
  6855 ;; Defined at:
  6856 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw2setdc.c"
  6857 ;; Parameters:    Size  Location     Type
  6858 ;;  dutycycle       2    0[COMRAM] unsigned int 
  6859 ;; Auto vars:     Size  Location     Type
  6860 ;;  SetDCPWM2       2    4[COMRAM] struct PWMDC
  6861 ;; Return value:  Size  Location     Type
  6862 ;;		None               void
  6863 ;; Registers used:
  6864 ;;		wreg, status,2, status,0
  6865 ;; Tracked objects:
  6866 ;;		On entry : 0/0
  6867 ;;		On exit  : 0/0
  6868 ;;		Unchanged: 0/0
  6869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6870 ;;      Params:         2       0       0       0       0       0       0       0       0
  6871 ;;      Locals:         2       0       0       0       0       0       0       0       0
  6872 ;;      Temps:          2       0       0       0       0       0       0       0       0
  6873 ;;      Totals:         6       0       0       0       0       0       0       0       0
  6874 ;;Total ram usage:        6 bytes
  6875 ;; Hardware stack levels used:    1
  6876 ;; This function calls:
  6877 ;;		Nothing
  6878 ;; This function is called by:
  6879 ;;		i2_PWM_DutyCycle2
  6880 ;; This function uses a non-reentrant model
  6881 ;;
  6882                           
  6883                           	psect	text43
  6884  001C14                     __ptext43:
  6885                           	opt stack 0
  6886  001C14                     i2_SetDCPWM2:
  6887                           	opt stack 21
  6888                           
  6889                           ;incstack = 0
  6890  001C14  C001  F003         	movff	i2SetDCPWM2@dutycycle,??i2_SetDCPWM2
  6891  001C18  C002  F004         	movff	i2SetDCPWM2@dutycycle+1,??i2_SetDCPWM2+1
  6892  001C1C  0E06               	movlw	6
  6893  001C1E                     i2u233_45:
  6894  001C1E  90D8               	bcf	status,0,c
  6895  001C20  3603               	rlcf	??i2_SetDCPWM2,f,c
  6896  001C22  3604               	rlcf	??i2_SetDCPWM2+1,f,c
  6897  001C24  2EE8               	decfsz	wreg,f,c
  6898  001C26  D7FB               	goto	i2u233_45
  6899  001C28  C003  F005         	movff	??i2_SetDCPWM2,i2SetDCPWM2@DCycle
  6900  001C2C  C004  F006         	movff	??i2_SetDCPWM2+1,i2SetDCPWM2@DCycle+1
  6901  001C30  C006  FFBB         	movff	i2SetDCPWM2@DCycle+1,4027	;volatile
  6902  001C34  C005  F003         	movff	i2SetDCPWM2@DCycle,??i2_SetDCPWM2
  6903  001C38  90D8               	bcf	status,0,c
  6904  001C3A  3203               	rrcf	??i2_SetDCPWM2,f,c
  6905  001C3C  90D8               	bcf	status,0,c
  6906  001C3E  3203               	rrcf	??i2_SetDCPWM2,f,c
  6907  001C40  0E30               	movlw	48
  6908  001C42  1603               	andwf	??i2_SetDCPWM2,f,c
  6909  001C44  50BA               	movf	4026,w,c	;volatile
  6910  001C46  0BCF               	andlw	207
  6911  001C48  1003               	iorwf	??i2_SetDCPWM2,w,c
  6912  001C4A  6EBA               	movwf	4026,c	;volatile
  6913  001C4C  0012               	return	
  6914  001C4E                     __end_ofi2_SetDCPWM2:
  6915                           	opt stack 0
  6916                           pclatu	equ	0xFFB
  6917                           pclath	equ	0xFFA
  6918                           tblptru	equ	0xFF8
  6919                           tblptrh	equ	0xFF7
  6920                           tblptrl	equ	0xFF6
  6921                           tablat	equ	0xFF5
  6922                           prodh	equ	0xFF4
  6923                           prodl	equ	0xFF3
  6924                           intcon	equ	0xFF2
  6925                           intcon3	equ	0xFF0
  6926                           indf0	equ	0xFEF
  6927                           postinc0	equ	0xFEE
  6928                           fsr0h	equ	0xFEA
  6929                           fsr0l	equ	0xFE9
  6930                           wreg	equ	0xFE8
  6931                           postinc1	equ	0xFE6
  6932                           postdec1	equ	0xFE5
  6933                           fsr1h	equ	0xFE2
  6934                           fsr1l	equ	0xFE1
  6935                           indf2	equ	0xFDF
  6936                           postinc2	equ	0xFDE
  6937                           postdec2	equ	0xFDD
  6938                           fsr2h	equ	0xFDA
  6939                           fsr2l	equ	0xFD9
  6940                           status	equ	0xFD8
  6941                           
  6942 ;; *************** function i2_PWM_DutyCycle1 *****************
  6943 ;; Defined at:
  6944 ;;		line 33 in file "pwm.c"
  6945 ;; Parameters:    Size  Location     Type
  6946 ;;  percentageDu    1    wreg     unsigned char 
  6947 ;; Auto vars:     Size  Location     Type
  6948 ;;  percentageDu    1   48[COMRAM] unsigned char 
  6949 ;;  PWM_DutyCycl    2   49[COMRAM] unsigned int 
  6950 ;;  PWM_DutyCycl    2   46[COMRAM] unsigned int 
  6951 ;; Return value:  Size  Location     Type
  6952 ;;		None               void
  6953 ;; Registers used:
  6954 ;;		wreg, status,2, status,0, cstack
  6955 ;; Tracked objects:
  6956 ;;		On entry : 0/0
  6957 ;;		On exit  : 0/0
  6958 ;;		Unchanged: 0/0
  6959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  6960 ;;      Params:         0       0       0       0       0       0       0       0       0
  6961 ;;      Locals:         5       0       0       0       0       0       0       0       0
  6962 ;;      Temps:          4       0       0       0       0       0       0       0       0
  6963 ;;      Totals:         9       0       0       0       0       0       0       0       0
  6964 ;;Total ram usage:        9 bytes
  6965 ;; Hardware stack levels used:    1
  6966 ;; Hardware stack levels required when called:    2
  6967 ;; This function calls:
  6968 ;;		i2_SetDCPWM1
  6969 ;;		i2___ftmul
  6970 ;;		i2___fttol
  6971 ;;		i2___lbtoft
  6972 ;; This function is called by:
  6973 ;;		i2_right
  6974 ;;		i2_left
  6975 ;;		i2_go_straight
  6976 ;; This function uses a non-reentrant model
  6977 ;;
  6978                           
  6979                           	psect	text44
  6980  001926                     __ptext44:
  6981                           	opt stack 0
  6982  001926                     i2_PWM_DutyCycle1:
  6983                           	opt stack 20
  6984                           
  6985                           ;incstack = 0
  6986                           ;i2PWM_DutyCycle1@percentageDuty stored from wreg
  6987  001926  6E31               	movwf	i2PWM_DutyCycle1@percentageDuty,c
  6988                           
  6989                           ;pwm.c: 35: unsigned int DC = 0, DutyCycle = 0;
  6990  001928  0E00               	movlw	0
  6991  00192A  6E33               	movwf	i2PWM_DutyCycle1@DC+1,c
  6992  00192C  0E00               	movlw	0
  6993  00192E  6E32               	movwf	i2PWM_DutyCycle1@DC,c
  6994  001930  0E00               	movlw	0
  6995  001932  6E30               	movwf	i2PWM_DutyCycle1@DutyCycle+1,c
  6996  001934  0E00               	movlw	0
  6997  001936  6E2F               	movwf	i2PWM_DutyCycle1@DutyCycle,c
  6998                           
  6999                           ;pwm.c: 37: DC = (unsigned int)(percentageDuty * 10.23);
  7000  001938  0EAE               	movlw	174
  7001  00193A  6E10               	movwf	i2___ftmul@f2,c
  7002  00193C  0E23               	movlw	35
  7003  00193E  6E11               	movwf	i2___ftmul@f2+1,c
  7004  001940  0E41               	movlw	65
  7005  001942  6E12               	movwf	i2___ftmul@f2+2,c
  7006  001944  5031               	movf	i2PWM_DutyCycle1@percentageDuty,w,c
  7007  001946  EC83  F00E         	call	i2___lbtoft
  7008  00194A  C009  F00D         	movff	?i2___lbtoft,i2___ftmul@f1
  7009  00194E  C00A  F00E         	movff	?i2___lbtoft+1,i2___ftmul@f1+1
  7010  001952  C00B  F00F         	movff	?i2___lbtoft+2,i2___ftmul@f1+2
  7011  001956  ECFD  F007         	call	i2___ftmul	;wreg free
  7012  00195A  C00D  F01C         	movff	?i2___ftmul,i2___fttol@f1
  7013  00195E  C00E  F01D         	movff	?i2___ftmul+1,i2___fttol@f1+1
  7014  001962  C00F  F01E         	movff	?i2___ftmul+2,i2___fttol@f1+2
  7015  001966  ECDB  F008         	call	i2___fttol	;wreg free
  7016  00196A  C01C  F02B         	movff	?i2___fttol,??i2_PWM_DutyCycle1
  7017  00196E  C01D  F02C         	movff	?i2___fttol+1,??i2_PWM_DutyCycle1+1
  7018  001972  C01E  F02D         	movff	?i2___fttol+2,??i2_PWM_DutyCycle1+2
  7019  001976  C01F  F02E         	movff	?i2___fttol+3,??i2_PWM_DutyCycle1+3
  7020  00197A  C02B  F032         	movff	??i2_PWM_DutyCycle1,i2PWM_DutyCycle1@DC
  7021  00197E  C02C  F033         	movff	??i2_PWM_DutyCycle1+1,i2PWM_DutyCycle1@DC+1
  7022                           
  7023                           ;pwm.c: 38: SetDCPWM1(DC);
  7024  001982  C032  F001         	movff	i2PWM_DutyCycle1@DC,i2SetDCPWM1@dutycycle
  7025  001986  C033  F002         	movff	i2PWM_DutyCycle1@DC+1,i2SetDCPWM1@dutycycle+1
  7026  00198A  EC27  F00E         	call	i2_SetDCPWM1	;wreg free
  7027                           
  7028                           ;pwm.c: 39: return;
  7029  00198E  0012               	return	
  7030  001990                     __end_ofi2_PWM_DutyCycle1:
  7031                           	opt stack 0
  7032                           pclatu	equ	0xFFB
  7033                           pclath	equ	0xFFA
  7034                           tblptru	equ	0xFF8
  7035                           tblptrh	equ	0xFF7
  7036                           tblptrl	equ	0xFF6
  7037                           tablat	equ	0xFF5
  7038                           prodh	equ	0xFF4
  7039                           prodl	equ	0xFF3
  7040                           intcon	equ	0xFF2
  7041                           intcon3	equ	0xFF0
  7042                           indf0	equ	0xFEF
  7043                           postinc0	equ	0xFEE
  7044                           fsr0h	equ	0xFEA
  7045                           fsr0l	equ	0xFE9
  7046                           wreg	equ	0xFE8
  7047                           postinc1	equ	0xFE6
  7048                           postdec1	equ	0xFE5
  7049                           fsr1h	equ	0xFE2
  7050                           fsr1l	equ	0xFE1
  7051                           indf2	equ	0xFDF
  7052                           postinc2	equ	0xFDE
  7053                           postdec2	equ	0xFDD
  7054                           fsr2h	equ	0xFDA
  7055                           fsr2l	equ	0xFD9
  7056                           status	equ	0xFD8
  7057                           
  7058 ;; *************** function i2___lbtoft *****************
  7059 ;; Defined at:
  7060 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lbtoft.c"
  7061 ;; Parameters:    Size  Location     Type
  7062 ;;  c               1    wreg     unsigned char 
  7063 ;; Auto vars:     Size  Location     Type
  7064 ;;  c               1   11[COMRAM] unsigned char 
  7065 ;; Return value:  Size  Location     Type
  7066 ;;                  3    8[COMRAM] float 
  7067 ;; Registers used:
  7068 ;;		wreg, status,2, status,0, cstack
  7069 ;; Tracked objects:
  7070 ;;		On entry : 0/0
  7071 ;;		On exit  : 0/0
  7072 ;;		Unchanged: 0/0
  7073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7074 ;;      Params:         3       0       0       0       0       0       0       0       0
  7075 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7076 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7077 ;;      Totals:         4       0       0       0       0       0       0       0       0
  7078 ;;Total ram usage:        4 bytes
  7079 ;; Hardware stack levels used:    1
  7080 ;; Hardware stack levels required when called:    1
  7081 ;; This function calls:
  7082 ;;		i2___ftpack
  7083 ;; This function is called by:
  7084 ;;		i2_PWM_DutyCycle1
  7085 ;;		i2_PWM_DutyCycle2
  7086 ;; This function uses a non-reentrant model
  7087 ;;
  7088                           
  7089                           	psect	text45
  7090  001D06                     __ptext45:
  7091                           	opt stack 0
  7092  001D06                     i2___lbtoft:
  7093                           	opt stack 20
  7094                           
  7095                           ;incstack = 0
  7096                           ;i2___lbtoft@c stored from wreg
  7097  001D06  6E0C               	movwf	i2___lbtoft@c,c
  7098  001D08  500C               	movf	i2___lbtoft@c,w,c
  7099  001D0A  6E01               	movwf	i2___ftpack@arg,c
  7100  001D0C  6A02               	clrf	i2___ftpack@arg+1,c
  7101  001D0E  6A03               	clrf	i2___ftpack@arg+2,c
  7102  001D10  0E8E               	movlw	142
  7103  001D12  6E04               	movwf	i2___ftpack@exp,c
  7104  001D14  0E00               	movlw	0
  7105  001D16  6E05               	movwf	i2___ftpack@sign,c
  7106  001D18  EC0B  F00A         	call	i2___ftpack	;wreg free
  7107  001D1C  C001  F009         	movff	?i2___ftpack,?i2___lbtoft
  7108  001D20  C002  F00A         	movff	?i2___ftpack+1,?i2___lbtoft+1
  7109  001D24  C003  F00B         	movff	?i2___ftpack+2,?i2___lbtoft+2
  7110  001D28  0012               	return	
  7111  001D2A                     __end_ofi2___lbtoft:
  7112                           	opt stack 0
  7113                           pclatu	equ	0xFFB
  7114                           pclath	equ	0xFFA
  7115                           tblptru	equ	0xFF8
  7116                           tblptrh	equ	0xFF7
  7117                           tblptrl	equ	0xFF6
  7118                           tablat	equ	0xFF5
  7119                           prodh	equ	0xFF4
  7120                           prodl	equ	0xFF3
  7121                           intcon	equ	0xFF2
  7122                           intcon3	equ	0xFF0
  7123                           indf0	equ	0xFEF
  7124                           postinc0	equ	0xFEE
  7125                           fsr0h	equ	0xFEA
  7126                           fsr0l	equ	0xFE9
  7127                           wreg	equ	0xFE8
  7128                           postinc1	equ	0xFE6
  7129                           postdec1	equ	0xFE5
  7130                           fsr1h	equ	0xFE2
  7131                           fsr1l	equ	0xFE1
  7132                           indf2	equ	0xFDF
  7133                           postinc2	equ	0xFDE
  7134                           postdec2	equ	0xFDD
  7135                           fsr2h	equ	0xFDA
  7136                           fsr2l	equ	0xFD9
  7137                           status	equ	0xFD8
  7138                           
  7139 ;; *************** function i2___fttol *****************
  7140 ;; Defined at:
  7141 ;;		line 44 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\fttol.c"
  7142 ;; Parameters:    Size  Location     Type
  7143 ;;  f1              3   27[COMRAM] float 
  7144 ;; Auto vars:     Size  Location     Type
  7145 ;;  __fttol         4   37[COMRAM] unsigned long 
  7146 ;;  __fttol         1   41[COMRAM] unsigned char 
  7147 ;;  __fttol         1   36[COMRAM] unsigned char 
  7148 ;; Return value:  Size  Location     Type
  7149 ;;                  4   27[COMRAM] long 
  7150 ;; Registers used:
  7151 ;;		wreg, status,2, status,0
  7152 ;; Tracked objects:
  7153 ;;		On entry : 0/0
  7154 ;;		On exit  : 0/0
  7155 ;;		Unchanged: 0/0
  7156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7157 ;;      Params:         4       0       0       0       0       0       0       0       0
  7158 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7159 ;;      Temps:          5       0       0       0       0       0       0       0       0
  7160 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7161 ;;Total ram usage:       15 bytes
  7162 ;; Hardware stack levels used:    1
  7163 ;; This function calls:
  7164 ;;		Nothing
  7165 ;; This function is called by:
  7166 ;;		i2_PWM_DutyCycle1
  7167 ;;		i2_PWM_DutyCycle2
  7168 ;; This function uses a non-reentrant model
  7169 ;;
  7170                           
  7171                           	psect	text46
  7172  0011B6                     __ptext46:
  7173                           	opt stack 0
  7174  0011B6                     i2___fttol:
  7175                           	opt stack 21
  7176                           
  7177                           ;incstack = 0
  7178  0011B6  C01E  F020         	movff	i2___fttol@f1+2,??i2___fttol
  7179  0011BA  6A21               	clrf	(??i2___fttol+1)& (0+255),c
  7180  0011BC  6A22               	clrf	(??i2___fttol+2)& (0+255),c
  7181  0011BE  341D               	rlcf	i2___fttol@f1+1,w,c
  7182  0011C0  3620               	rlcf	??i2___fttol& (0+255),f,c
  7183  0011C2  E301               	bnc	u240_41
  7184  0011C4  8021               	bsf	(??i2___fttol+1)& (0+255),0,c
  7185  0011C6                     u240_41:
  7186  0011C6  5020               	movf	??i2___fttol,w,c
  7187  0011C8  6E2A               	movwf	i2___fttol@exp1,c
  7188  0011CA  662A               	tstfsz	i2___fttol@exp1& (0+255),c
  7189  0011CC  D001               	goto	i2l2756
  7190  0011CE  D038               	goto	i2u245_40
  7191  0011D0                     i2l2756:
  7192  0011D0  0E17               	movlw	23
  7193  0011D2  6E20               	movwf	??i2___fttol& (0+255),c
  7194  0011D4  C01C  F021         	movff	i2___fttol@f1,??i2___fttol+1
  7195  0011D8  C01D  F022         	movff	i2___fttol@f1+1,??i2___fttol+2
  7196  0011DC  C01E  F023         	movff	i2___fttol@f1+2,??i2___fttol+3
  7197  0011E0  2820               	incf	??i2___fttol,w,c
  7198  0011E2  6E24               	movwf	(??i2___fttol+4)& (0+255),c
  7199  0011E4  D004               	goto	i2u242_40
  7200  0011E6                     i2u242_45:
  7201  0011E6  90D8               	bcf	status,0,c
  7202  0011E8  3223               	rrcf	??i2___fttol+3,f,c
  7203  0011EA  3222               	rrcf	??i2___fttol+2,f,c
  7204  0011EC  3221               	rrcf	??i2___fttol+1,f,c
  7205  0011EE                     i2u242_40:
  7206  0011EE  2E24               	decfsz	(??i2___fttol+4)& (0+255),f,c
  7207  0011F0  D7FA               	goto	i2u242_45
  7208  0011F2  5021               	movf	??i2___fttol+1,w,c
  7209  0011F4  6E25               	movwf	i2___fttol@sign1,c
  7210  0011F6  8E1D               	bsf	i2___fttol@f1+1,7,c
  7211  0011F8  0EFF               	movlw	255
  7212  0011FA  161C               	andwf	i2___fttol@f1,f,c
  7213  0011FC  0EFF               	movlw	255
  7214  0011FE  161D               	andwf	i2___fttol@f1+1,f,c
  7215  001200  0E00               	movlw	0
  7216  001202  161E               	andwf	i2___fttol@f1+2,f,c
  7217  001204  501C               	movf	i2___fttol@f1,w,c
  7218  001206  6E26               	movwf	i2___fttol@lval,c
  7219  001208  501D               	movf	i2___fttol@f1+1,w,c
  7220  00120A  6E27               	movwf	i2___fttol@lval+1,c
  7221  00120C  501E               	movf	i2___fttol@f1+2,w,c
  7222  00120E  6E28               	movwf	i2___fttol@lval+2,c
  7223  001210  6A29               	clrf	i2___fttol@lval+3,c
  7224  001212  0E8E               	movlw	142
  7225  001214  5E2A               	subwf	i2___fttol@exp1,f,c
  7226  001216  AE2A               	btfss	i2___fttol@exp1,7,c
  7227  001218  D010               	goto	i2l2778
  7228  00121A  502A               	movf	i2___fttol@exp1,w,c
  7229  00121C  0A80               	xorlw	128
  7230  00121E  6E20               	movwf	??i2___fttol& (0+255),c
  7231  001220  0EF1               	movlw	241
  7232  001222  0A80               	xorlw	128
  7233  001224  5C20               	subwf	??i2___fttol,w,c
  7234  001226  A0D8               	btfss	status,0,c
  7235  001228  D00B               	goto	i2u245_40
  7236  00122A                     i2l2774:
  7237  00122A  90D8               	bcf	status,0,c
  7238  00122C  3229               	rrcf	i2___fttol@lval+3,f,c
  7239  00122E  3228               	rrcf	i2___fttol@lval+2,f,c
  7240  001230  3227               	rrcf	i2___fttol@lval+1,f,c
  7241  001232  3226               	rrcf	i2___fttol@lval,f,c
  7242  001234  3E2A               	incfsz	i2___fttol@exp1,f,c
  7243  001236  D7F9               	goto	i2l2774
  7244  001238  D014               	goto	i2l2788
  7245  00123A                     i2l2778:
  7246  00123A  0E17               	movlw	23
  7247  00123C  642A               	cpfsgt	i2___fttol@exp1,c
  7248  00123E  D00F               	goto	i2l2786
  7249  001240                     i2u245_40:
  7250  001240  0E00               	movlw	0
  7251  001242  6E1C               	movwf	?i2___fttol,c
  7252  001244  0E00               	movlw	0
  7253  001246  6E1D               	movwf	?i2___fttol+1,c
  7254  001248  0E00               	movlw	0
  7255  00124A  6E1E               	movwf	?i2___fttol+2,c
  7256  00124C  0E00               	movlw	0
  7257  00124E  6E1F               	movwf	?i2___fttol+3,c
  7258  001250  D01B               	goto	i2l979
  7259  001252                     i2l2784:
  7260  001252  90D8               	bcf	status,0,c
  7261  001254  3626               	rlcf	i2___fttol@lval,f,c
  7262  001256  3627               	rlcf	i2___fttol@lval+1,f,c
  7263  001258  3628               	rlcf	i2___fttol@lval+2,f,c
  7264  00125A  3629               	rlcf	i2___fttol@lval+3,f,c
  7265  00125C  062A               	decf	i2___fttol@exp1,f,c
  7266  00125E                     i2l2786:
  7267  00125E  662A               	tstfsz	i2___fttol@exp1,c
  7268  001260  D7F8               	goto	i2l2784
  7269  001262                     i2l2788:
  7270  001262  5025               	movf	i2___fttol@sign1,w,c
  7271  001264  B4D8               	btfsc	status,2,c
  7272  001266  D008               	goto	i2l2792
  7273  001268  1E29               	comf	i2___fttol@lval+3,f,c
  7274  00126A  1E28               	comf	i2___fttol@lval+2,f,c
  7275  00126C  1E27               	comf	i2___fttol@lval+1,f,c
  7276  00126E  6C26               	negf	i2___fttol@lval,c
  7277  001270  0E00               	movlw	0
  7278  001272  2227               	addwfc	i2___fttol@lval+1,f,c
  7279  001274  2228               	addwfc	i2___fttol@lval+2,f,c
  7280  001276  2229               	addwfc	i2___fttol@lval+3,f,c
  7281  001278                     i2l2792:
  7282  001278  C026  F01C         	movff	i2___fttol@lval,?i2___fttol
  7283  00127C  C027  F01D         	movff	i2___fttol@lval+1,?i2___fttol+1
  7284  001280  C028  F01E         	movff	i2___fttol@lval+2,?i2___fttol+2
  7285  001284  C029  F01F         	movff	i2___fttol@lval+3,?i2___fttol+3
  7286  001288                     i2l979:
  7287  001288  0012               	return	
  7288  00128A                     __end_ofi2___fttol:
  7289                           	opt stack 0
  7290                           pclatu	equ	0xFFB
  7291                           pclath	equ	0xFFA
  7292                           tblptru	equ	0xFF8
  7293                           tblptrh	equ	0xFF7
  7294                           tblptrl	equ	0xFF6
  7295                           tablat	equ	0xFF5
  7296                           prodh	equ	0xFF4
  7297                           prodl	equ	0xFF3
  7298                           intcon	equ	0xFF2
  7299                           intcon3	equ	0xFF0
  7300                           indf0	equ	0xFEF
  7301                           postinc0	equ	0xFEE
  7302                           fsr0h	equ	0xFEA
  7303                           fsr0l	equ	0xFE9
  7304                           wreg	equ	0xFE8
  7305                           postinc1	equ	0xFE6
  7306                           postdec1	equ	0xFE5
  7307                           fsr1h	equ	0xFE2
  7308                           fsr1l	equ	0xFE1
  7309                           indf2	equ	0xFDF
  7310                           postinc2	equ	0xFDE
  7311                           postdec2	equ	0xFDD
  7312                           fsr2h	equ	0xFDA
  7313                           fsr2l	equ	0xFD9
  7314                           status	equ	0xFD8
  7315                           
  7316 ;; *************** function i2___ftmul *****************
  7317 ;; Defined at:
  7318 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\ftmul.c"
  7319 ;; Parameters:    Size  Location     Type
  7320 ;;  f1              3   12[COMRAM] float 
  7321 ;;  f2              3   15[COMRAM] float 
  7322 ;; Auto vars:     Size  Location     Type
  7323 ;;  __ftmul         3   22[COMRAM] unsigned um
  7324 ;;  __ftmul         1   26[COMRAM] unsigned char 
  7325 ;;  __ftmul         1   25[COMRAM] unsigned char 
  7326 ;;  __ftmul         1   21[COMRAM] unsigned char 
  7327 ;; Return value:  Size  Location     Type
  7328 ;;                  3   12[COMRAM] float 
  7329 ;; Registers used:
  7330 ;;		wreg, status,2, status,0, cstack
  7331 ;; Tracked objects:
  7332 ;;		On entry : 0/0
  7333 ;;		On exit  : 0/0
  7334 ;;		Unchanged: 0/0
  7335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7336 ;;      Params:         6       0       0       0       0       0       0       0       0
  7337 ;;      Locals:         6       0       0       0       0       0       0       0       0
  7338 ;;      Temps:          3       0       0       0       0       0       0       0       0
  7339 ;;      Totals:        15       0       0       0       0       0       0       0       0
  7340 ;;Total ram usage:       15 bytes
  7341 ;; Hardware stack levels used:    1
  7342 ;; Hardware stack levels required when called:    1
  7343 ;; This function calls:
  7344 ;;		i2___ftpack
  7345 ;; This function is called by:
  7346 ;;		i2_PWM_DutyCycle1
  7347 ;;		i2_PWM_DutyCycle2
  7348 ;; This function uses a non-reentrant model
  7349 ;;
  7350                           
  7351                           	psect	text47
  7352  000FFA                     __ptext47:
  7353                           	opt stack 0
  7354  000FFA                     i2___ftmul:
  7355                           	opt stack 20
  7356                           
  7357                           ;incstack = 0
  7358  000FFA  C00F  F013         	movff	i2___ftmul@f1+2,??i2___ftmul
  7359  000FFE  6A14               	clrf	(??i2___ftmul+1)& (0+255),c
  7360  001000  6A15               	clrf	(??i2___ftmul+2)& (0+255),c
  7361  001002  340E               	rlcf	i2___ftmul@f1+1,w,c
  7362  001004  3613               	rlcf	??i2___ftmul& (0+255),f,c
  7363  001006  E301               	bnc	u234_41
  7364  001008  8014               	bsf	(??i2___ftmul+1)& (0+255),0,c
  7365  00100A                     u234_41:
  7366  00100A  5013               	movf	??i2___ftmul,w,c
  7367  00100C  6E16               	movwf	i2___ftmul@exp,c
  7368  00100E  6616               	tstfsz	i2___ftmul@exp& (0+255),c
  7369  001010  D001               	goto	i2l2708
  7370  001012  D00C               	goto	i2u237_40
  7371  001014                     i2l2708:
  7372  001014  C012  F013         	movff	i2___ftmul@f2+2,??i2___ftmul
  7373  001018  6A14               	clrf	(??i2___ftmul+1)& (0+255),c
  7374  00101A  6A15               	clrf	(??i2___ftmul+2)& (0+255),c
  7375  00101C  3411               	rlcf	i2___ftmul@f2+1,w,c
  7376  00101E  3613               	rlcf	??i2___ftmul& (0+255),f,c
  7377  001020  E301               	bnc	u236_41
  7378  001022  8014               	bsf	(??i2___ftmul+1)& (0+255),0,c
  7379  001024                     u236_41:
  7380  001024  5013               	movf	??i2___ftmul,w,c
  7381  001026  6E1B               	movwf	i2___ftmul@sign,c
  7382  001028  661B               	tstfsz	i2___ftmul@sign& (0+255),c
  7383  00102A  D007               	goto	i2l2714
  7384  00102C                     i2u237_40:
  7385  00102C  0E00               	movlw	0
  7386  00102E  6E0D               	movwf	?i2___ftmul,c
  7387  001030  0E00               	movlw	0
  7388  001032  6E0E               	movwf	?i2___ftmul+1,c
  7389  001034  0E00               	movlw	0
  7390  001036  6E0F               	movwf	?i2___ftmul+2,c
  7391  001038  D051               	goto	i2l959
  7392  00103A                     i2l2714:
  7393  00103A  501B               	movf	i2___ftmul@sign,w,c
  7394  00103C  0F7B               	addlw	123
  7395  00103E  2616               	addwf	i2___ftmul@exp,f,c
  7396  001040  C00F  F01B         	movff	i2___ftmul@f1+2,i2___ftmul@sign
  7397  001044  5012               	movf	i2___ftmul@f2+2,w,c
  7398  001046  1A1B               	xorwf	i2___ftmul@sign,f,c
  7399  001048  0E80               	movlw	128
  7400  00104A  161B               	andwf	i2___ftmul@sign,f,c
  7401  00104C  8E0E               	bsf	i2___ftmul@f1+1,7,c
  7402  00104E  8E11               	bsf	i2___ftmul@f2+1,7,c
  7403  001050  0EFF               	movlw	255
  7404  001052  1610               	andwf	i2___ftmul@f2,f,c
  7405  001054  0EFF               	movlw	255
  7406  001056  1611               	andwf	i2___ftmul@f2+1,f,c
  7407  001058  0E00               	movlw	0
  7408  00105A  1612               	andwf	i2___ftmul@f2+2,f,c
  7409  00105C  0E00               	movlw	0
  7410  00105E  6E17               	movwf	i2___ftmul@f3_as_product,c
  7411  001060  0E00               	movlw	0
  7412  001062  6E18               	movwf	i2___ftmul@f3_as_product+1,c
  7413  001064  0E00               	movlw	0
  7414  001066  6E19               	movwf	i2___ftmul@f3_as_product+2,c
  7415  001068  0E07               	movlw	7
  7416  00106A  6E1A               	movwf	i2___ftmul@cntr,c
  7417  00106C                     i2l2728:
  7418  00106C  A00D               	btfss	i2___ftmul@f1,0,c
  7419  00106E  D006               	goto	i2l2732
  7420  001070  5010               	movf	i2___ftmul@f2,w,c
  7421  001072  2617               	addwf	i2___ftmul@f3_as_product,f,c
  7422  001074  5011               	movf	i2___ftmul@f2+1,w,c
  7423  001076  2218               	addwfc	i2___ftmul@f3_as_product+1,f,c
  7424  001078  5012               	movf	i2___ftmul@f2+2,w,c
  7425  00107A  2219               	addwfc	i2___ftmul@f3_as_product+2,f,c
  7426  00107C                     i2l2732:
  7427  00107C  90D8               	bcf	status,0,c
  7428  00107E  320F               	rrcf	i2___ftmul@f1+2,f,c
  7429  001080  320E               	rrcf	i2___ftmul@f1+1,f,c
  7430  001082  320D               	rrcf	i2___ftmul@f1,f,c
  7431  001084  90D8               	bcf	status,0,c
  7432  001086  3610               	rlcf	i2___ftmul@f2,f,c
  7433  001088  3611               	rlcf	i2___ftmul@f2+1,f,c
  7434  00108A  3612               	rlcf	i2___ftmul@f2+2,f,c
  7435  00108C  2E1A               	decfsz	i2___ftmul@cntr,f,c
  7436  00108E  D7EE               	goto	i2l2728
  7437  001090  0E09               	movlw	9
  7438  001092  6E1A               	movwf	i2___ftmul@cntr,c
  7439  001094                     i2l2738:
  7440  001094  A00D               	btfss	i2___ftmul@f1,0,c
  7441  001096  D006               	goto	i2l2742
  7442  001098  5010               	movf	i2___ftmul@f2,w,c
  7443  00109A  2617               	addwf	i2___ftmul@f3_as_product,f,c
  7444  00109C  5011               	movf	i2___ftmul@f2+1,w,c
  7445  00109E  2218               	addwfc	i2___ftmul@f3_as_product+1,f,c
  7446  0010A0  5012               	movf	i2___ftmul@f2+2,w,c
  7447  0010A2  2219               	addwfc	i2___ftmul@f3_as_product+2,f,c
  7448  0010A4                     i2l2742:
  7449  0010A4  90D8               	bcf	status,0,c
  7450  0010A6  320F               	rrcf	i2___ftmul@f1+2,f,c
  7451  0010A8  320E               	rrcf	i2___ftmul@f1+1,f,c
  7452  0010AA  320D               	rrcf	i2___ftmul@f1,f,c
  7453  0010AC  90D8               	bcf	status,0,c
  7454  0010AE  3219               	rrcf	i2___ftmul@f3_as_product+2,f,c
  7455  0010B0  3218               	rrcf	i2___ftmul@f3_as_product+1,f,c
  7456  0010B2  3217               	rrcf	i2___ftmul@f3_as_product,f,c
  7457  0010B4  2E1A               	decfsz	i2___ftmul@cntr,f,c
  7458  0010B6  D7EE               	goto	i2l2738
  7459  0010B8  C017  F001         	movff	i2___ftmul@f3_as_product,i2___ftpack@arg
  7460  0010BC  C018  F002         	movff	i2___ftmul@f3_as_product+1,i2___ftpack@arg+1
  7461  0010C0  C019  F003         	movff	i2___ftmul@f3_as_product+2,i2___ftpack@arg+2
  7462  0010C4  C016  F004         	movff	i2___ftmul@exp,i2___ftpack@exp
  7463  0010C8  C01B  F005         	movff	i2___ftmul@sign,i2___ftpack@sign
  7464  0010CC  EC0B  F00A         	call	i2___ftpack	;wreg free
  7465  0010D0  C001  F00D         	movff	?i2___ftpack,?i2___ftmul
  7466  0010D4  C002  F00E         	movff	?i2___ftpack+1,?i2___ftmul+1
  7467  0010D8  C003  F00F         	movff	?i2___ftpack+2,?i2___ftmul+2
  7468  0010DC                     i2l959:
  7469  0010DC  0012               	return	
  7470  0010DE                     __end_ofi2___ftmul:
  7471                           	opt stack 0
  7472                           pclatu	equ	0xFFB
  7473                           pclath	equ	0xFFA
  7474                           tblptru	equ	0xFF8
  7475                           tblptrh	equ	0xFF7
  7476                           tblptrl	equ	0xFF6
  7477                           tablat	equ	0xFF5
  7478                           prodh	equ	0xFF4
  7479                           prodl	equ	0xFF3
  7480                           intcon	equ	0xFF2
  7481                           intcon3	equ	0xFF0
  7482                           indf0	equ	0xFEF
  7483                           postinc0	equ	0xFEE
  7484                           fsr0h	equ	0xFEA
  7485                           fsr0l	equ	0xFE9
  7486                           wreg	equ	0xFE8
  7487                           postinc1	equ	0xFE6
  7488                           postdec1	equ	0xFE5
  7489                           fsr1h	equ	0xFE2
  7490                           fsr1l	equ	0xFE1
  7491                           indf2	equ	0xFDF
  7492                           postinc2	equ	0xFDE
  7493                           postdec2	equ	0xFDD
  7494                           fsr2h	equ	0xFDA
  7495                           fsr2l	equ	0xFD9
  7496                           status	equ	0xFD8
  7497                           
  7498 ;; *************** function i2___ftpack *****************
  7499 ;; Defined at:
  7500 ;;		line 62 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\float.c"
  7501 ;; Parameters:    Size  Location     Type
  7502 ;;  arg             3    0[COMRAM] unsigned um
  7503 ;;  exp             1    3[COMRAM] unsigned char 
  7504 ;;  sign            1    4[COMRAM] unsigned char 
  7505 ;; Auto vars:     Size  Location     Type
  7506 ;;		None
  7507 ;; Return value:  Size  Location     Type
  7508 ;;                  3    0[COMRAM] float 
  7509 ;; Registers used:
  7510 ;;		wreg, status,2, status,0
  7511 ;; Tracked objects:
  7512 ;;		On entry : 0/0
  7513 ;;		On exit  : 0/0
  7514 ;;		Unchanged: 0/0
  7515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7516 ;;      Params:         5       0       0       0       0       0       0       0       0
  7517 ;;      Locals:         0       0       0       0       0       0       0       0       0
  7518 ;;      Temps:          3       0       0       0       0       0       0       0       0
  7519 ;;      Totals:         8       0       0       0       0       0       0       0       0
  7520 ;;Total ram usage:        8 bytes
  7521 ;; Hardware stack levels used:    1
  7522 ;; This function calls:
  7523 ;;		Nothing
  7524 ;; This function is called by:
  7525 ;;		i2___ftmul
  7526 ;;		i2___lbtoft
  7527 ;; This function uses a non-reentrant model
  7528 ;;
  7529                           
  7530                           	psect	text48
  7531  001416                     __ptext48:
  7532                           	opt stack 0
  7533  001416                     i2___ftpack:
  7534                           	opt stack 20
  7535                           
  7536                           ;incstack = 0
  7537  001416  5004               	movf	i2___ftpack@exp,w,c
  7538  001418  B4D8               	btfsc	status,2,c
  7539  00141A  D005               	goto	i2l2538
  7540  00141C  5001               	movf	i2___ftpack@arg,w,c
  7541  00141E  1002               	iorwf	i2___ftpack@arg+1,w,c
  7542  001420  1003               	iorwf	i2___ftpack@arg+2,w,c
  7543  001422  A4D8               	btfss	status,2,c
  7544  001424  D00C               	goto	i2l2544
  7545  001426                     i2l2538:
  7546  001426  0E00               	movlw	0
  7547  001428  6E01               	movwf	?i2___ftpack,c
  7548  00142A  0E00               	movlw	0
  7549  00142C  6E02               	movwf	?i2___ftpack+1,c
  7550  00142E  0E00               	movlw	0
  7551  001430  6E03               	movwf	?i2___ftpack+2,c
  7552  001432  D044               	goto	i2l875
  7553  001434                     i2l2542:
  7554  001434  2A04               	incf	i2___ftpack@exp,f,c
  7555  001436  90D8               	bcf	status,0,c
  7556  001438  3203               	rrcf	i2___ftpack@arg+2,f,c
  7557  00143A  3202               	rrcf	i2___ftpack@arg+1,f,c
  7558  00143C  3201               	rrcf	i2___ftpack@arg,f,c
  7559  00143E                     i2l2544:
  7560  00143E  0E00               	movlw	0
  7561  001440  1401               	andwf	i2___ftpack@arg,w,c
  7562  001442  6E06               	movwf	??i2___ftpack& (0+255),c
  7563  001444  0E00               	movlw	0
  7564  001446  1402               	andwf	i2___ftpack@arg+1,w,c
  7565  001448  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
  7566  00144A  0EFE               	movlw	254
  7567  00144C  1403               	andwf	i2___ftpack@arg+2,w,c
  7568  00144E  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
  7569  001450  5006               	movf	??i2___ftpack,w,c
  7570  001452  1007               	iorwf	??i2___ftpack+1,w,c
  7571  001454  1008               	iorwf	??i2___ftpack+2,w,c
  7572  001456  B4D8               	btfsc	status,2,c
  7573  001458  D00C               	goto	i2l2550
  7574  00145A  D7EC               	goto	i2l2542
  7575  00145C                     i2l2546:
  7576  00145C  2A04               	incf	i2___ftpack@exp,f,c
  7577  00145E  0E01               	movlw	1
  7578  001460  2601               	addwf	i2___ftpack@arg,f,c
  7579  001462  0E00               	movlw	0
  7580  001464  2202               	addwfc	i2___ftpack@arg+1,f,c
  7581  001466  0E00               	movlw	0
  7582  001468  2203               	addwfc	i2___ftpack@arg+2,f,c
  7583  00146A  90D8               	bcf	status,0,c
  7584  00146C  3203               	rrcf	i2___ftpack@arg+2,f,c
  7585  00146E  3202               	rrcf	i2___ftpack@arg+1,f,c
  7586  001470  3201               	rrcf	i2___ftpack@arg,f,c
  7587  001472                     i2l2550:
  7588  001472  0E00               	movlw	0
  7589  001474  1401               	andwf	i2___ftpack@arg,w,c
  7590  001476  6E06               	movwf	??i2___ftpack& (0+255),c
  7591  001478  0E00               	movlw	0
  7592  00147A  1402               	andwf	i2___ftpack@arg+1,w,c
  7593  00147C  6E07               	movwf	(??i2___ftpack+1)& (0+255),c
  7594  00147E  0EFF               	movlw	255
  7595  001480  1403               	andwf	i2___ftpack@arg+2,w,c
  7596  001482  6E08               	movwf	(??i2___ftpack+2)& (0+255),c
  7597  001484  5006               	movf	??i2___ftpack,w,c
  7598  001486  1007               	iorwf	??i2___ftpack+1,w,c
  7599  001488  1008               	iorwf	??i2___ftpack+2,w,c
  7600  00148A  B4D8               	btfsc	status,2,c
  7601  00148C  D006               	goto	i2l2554
  7602  00148E  D7E6               	goto	i2l2546
  7603  001490                     i2l2552:
  7604  001490  0604               	decf	i2___ftpack@exp,f,c
  7605  001492  90D8               	bcf	status,0,c
  7606  001494  3601               	rlcf	i2___ftpack@arg,f,c
  7607  001496  3602               	rlcf	i2___ftpack@arg+1,f,c
  7608  001498  3603               	rlcf	i2___ftpack@arg+2,f,c
  7609  00149A                     i2l2554:
  7610  00149A  AE02               	btfss	i2___ftpack@arg+1,7,c
  7611  00149C  D7F9               	goto	i2l2552
  7612  00149E  A004               	btfss	i2___ftpack@exp,0,c
  7613  0014A0  9E02               	bcf	i2___ftpack@arg+1,7,c
  7614  0014A2  90D8               	bcf	status,0,c
  7615  0014A4  3204               	rrcf	i2___ftpack@exp,f,c
  7616  0014A6  5004               	movf	i2___ftpack@exp,w,c
  7617  0014A8  1203               	iorwf	i2___ftpack@arg+2,f,c
  7618  0014AA  5005               	movf	i2___ftpack@sign,w,c
  7619  0014AC  A4D8               	btfss	status,2,c
  7620  0014AE  8E03               	bsf	i2___ftpack@arg+2,7,c
  7621  0014B0  C001  F001         	movff	i2___ftpack@arg,?i2___ftpack
  7622  0014B4  C002  F002         	movff	i2___ftpack@arg+1,?i2___ftpack+1
  7623  0014B8  C003  F003         	movff	i2___ftpack@arg+2,?i2___ftpack+2
  7624  0014BC                     i2l875:
  7625  0014BC  0012               	return	
  7626  0014BE                     __end_ofi2___ftpack:
  7627                           	opt stack 0
  7628                           pclatu	equ	0xFFB
  7629                           pclath	equ	0xFFA
  7630                           tblptru	equ	0xFF8
  7631                           tblptrh	equ	0xFF7
  7632                           tblptrl	equ	0xFF6
  7633                           tablat	equ	0xFF5
  7634                           prodh	equ	0xFF4
  7635                           prodl	equ	0xFF3
  7636                           intcon	equ	0xFF2
  7637                           intcon3	equ	0xFF0
  7638                           indf0	equ	0xFEF
  7639                           postinc0	equ	0xFEE
  7640                           fsr0h	equ	0xFEA
  7641                           fsr0l	equ	0xFE9
  7642                           wreg	equ	0xFE8
  7643                           postinc1	equ	0xFE6
  7644                           postdec1	equ	0xFE5
  7645                           fsr1h	equ	0xFE2
  7646                           fsr1l	equ	0xFE1
  7647                           indf2	equ	0xFDF
  7648                           postinc2	equ	0xFDE
  7649                           postdec2	equ	0xFDD
  7650                           fsr2h	equ	0xFDA
  7651                           fsr2l	equ	0xFD9
  7652                           status	equ	0xFD8
  7653                           
  7654 ;; *************** function i2_SetDCPWM1 *****************
  7655 ;; Defined at:
  7656 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\PWM\pw1setdc.c"
  7657 ;; Parameters:    Size  Location     Type
  7658 ;;  dutycycle       2    0[COMRAM] unsigned int 
  7659 ;; Auto vars:     Size  Location     Type
  7660 ;;  SetDCPWM1       2    4[COMRAM] struct PWMDC
  7661 ;; Return value:  Size  Location     Type
  7662 ;;		None               void
  7663 ;; Registers used:
  7664 ;;		wreg, status,2, status,0
  7665 ;; Tracked objects:
  7666 ;;		On entry : 0/0
  7667 ;;		On exit  : 0/0
  7668 ;;		Unchanged: 0/0
  7669 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7670 ;;      Params:         2       0       0       0       0       0       0       0       0
  7671 ;;      Locals:         2       0       0       0       0       0       0       0       0
  7672 ;;      Temps:          2       0       0       0       0       0       0       0       0
  7673 ;;      Totals:         6       0       0       0       0       0       0       0       0
  7674 ;;Total ram usage:        6 bytes
  7675 ;; Hardware stack levels used:    1
  7676 ;; This function calls:
  7677 ;;		Nothing
  7678 ;; This function is called by:
  7679 ;;		i2_PWM_DutyCycle1
  7680 ;; This function uses a non-reentrant model
  7681 ;;
  7682                           
  7683                           	psect	text49
  7684  001C4E                     __ptext49:
  7685                           	opt stack 0
  7686  001C4E                     i2_SetDCPWM1:
  7687                           	opt stack 21
  7688                           
  7689                           ;incstack = 0
  7690  001C4E  C001  F003         	movff	i2SetDCPWM1@dutycycle,??i2_SetDCPWM1
  7691  001C52  C002  F004         	movff	i2SetDCPWM1@dutycycle+1,??i2_SetDCPWM1+1
  7692  001C56  0E06               	movlw	6
  7693  001C58                     i2u232_45:
  7694  001C58  90D8               	bcf	status,0,c
  7695  001C5A  3603               	rlcf	??i2_SetDCPWM1,f,c
  7696  001C5C  3604               	rlcf	??i2_SetDCPWM1+1,f,c
  7697  001C5E  2EE8               	decfsz	wreg,f,c
  7698  001C60  D7FB               	goto	i2u232_45
  7699  001C62  C003  F005         	movff	??i2_SetDCPWM1,i2SetDCPWM1@DCycle
  7700  001C66  C004  F006         	movff	??i2_SetDCPWM1+1,i2SetDCPWM1@DCycle+1
  7701  001C6A  C006  FFBE         	movff	i2SetDCPWM1@DCycle+1,4030	;volatile
  7702  001C6E  C005  F003         	movff	i2SetDCPWM1@DCycle,??i2_SetDCPWM1
  7703  001C72  90D8               	bcf	status,0,c
  7704  001C74  3203               	rrcf	??i2_SetDCPWM1,f,c
  7705  001C76  90D8               	bcf	status,0,c
  7706  001C78  3203               	rrcf	??i2_SetDCPWM1,f,c
  7707  001C7A  0E30               	movlw	48
  7708  001C7C  1603               	andwf	??i2_SetDCPWM1,f,c
  7709  001C7E  50BD               	movf	4029,w,c	;volatile
  7710  001C80  0BCF               	andlw	207
  7711  001C82  1003               	iorwf	??i2_SetDCPWM1,w,c
  7712  001C84  6EBD               	movwf	4029,c	;volatile
  7713  001C86  0012               	return	
  7714  001C88                     __end_ofi2_SetDCPWM1:
  7715                           	opt stack 0
  7716                           pclatu	equ	0xFFB
  7717                           pclath	equ	0xFFA
  7718                           tblptru	equ	0xFF8
  7719                           tblptrh	equ	0xFF7
  7720                           tblptrl	equ	0xFF6
  7721                           tablat	equ	0xFF5
  7722                           prodh	equ	0xFF4
  7723                           prodl	equ	0xFF3
  7724                           intcon	equ	0xFF2
  7725                           intcon3	equ	0xFF0
  7726                           indf0	equ	0xFEF
  7727                           postinc0	equ	0xFEE
  7728                           fsr0h	equ	0xFEA
  7729                           fsr0l	equ	0xFE9
  7730                           wreg	equ	0xFE8
  7731                           postinc1	equ	0xFE6
  7732                           postdec1	equ	0xFE5
  7733                           fsr1h	equ	0xFE2
  7734                           fsr1l	equ	0xFE1
  7735                           indf2	equ	0xFDF
  7736                           postinc2	equ	0xFDE
  7737                           postdec2	equ	0xFDD
  7738                           fsr2h	equ	0xFDA
  7739                           fsr2l	equ	0xFD9
  7740                           status	equ	0xFD8
  7741                           
  7742 ;; *************** function _ReadUSART *****************
  7743 ;; Defined at:
  7744 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\pic18\plib\USART\uread.c"
  7745 ;; Parameters:    Size  Location     Type
  7746 ;;		None
  7747 ;; Auto vars:     Size  Location     Type
  7748 ;;  data            1    0[COMRAM] unsigned char 
  7749 ;; Return value:  Size  Location     Type
  7750 ;;                  1    wreg      unsigned char 
  7751 ;; Registers used:
  7752 ;;		wreg, status,2, status,0
  7753 ;; Tracked objects:
  7754 ;;		On entry : 0/0
  7755 ;;		On exit  : 0/0
  7756 ;;		Unchanged: 0/0
  7757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  7758 ;;      Params:         0       0       0       0       0       0       0       0       0
  7759 ;;      Locals:         1       0       0       0       0       0       0       0       0
  7760 ;;      Temps:          0       0       0       0       0       0       0       0       0
  7761 ;;      Totals:         1       0       0       0       0       0       0       0       0
  7762 ;;Total ram usage:        1 bytes
  7763 ;; Hardware stack levels used:    1
  7764 ;; This function calls:
  7765 ;;		Nothing
  7766 ;; This function is called by:
  7767 ;;		_TMRO_USART
  7768 ;; This function uses a non-reentrant model
  7769 ;;
  7770                           
  7771                           	psect	text50
  7772  001D2A                     __ptext50:
  7773                           	opt stack 0
  7774  001D2A                     _ReadUSART:
  7775                           	opt stack 23
  7776                           
  7777                           ;incstack = 0
  7778  001D2A  0EF2               	movlw	242
  7779  001D2C  1654               	andwf	_USART_Status,f,c
  7780  001D2E  ACAB               	btfss	4011,6,c	;volatile
  7781  001D30  D003               	goto	i2l551
  7782  001D32  9054               	bcf	_USART_Status,0,c
  7783  001D34  B0AB               	btfsc	4011,0,c	;volatile
  7784  001D36  8054               	bsf	_USART_Status,0,c
  7785  001D38                     i2l551:
  7786  001D38  B4AB               	btfsc	4011,2,c	;volatile
  7787  001D3A  8454               	bsf	_USART_Status,2,c
  7788  001D3C  B2AB               	btfsc	4011,1,c	;volatile
  7789  001D3E  8654               	bsf	_USART_Status,3,c
  7790  001D40  CFAE F001          	movff	4014,ReadUSART@data	;volatile
  7791  001D44  5001               	movf	ReadUSART@data,w,c
  7792  001D46  0012               	return	
  7793  001D48                     __end_of_ReadUSART:
  7794                           	opt stack 0
  7795                           pclatu	equ	0xFFB
  7796                           pclath	equ	0xFFA
  7797                           tblptru	equ	0xFF8
  7798                           tblptrh	equ	0xFF7
  7799                           tblptrl	equ	0xFF6
  7800                           tablat	equ	0xFF5
  7801                           prodh	equ	0xFF4
  7802                           prodl	equ	0xFF3
  7803                           intcon	equ	0xFF2
  7804                           intcon3	equ	0xFF0
  7805                           indf0	equ	0xFEF
  7806                           postinc0	equ	0xFEE
  7807                           fsr0h	equ	0xFEA
  7808                           fsr0l	equ	0xFE9
  7809                           wreg	equ	0xFE8
  7810                           postinc1	equ	0xFE6
  7811                           postdec1	equ	0xFE5
  7812                           fsr1h	equ	0xFE2
  7813                           fsr1l	equ	0xFE1
  7814                           indf2	equ	0xFDF
  7815                           postinc2	equ	0xFDE
  7816                           postdec2	equ	0xFDD
  7817                           fsr2h	equ	0xFDA
  7818                           fsr2l	equ	0xFD9
  7819                           status	equ	0xFD8
  7820                           pclatu	equ	0xFFB
  7821                           pclath	equ	0xFFA
  7822                           tblptru	equ	0xFF8
  7823                           tblptrh	equ	0xFF7
  7824                           tblptrl	equ	0xFF6
  7825                           tablat	equ	0xFF5
  7826                           prodh	equ	0xFF4
  7827                           prodl	equ	0xFF3
  7828                           intcon	equ	0xFF2
  7829                           intcon3	equ	0xFF0
  7830                           indf0	equ	0xFEF
  7831                           postinc0	equ	0xFEE
  7832                           fsr0h	equ	0xFEA
  7833                           fsr0l	equ	0xFE9
  7834                           wreg	equ	0xFE8
  7835                           postinc1	equ	0xFE6
  7836                           postdec1	equ	0xFE5
  7837                           fsr1h	equ	0xFE2
  7838                           fsr1l	equ	0xFE1
  7839                           indf2	equ	0xFDF
  7840                           postinc2	equ	0xFDE
  7841                           postdec2	equ	0xFDD
  7842                           fsr2h	equ	0xFDA
  7843                           fsr2l	equ	0xFD9
  7844                           status	equ	0xFD8
  7845                           
  7846                           	psect	rparam
  7847  0000                     pclatu	equ	0xFFB
  7848                           pclath	equ	0xFFA
  7849                           tblptru	equ	0xFF8
  7850                           tblptrh	equ	0xFF7
  7851                           tblptrl	equ	0xFF6
  7852                           tablat	equ	0xFF5
  7853                           prodh	equ	0xFF4
  7854                           prodl	equ	0xFF3
  7855                           intcon	equ	0xFF2
  7856                           intcon3	equ	0xFF0
  7857                           indf0	equ	0xFEF
  7858                           postinc0	equ	0xFEE
  7859                           fsr0h	equ	0xFEA
  7860                           fsr0l	equ	0xFE9
  7861                           wreg	equ	0xFE8
  7862                           postinc1	equ	0xFE6
  7863                           postdec1	equ	0xFE5
  7864                           fsr1h	equ	0xFE2
  7865                           fsr1l	equ	0xFE1
  7866                           indf2	equ	0xFDF
  7867                           postinc2	equ	0xFDE
  7868                           postdec2	equ	0xFDD
  7869                           fsr2h	equ	0xFDA
  7870                           fsr2l	equ	0xFD9
  7871                           status	equ	0xFD8


Data Sizes:
    Strings     95
    Constant    10
    Data        20
    BSS         144
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     65      95
    BANK0           160     56     150
    BANK1           256      0      40
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    sprintf@f	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_5(CODE[3]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 20
		 -> putcBluetoothInt@s(BANK0[20]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S1372$_cp	PTR const unsigned char  size(2) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 0

    putSTRINGU1@dato	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[9]), STR_3(CODE[9]), STR_2(CODE[15]), STR_1(CODE[12]), 
		 -> BT_Init@nameBT(BANK0[18]), 

    putcBluetoothString@a	PTR unsigned char  size(2) Largest target is 2
		 -> STR_10(CODE[2]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 20
		 -> comando(BANK0[20]), 

    SendBlueToothCommand@command	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_4(CODE[9]), STR_3(CODE[9]), STR_2(CODE[15]), STR_1(CODE[12]), 
		 -> BT_Init@nameBT(BANK0[18]), 


Critical Paths under _main in COMRAM

    None.

Critical Paths under _TMRO_USART in COMRAM

    i2_right->i2_PWM_DutyCycle1
    i2_right->i2_PWM_DutyCycle2
    i2_left->i2_PWM_DutyCycle1
    i2_left->i2_PWM_DutyCycle2
    i2_go_straight->i2_PWM_DutyCycle1
    i2_go_straight->i2_PWM_DutyCycle2
    i2_PWM_DutyCycle2->i2___fttol
    i2_PWM_DutyCycle1->i2___fttol
    i2___lbtoft->i2___ftpack
    i2___fttol->i2___ftmul
    i2___ftmul->i2___lbtoft

Critical Paths under _main in BANK0

    _main->_Comando_Tablet
    _Inicializa_Driveby->_PWM_DutyCycle1
    _Inicializa_Driveby->_PWM_DutyCycle2
    _PWM_init2->_OpenPWM2
    _PWM_init1->_OpenPWM1
    _BT_Init->_SendBlueToothCommand
    _SendBlueToothCommand->_putSTRINGU1
    _putSTRINGU1->_putcTxU1
    _putcTxU1->_WriteUSART
    _Pause_seg->_Pause_ms
    _Comando_Tablet->_putcBluetoothInt
    _putcBluetoothString->_UART1_Init
    _putcBluetoothInt->_sprintf
    _sprintf->___lwmod
    ___lwmod->___lwdiv
    _UART1_Init->_OpenUSART
    _right->_PWM_DutyCycle1
    _right->_PWM_DutyCycle2
    _left->_PWM_DutyCycle1
    _left->_PWM_DutyCycle2
    _go_straight->_PWM_DutyCycle1
    _go_straight->_PWM_DutyCycle2
    _go_back->_PWM_DutyCycle1
    _go_back->_PWM_DutyCycle2
    _PWM_DutyCycle2->___fttol
    _PWM_DutyCycle1->___fttol
    ___lbtoft->___ftpack
    ___fttol->___ftmul
    ___ftmul->___lbtoft

Critical Paths under _TMRO_USART in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TMRO_USART in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TMRO_USART in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TMRO_USART in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TMRO_USART in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TMRO_USART in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _TMRO_USART in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _TMRO_USART in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  109083
                     _Comando_Tablet
                 _Inicializa_Driveby
                         _UART1_Init
                     _clrBufferUSART
                      _getCNY70Value
 ---------------------------------------------------------------------------------
 (1) _Inicializa_Driveby                                   3     3      0   12709
                                             51 BANK0      3     3      0
                            _BT_Init
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                          _PWM_init1
                          _PWM_init2
                          _Pause_seg
                     _clrBufferUSART
 ---------------------------------------------------------------------------------
 (2) _PWM_init2                                            1     1      0      68
                                              3 BANK0      1     1      0
                           _OpenPWM2
 ---------------------------------------------------------------------------------
 (3) _OpenPWM2                                             4     4      0      46
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 (2) _PWM_init1                                            1     1      0      44
                                              1 BANK0      1     1      0
                           _OpenPWM1
 ---------------------------------------------------------------------------------
 (3) _OpenPWM1                                             1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _BT_Init                                             18    18      0    1720
                                             14 BANK0     18    18      0
                          _Pause_seg
               _SendBlueToothCommand
                         _UART1_Init
 ---------------------------------------------------------------------------------
 (3) _SendBlueToothCommand                                 4     0      4    1039
                                             10 BANK0      4     0      4
                        _putSTRINGU1
 ---------------------------------------------------------------------------------
 (4) _putSTRINGU1                                          8     4      4     355
                                              2 BANK0      8     4      4
                           _putcTxU1
 ---------------------------------------------------------------------------------
 (5) _putcTxU1                                             1     1      0      44
                                              1 BANK0      1     1      0
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _Pause_seg                                            2     2      0     350
                                              5 BANK0      2     2      0
                           _Pause_ms
 ---------------------------------------------------------------------------------
 (3) _Pause_ms                                             5     3      2     303
                                              0 BANK0      5     3      2
 ---------------------------------------------------------------------------------
 (1) _Comando_Tablet                                       2     2      0   54352
                                             54 BANK0      2     2      0
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                     _clrBufferUSART
                      _getCNY70Value
                   _putcBluetoothInt
                _putcBluetoothString
 ---------------------------------------------------------------------------------
 (2) _putcBluetoothString                                  6     4      2     482
                                              7 BANK0      6     4      2
                         _UART1_Init
                         _WriteUSART
 ---------------------------------------------------------------------------------
 (2) _putcBluetoothInt                                    24    22      2    1718
                                             30 BANK0     24    22      2
                         _UART1_Init
                         _WriteUSART
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             18    12      6    1182
                                             12 BANK0     18    12      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     287
                                              7 BANK0      5     1      4
                            ___lwdiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     290
                                              0 BANK0      7     3      4
 ---------------------------------------------------------------------------------
 (6) _WriteUSART                                           1     1      0      22
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (1) _UART1_Init                                           1     1      0     306
                                              6 BANK0      1     1      0
                          _OpenUSART
 ---------------------------------------------------------------------------------
 (2) _OpenUSART                                            6     4      2     284
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _getCNY70Value                                        2     0      2   41648
                                             51 BANK0      2     0      2
                            _go_back
                        _go_straight
                               _left
                              _right
 ---------------------------------------------------------------------------------
 (2) _right                                                0     0      0   10412
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                      _motor_forward
 ---------------------------------------------------------------------------------
 (2) _left                                                 0     0      0   10412
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                      _motor_forward
 ---------------------------------------------------------------------------------
 (2) _go_straight                                          0     0      0   10412
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                      _motor_forward
 ---------------------------------------------------------------------------------
 (3) _motor_forward                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _go_back                                              0     0      0   10412
                     _PWM_DutyCycle1
                     _PWM_DutyCycle2
                  _motor_Backforward
 ---------------------------------------------------------------------------------
 (3) _motor_Backforward                                    0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _PWM_DutyCycle2                                       9     9      0    5206
                                             42 BANK0      9     9      0
                          _SetDCPWM2
                            ___ftmul
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (4) _SetDCPWM2                                            6     4      2     133
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (3) _PWM_DutyCycle1                                       9     9      0    5206
                                             42 BANK0      9     9      0
                          _SetDCPWM1
                            ___ftmul
                            ___fttol
                           ___lbtoft
 ---------------------------------------------------------------------------------
 (4) ___lbtoft                                             4     1      3    1992
                                              8 BANK0      4     1      3
                           ___ftpack
 ---------------------------------------------------------------------------------
 (4) ___fttol                                             15    11      4     380
                                             27 BANK0     15    11      4
                            ___ftmul (ARG)
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (4) ___ftmul                                             15     9      6    2654
                                             12 BANK0     15     9      6
                           ___ftpack
                           ___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (5) ___ftpack                                             8     3      5    1970
                                              0 BANK0      8     3      5
 ---------------------------------------------------------------------------------
 (4) _SetDCPWM1                                            6     4      2     133
                                              0 BANK0      6     4      2
 ---------------------------------------------------------------------------------
 (1) _clrBufferUSART                                       2     2      0      68
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _TMRO_USART                                          14    14      0    9779
                                             51 COMRAM    14    14      0
                          _ReadUSART
                      i2_go_straight
                             i2_left
                            i2_right
 ---------------------------------------------------------------------------------
 (8) i2_right                                              0     0      0    3252
                   i2_PWM_DutyCycle1
                   i2_PWM_DutyCycle2
                    i2_motor_forward
 ---------------------------------------------------------------------------------
 (8) i2_left                                               0     0      0    3252
                   i2_PWM_DutyCycle1
                   i2_PWM_DutyCycle2
                    i2_motor_forward
 ---------------------------------------------------------------------------------
 (8) i2_go_straight                                        0     0      0    3252
                   i2_PWM_DutyCycle1
                   i2_PWM_DutyCycle2
                    i2_motor_forward
 ---------------------------------------------------------------------------------
 (9) i2_motor_forward                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (9) i2_PWM_DutyCycle2                                     9     9      0    1626
                                             42 COMRAM     9     9      0
                        i2_SetDCPWM2
                          i2___ftmul
                          i2___fttol
                         i2___lbtoft
 ---------------------------------------------------------------------------------
 (10) i2_SetDCPWM2                                         6     4      2      93
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (9) i2_PWM_DutyCycle1                                     9     9      0    1626
                                             42 COMRAM     9     9      0
                        i2_SetDCPWM1
                          i2___ftmul
                          i2___fttol
                         i2___lbtoft
 ---------------------------------------------------------------------------------
 (10) i2___lbtoft                                          4     1      3     387
                                              8 COMRAM     4     1      3
                         i2___ftpack
 ---------------------------------------------------------------------------------
 (10) i2___fttol                                          15    11      4     304
                                             27 COMRAM    15    11      4
                          i2___ftmul (ARG)
                         i2___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (10) i2___ftmul                                          15     9      6     795
                                             12 COMRAM    15     9      6
                         i2___ftpack
                         i2___lbtoft (ARG)
 ---------------------------------------------------------------------------------
 (11) i2___ftpack                                          8     3      5     365
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (10) i2_SetDCPWM1                                         6     4      2      93
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _ReadUSART                                            1     1      0      23
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Comando_Tablet
     _PWM_DutyCycle1
       _SetDCPWM1
       ___ftmul
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _PWM_DutyCycle2
       _SetDCPWM2
       ___ftmul
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _clrBufferUSART
     _getCNY70Value
       _go_back
         _PWM_DutyCycle1
           _SetDCPWM1
           ___ftmul
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft
             ___ftpack
         _PWM_DutyCycle2
           _SetDCPWM2
           ___ftmul
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft
             ___ftpack
         _motor_Backforward
       _go_straight
         _PWM_DutyCycle1
           _SetDCPWM1
           ___ftmul
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft
             ___ftpack
         _PWM_DutyCycle2
           _SetDCPWM2
           ___ftmul
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft
             ___ftpack
         _motor_forward
       _left
         _PWM_DutyCycle1
           _SetDCPWM1
           ___ftmul
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft
             ___ftpack
         _PWM_DutyCycle2
           _SetDCPWM2
           ___ftmul
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft
             ___ftpack
         _motor_forward
       _right
         _PWM_DutyCycle1
           _SetDCPWM1
           ___ftmul
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft
             ___ftpack
         _PWM_DutyCycle2
           _SetDCPWM2
           ___ftmul
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___fttol
             ___ftmul (ARG)
               ___ftpack
               ___lbtoft (ARG)
                 ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft
             ___ftpack
         _motor_forward
     _putcBluetoothInt
       _UART1_Init
         _OpenUSART
       _WriteUSART
       _sprintf
         ___lwdiv
         ___lwmod
           ___lwdiv (ARG)
     _putcBluetoothString
       _UART1_Init
         _OpenUSART
       _WriteUSART
   _Inicializa_Driveby
     _BT_Init
       _Pause_seg
         _Pause_ms
       _SendBlueToothCommand
         _putSTRINGU1
           _putcTxU1
             _WriteUSART
       _UART1_Init
         _OpenUSART
     _PWM_DutyCycle1
       _SetDCPWM1
       ___ftmul
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _PWM_DutyCycle2
       _SetDCPWM2
       ___ftmul
         ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___fttol
         ___ftmul (ARG)
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft (ARG)
           ___ftpack
       ___lbtoft
         ___ftpack
     _PWM_init1
       _OpenPWM1
     _PWM_init2
       _OpenPWM2
     _Pause_seg
       _Pause_ms
     _clrBufferUSART
   _UART1_Init
     _OpenUSART
   _clrBufferUSART
   _getCNY70Value
     _go_back
       _PWM_DutyCycle1
         _SetDCPWM1
         ___ftmul
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft
           ___ftpack
       _PWM_DutyCycle2
         _SetDCPWM2
         ___ftmul
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft
           ___ftpack
       _motor_Backforward
     _go_straight
       _PWM_DutyCycle1
         _SetDCPWM1
         ___ftmul
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft
           ___ftpack
       _PWM_DutyCycle2
         _SetDCPWM2
         ___ftmul
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft
           ___ftpack
       _motor_forward
     _left
       _PWM_DutyCycle1
         _SetDCPWM1
         ___ftmul
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft
           ___ftpack
       _PWM_DutyCycle2
         _SetDCPWM2
         ___ftmul
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft
           ___ftpack
       _motor_forward
     _right
       _PWM_DutyCycle1
         _SetDCPWM1
         ___ftmul
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft
           ___ftpack
       _PWM_DutyCycle2
         _SetDCPWM2
         ___ftmul
           ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___fttol
           ___ftmul (ARG)
             ___ftpack
             ___lbtoft (ARG)
               ___ftpack
           ___lbtoft (ARG)
             ___ftpack
         ___lbtoft
           ___ftpack
       _motor_forward

 _TMRO_USART (ROOT)
   _ReadUSART
   i2_go_straight
     i2_PWM_DutyCycle1
       i2_SetDCPWM1
       i2___ftmul
         i2___ftpack
         i2___lbtoft (ARG)
           i2___ftpack
       i2___fttol
         i2___ftmul (ARG)
           i2___ftpack
           i2___lbtoft (ARG)
             i2___ftpack
         i2___lbtoft (ARG)
           i2___ftpack
       i2___lbtoft
         i2___ftpack
     i2_PWM_DutyCycle2
       i2_SetDCPWM2
       i2___ftmul
         i2___ftpack
         i2___lbtoft (ARG)
           i2___ftpack
       i2___fttol
         i2___ftmul (ARG)
           i2___ftpack
           i2___lbtoft (ARG)
             i2___ftpack
         i2___lbtoft (ARG)
           i2___ftpack
       i2___lbtoft
         i2___ftpack
     i2_motor_forward
   i2_left
     i2_PWM_DutyCycle1
       i2_SetDCPWM1
       i2___ftmul
         i2___ftpack
         i2___lbtoft (ARG)
           i2___ftpack
       i2___fttol
         i2___ftmul (ARG)
           i2___ftpack
           i2___lbtoft (ARG)
             i2___ftpack
         i2___lbtoft (ARG)
           i2___ftpack
       i2___lbtoft
         i2___ftpack
     i2_PWM_DutyCycle2
       i2_SetDCPWM2
       i2___ftmul
         i2___ftpack
         i2___lbtoft (ARG)
           i2___ftpack
       i2___fttol
         i2___ftmul (ARG)
           i2___ftpack
           i2___lbtoft (ARG)
             i2___ftpack
         i2___lbtoft (ARG)
           i2___ftpack
       i2___lbtoft
         i2___ftpack
     i2_motor_forward
   i2_right
     i2_PWM_DutyCycle1
       i2_SetDCPWM1
       i2___ftmul
         i2___ftpack
         i2___lbtoft (ARG)
           i2___ftpack
       i2___fttol
         i2___ftmul (ARG)
           i2___ftpack
           i2___lbtoft (ARG)
             i2___ftpack
         i2___lbtoft (ARG)
           i2___ftpack
       i2___lbtoft
         i2___ftpack
     i2_PWM_DutyCycle2
       i2_SetDCPWM2
       i2___ftmul
         i2___ftpack
         i2___lbtoft (ARG)
           i2___ftpack
       i2___fttol
         i2___ftmul (ARG)
           i2___ftpack
           i2___lbtoft (ARG)
             i2___ftpack
         i2___lbtoft (ARG)
           i2___ftpack
       i2___lbtoft
         i2___ftpack
     i2_motor_forward

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      28       7       15.6%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     38      96       5       93.8%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     41      5F       1      100.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     11D      20        0.0%
DATA                 0      0     11D       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Fri Oct 06 06:32:40 2017

               ??_motor_forward 00AC                               _i 0048                               _j 0058  
       __size_of_PWM_DutyCycle1 007C         __size_of_PWM_DutyCycle2 007C                              l54 1C12  
                            l59 158A                              l68 1626                   _InicioComando 0050  
                   __CFG_BORV$3 000000                      i2___ftpack 1416                      i2___lbtoft 1D06  
                  __CFG_CP0$OFF 000000                    __CFG_CP1$OFF 000000                    __CFG_CP2$OFF 000000  
                  __CFG_CP3$OFF 000000                             l202 1B76                             l223 1DBE  
                           l401 0D34                             l411 0DB2                             l403 0D4A  
                           l500 1BC4                             l413 0DD0                             l405 0D60  
                           l501 1BC6                             l407 0D7E                             l409 0D94  
                           l540 16AC                             l533 1682                             l542 16D4  
                           l537 169C                             l538 169E                             l539 16AA  
                           l396 0D00                             l397 0DFA                             l399 0D16  
                           l499 1BB8                             l875 0F04                             l959 0B9E  
                           l979 0CE8                    __CFG_CPB$OFF 000000                             _PR2 000FCB  
                  __CFG_CPD$OFF 000000                    __CFG_BOR$OFF 000000                             _cad 0055  
                           prod 000FF3                             wreg 000FE8                    __CFG_LVP$OFF 000000  
                  __CFG_WDT$OFF 000000                            l1081 183C                            l1091 1AAC  
                          l2314 0A9E                            l2402 1366                            l3130 1178  
                          l2332 0B0A                            l2308 0A64                            l2412 13D6  
                          l2270 0E68                            l2262 0E14                            l2342 0B54  
                          l3070 0DEE                            l2502 17EC                            l2328 0AEC  
                          l2256 1D9A                            l2504 17F8                            l2408 13B0  
                          l3304 14E8                            l2282 0EDE                            l2274 0E8E  
                          l2266 0E28                            l2338 0B36                            l2514 182E  
                          l2506 17FE                            l2530 1A9E                            l2522 1A68  
                          l3162 1854                            l2418 1408                            l2276 0EBA  
                          l2268 0E3C                            l2356 0BC8                            l2460 1684  
                          l2452 1672                            l2524 1A74                            l2620 096C  
                          l3172 1894                            l2278 0ECE                            l2374 0C56  
                          l2526 1A7A                            l2606 091E                            l3174 18B6  
                          l2438 1B60                            l3318 150C                            l2288 0EF8  
                          l2392 0CD8                            l2384 0C94                            l3168 1882  
                          l3328 1524                            l2386 0CAC                            l2378 0C72  
                          l2634 0A00                            l2626 098C                            l2388 0CB2  
                          l2628 0992                            l2636 0A0C                            l2572 19A2  
                          l2638 0A2E                            l2590 089E                            l2584 087E  
                          l2576 19E6                            l2850 1594                            l2682 1BB2  
                          l3298 14D6                            l2596 08D6                            l2846 155C  
                          l2864 160C                            l2868 1630                            STR_1 0852  
                          STR_2 080B                            STR_3 085E                            STR_4 085E  
                          STR_5 0867                            STR_6 081A                            STR_7 0828  
                          STR_8 0844                            STR_9 0836                i2_PWM_DutyCycle1 1926  
              i2_PWM_DutyCycle2 18BC                 __end_of_BT_Init 1358                            u1801 0A7C  
                          u1810 0A8A                            u3315 152C                            u3325 1536  
                          u3317 152E                            u3335 1540                            u3327 1538  
                          _PIE1 000F9D                            u1920 13A4                            u1841 0BB8  
                          u2481 12A0                            u3337 1542                            u3347 1106  
                          u1860 0BF4                            u1765 1B0C                            u1781 0A54  
                          u3357 1166                            u1950 13FA                            u1775 1AC4  
                          u3367 1B68                            u1927 139A                            u1865 0BEA  
                          u1890 0C7A                            u1957 13F0                            _TMR2 000FCC  
                  ?_go_straight 0001                            _main 14BE                            _left 1DD6  
                  ___ftpack@arg 00AC                    ___ftpack@exp 00AF                            fsr0h 000FEA  
                          fsr1h 000FE2                            indf0 000FEF                            fsr0l 000FE9  
                          fsr2h 000FDA                            fsr1l 000FE1                            indf2 000FDF  
                          fsr2l 000FD9                            pclat 000FFA                            prodh 000FF4  
                          prodl 000FF3                            start 0018                   __CFG_IESO$OFF 000000  
                    _FinComandB 0062                      _FinComandT 0063                 __end_ofi2_right 1E1E  
                  i2___lbtoft@c 000C                   __CFG_MCLRE$ON 000000                    ___ftmul@cntr 00C5  
                  i2___ftmul@f1 000D                    i2___ftmul@f2 0010                    ___ftmul@sign 00C6  
                  i2___fttol@f1 001C                     ?_UART1_Init 0001                    ___fttol@exp1 00D5  
                  ___fttol@lval 00D1                      _ComanBFlag 004B         __size_of_clrBufferUSART 0044  
                 __CFG_PLLDIV$1 000000                      _ComanTFlag 004C                  __CFG_CCP2MX$ON 000000  
                         ?_main 0001                           ?_left 0001                           STR_10 0818  
               __end_of___ftmul 0BA0                 __end_of___fttol 0CEA                           _T2CON 000FCA  
                   _RXComandoTB 0051                  __CFG_DEBUG$OFF 000000                 __end_of___lwdiv 1846  
               __end_of___lwmod 1AB6                           i2l324 0FB2                           i2l325 0FB6  
                         i2l551 1D38                           i2l875 14BC                           i2l959 10DC  
                         i2l979 1288                           _RCREG 000FAE                           _RCSTA 000FAB  
                         _SPBRG 000FAF                           _PORTA 000F80                           _PORTB 000F81  
                         _PORTC 000F82                           _PORTD 000F83                           _PORTE 000F84  
                 __CFG_USBDIV$2 000000                           _TRISA 000F92                           _TRISB 000F93  
                         _TRISC 000F94                           _TRISD 000F95                           _TRISE 000F96  
                         _TXREG 000FAD                           _TXSTA 000FAC                   __CFG_PWRT$OFF 000000  
                 __CFG_WRT0$OFF 000000                   __CFG_WRT1$OFF 000000                   __CFG_WRT2$OFF 000000  
       PWM_DutyCycle1@DutyCycle 00DA                   __CFG_WRT3$OFF 000000                  __CFG_EBTR0$OFF 000000  
                __CFG_FCMEN$OFF 000000                  __CFG_EBTR1$OFF 000000                  __CFG_EBTR2$OFF 000000  
                __CFG_EBTR3$OFF 000000                 __end_of_go_back 1E0C                   __CFG_WRTB$OFF 000000  
                 __CFG_WRTC$OFF 000000                   __CFG_WRTD$OFF 000000                  __CFG_EBTRB$OFF 000000  
               __end_of_dpowers 080B                           _array 0114                           _right 1DC4  
                 ___ftpack@sign 00B0                           tablat 000FF5         PWM_DutyCycle2@DutyCycle 00DA  
                         status 000FD8                 __end_of_sprintf 0A3C                  __CFG_ICPRT$OFF 000000  
                    Pause_seg@i 00B2                      Pause_seg@x 00B1              __size_ofi2___ftmul 00E4  
            __size_ofi2___fttol 00D4                     ?_TMRO_USART 0001                  WriteUSART@data 00AC  
            __size_of_PWM_init1 0026              __size_of_PWM_init2 0026                 __initialization 19F4  
                  __end_of_main 1548                    __end_of_left 1DE8                   i2___ftmul@exp 0016  
   __size_of_Inicializa_Driveby 00D8                     ?i2___ftpack 0001                     ?i2___lbtoft 0009  
             ?_putcBluetoothInt 00CA                __end_of_OpenPWM1 1D8C                __end_of_OpenPWM2 1BD0  
                        ??_main 00E4                          ??_left 00DF                   ___fttol@sign1 00D0  
              __end_of_Pause_ms 1B8C                   __activetblptr 000003              ??_putcBluetoothInt 00CC  
            i2PWM_DutyCycle1@DC 0032              i2PWM_DutyCycle2@DC 0032                       ??_BT_Init 00BA  
                        _CCPR1L 000FBE                          _CCPR2L 000FBB                          ?_right 0001  
               putSTRINGU1@dato 00AE                 putSTRINGU1@cont 00B5                __end_of___ftpack 0F06  
              __end_of___lbtoft 1CBA                 putSTRINGU1@last 00B4                 clrBufferUSART@i 00AC  
           __size_of_UART1_Init 0016                          i2l2550 1472                          i2l2542 1434  
                        i2l3270 0F80                          i2l2552 1490                          i2l2544 143E  
                        i2l2554 149A                          i2l2546 145C                          i2l2538 1426  
                        i2l2714 103A                          i2l3274 0F96                          i2l2732 107C  
                        i2l2708 1014                          i2l2742 10A4                          i2l3278 0F9C  
                        i2l2728 106C                          i2l2738 1094                          i2l2756 11D0  
                        i2l2774 122A                          i2l2792 1278                          i2l2784 1252  
                        i2l2786 125E                          i2l2778 123A                          i2l2788 1262  
                        u240_41 11C6                          _INTCON 000FF2                          u234_41 100A  
                        u236_41 1024              __size_of_ReadUSART 001E            i2SetDCPWM1@dutycycle 0001  
                     ??i2_right 0034             _putcBluetoothString 1548                          _SPBRGH 000FB0  
            __size_of_SetDCPWM1 0048              __size_of_SetDCPWM2 0048                          i2_left 1E1E  
                __CFG_XINST$OFF 000000            i2SetDCPWM2@dutycycle 0001                          _Timer1 0053  
            __size_of_OpenUSART 0080   __size_of_SendBlueToothCommand 001A              __size_of_Pause_seg 0064  
                  ?_putSTRINGU1 00AE                  _PWM_DutyCycle1 1752                  _PWM_DutyCycle2 16D6  
                __CFG_STVREN$ON 000000                       ??___ftmul 00BE                       ??___fttol 00CB  
                     ??___lwdiv 00B0                       ??___lwmod 00B7                          _packet 005D  
                        _lenght 0059                          clear_0 19FA                          clear_1 1A06  
                        clear_2 1A12            ?_putcBluetoothString 00B3                       ??_go_back 00DF  
         ___ftmul@f3_as_product 00C2                    __pdataCOMRAM 005E               __end_ofi2___ftmul 10DE  
             __end_ofi2___fttol 128A                    __mediumconst 0000                          tblptrh 000FF7  
                        tblptrl 000FF6                          tblptru 000FF8             __size_of_TMRO_USART 0FF2  
                  ?i2_SetDCPWM1 0001                    ?i2_SetDCPWM2 0001               __end_of_PWM_init1 1D06  
             __end_of_PWM_init2 1CE0                 i2_motor_forward 1E56                __end_of_putcTxU1 1DC4  
                     ??_sprintf 00BE         __size_of_Comando_Tablet 0076               i2SetDCPWM1@DCycle 0005  
             i2SetDCPWM2@DCycle 0005               _motor_Backforward 1E4C                      __accesstop 0060  
       __end_of__initialization 1A50                 __CFG_PBADEN$OFF 000000             __size_ofi2___ftpack 00A8  
           __size_ofi2___lbtoft 0024              ?_motor_Backforward 0001            __size_of_go_straight 0012  
  PWM_DutyCycle2@percentageDuty 00DC                  i2___ftpack@arg 0001                  i2___ftpack@exp 0004  
                    ___lbtoft@c 00B7          __end_of_PWM_DutyCycle1 17CE          __end_of_PWM_DutyCycle2 1752  
                    ___ftmul@f1 00B8                      ___ftmul@f2 00BB                      ___fttol@f1 00C7  
                    _WriteUSART 1D8C                  __pcstackCOMRAM 0001             ??_motor_Backforward 00AC  
                  __pidataBANK0 1DA0                  _clrBufferUSART 1BD0                  i2___ftmul@cntr 001A  
                i2___ftmul@sign 001B                   __end_of_right 1DD6        __end_ofi2_PWM_DutyCycle1 1990  
      __end_ofi2_PWM_DutyCycle2 1926           ??_putcBluetoothString 00B5               __end_of_ReadUSART 1D48  
                i2___fttol@exp1 002A                  i2___fttol@lval 0026          __size_ofi2_go_straight 0012  
             __end_of_SetDCPWM1 1B46               __end_of_SetDCPWM2 1AFE                   ReadUSART@data 0001  
          putcBluetoothString@a 00B3            putcBluetoothString@i 00B7               __end_of_OpenUSART 16D6  
     __end_of_motor_Backforward 1E56                   UART1_Init@bdr 00B2               __end_of_Pause_seg 19F4  
                       ??_right 00DF                      __pbssBANK0 0060                      __pbssBANK1 0100  
                       ?i2_left 0001                       ?_OpenPWM1 0001                       ?_OpenPWM2 0001  
                     ?_Pause_ms 00AC          __end_of_clrBufferUSART 1C14                 ?_PWM_DutyCycle1 0001  
               ?_PWM_DutyCycle2 0001                    ??_UART1_Init 00B2             Inicializa_Driveby@i 00E0  
        __size_of_getCNY70Value 0112                         _CCP1CON 000FBD                         _CCP2CON 000FBA  
         __end_of_motor_forward 1E4C     SendBlueToothCommand@command 00B6                       ?___ftpack 00AC  
                     ?___lbtoft 00B4         __end_ofi2_motor_forward 1E60                putSTRINGU1@total 00B0  
                       _BT_Init 128A                         _SBUSART 0052              __end_of_UART1_Init 1D78  
               __CFG_VREGEN$OFF 000000                         i2_right 1E0C                   i2_go_straight 1E30  
                       _Comando 004D                         _Med_lsb 0042                         _Med_msb 0044  
                    ??_OpenPWM1 00AC                      ??_OpenPWM2 00AC                      ??_Pause_ms 00AE  
               __size_ofi2_left 0012                    ??_TMRO_USART 0034                         __Hparam 0000  
                       __Lparam 0000                 ?_clrBufferUSART 0001                     ?_WriteUSART 0001  
                     ?_putcTxU1 0001                         ___ftmul 0A3C                         ___fttol 0BA0  
                       ___lwdiv 17CE                         ___lwmod 1A56                    __psmallconst 0800  
                       __pcinit 19F4                    ??i2___ftpack 0006                    ??i2___lbtoft 000C  
                    ??___ftpack 00B1                      ??___lbtoft 00B7            __size_of_putSTRINGU1 00BE  
                  BT_Init@F5675 00E4         i2___ftmul@f3_as_product 0017                         __ramtop 0800  
                       __ptext0 14BE                         __ptext1 10DE                         __ptext2 1CBA  
                       __ptext3 1B8C                         __ptext4 1CE0                         __ptext5 1D78  
                       __ptext6 128A                         __ptext7 1D48                         __ptext8 1358  
                       __ptext9 1DB2  i2PWM_DutyCycle1@percentageDuty 0031                         _go_back 1DFA  
                       _comando 0097                         _countup 005E                         _dpowers 0801  
                     _T2CONbits 000FCA              __end_of_TMRO_USART 0FFA                  _Comando_Tablet 1846  
    __size_of_motor_Backforward 000A                         _sprintf 086C                   _getCNY70Value 0CEA  
                __pintcode_body 0F06            __size_ofi2_SetDCPWM1 003A            __size_ofi2_SetDCPWM2 003A  
          end_of_initialization 1A50                     _TramaTablet 0100       __size_of_putcBluetoothInt 0086  
                ?i2_go_straight 0001                         int_func 0F06              __end_ofi2___ftpack 14BE  
            __end_ofi2___lbtoft 1D2A       i2PWM_DutyCycle1@DutyCycle 002F                       _RCSTAbits 000FAB  
    __end_of_Inicializa_Driveby 11B6                         postdec1 000FE5                         postdec2 000FDD  
                       postinc0 000FEE                         postinc1 000FE6                         postinc2 000FDE  
                    ??_putcTxU1 00AD                      _num_med_hi 005A       i2PWM_DutyCycle2@DutyCycle 002F  
                     _PORTAbits 000F80                       _PORTBbits 000F81                       _PORTDbits 000F83  
              ?i2_motor_forward 0001          __end_of_Comando_Tablet 18BC    __end_of_SendBlueToothCommand 1D62  
                     _TRISBbits 000F93                       _TRISCbits 000F94                  ?_getCNY70Value 00DF  
           __size_of_WriteUSART 0014                       i2___ftmul 0FFA                       i2___fttol 11B6  
                     _PWM_init1 1CE0                       _PWM_init2 1CBA                       _TXSTAbits 000FAC  
               i2___ftpack@sign 0005                  __end_ofi2_left 1E30                     ___ftmul@exp 00C1  
             ?i2_PWM_DutyCycle1 0001               ?i2_PWM_DutyCycle2 0001                   __pidataCOMRAM 1E60  
            ??i2_PWM_DutyCycle1 002B              ??i2_PWM_DutyCycle2 002B             start_initialization 19F4  
                     Pause_ms@i 00AF                       Pause_ms@x 00AC                 ?_Comando_Tablet 0001  
                     _ReadUSART 1D2A                       _SetDCPWM1 1AFE                       _SetDCPWM2 1AB6  
               SetDCPWM1@DCycle 00B0                 SetDCPWM2@DCycle 00B0                 i2___fttol@sign1 0025  
                     _DutyCycle 0060                 ??i2_go_straight 0034                      ?i2___ftmul 000D  
                    ?i2___fttol 001C                   ??_go_straight 00DF                      ?_PWM_init1 0001  
                    ?_PWM_init2 0001            Comando_Tablet@sensed 00E2                       _OpenUSART 1656  
              ??_PWM_DutyCycle1 00D6                ??_PWM_DutyCycle2 00D6                       _Pause_seg 1990  
                      ??i2_left 0034     __end_of_putcBluetoothString 15D0               __size_of_OpenPWM1 0014  
             __size_of_OpenPWM2 0044               __size_of_Pause_ms 0046                     __pdataBANK0 00E4  
              __CFG_LPT1OSC$OFF 000000                  _num_med_medium 005C               __size_of___ftpack 010A  
             __size_of___lbtoft 0032                     __pbssCOMRAM 0042                 ??_getCNY70Value 00E1  
                    ?_ReadUSART 0001                        ?_BT_Init 0001                   __pcstackBANK0 00AC  
                    ?_SetDCPWM1 00AC                      ?_SetDCPWM2 00AC             __end_of__stringdata 086A  
              _putcBluetoothInt 15D0                        ?i2_right 0001                      ?_OpenUSART 00AC  
                   sprintf@_val 00C4                     sprintf@flag 00C2                ??_clrBufferUSART 00AC  
                    ?_Pause_seg 0001                     sprintf@prec 00C3                       _cleanBfer 0064  
           __end_of_go_straight 1DFA                ___lwdiv@dividend 00AC                    ??_WriteUSART 00AC  
          _SendBlueToothCommand 1D48                       __pintcode 0008                        ?___ftmul 00B8  
                      ?___fttol 00C7                        ?___lwdiv 00AC                        ?___lwmod 00B3  
             putcTxU1@character 00AD               __size_of_putcTxU1 0012                        ?_go_back 0001  
                     _contador2 0057                     __smallconst 0800       SendBlueToothCommand@total 00B8  
                  _TamanhoTrama 0046                ___lwdiv@quotient 00B0                        ?_sprintf 00B8  
                   ??i2___ftmul 0013                     ??i2___fttol 0020                  __size_of_right 0012  
            __end_of_WriteUSART 1DA0                     ??_PWM_init1 00AD                     ??_PWM_init2 00AF  
  PWM_DutyCycle1@percentageDuty 00DC          __size_of_motor_forward 000A                   _ComandoTablet 004E  
                      _PIE1bits 000F9D                        i2u232_45 1C58                        i2u233_45 1C1E  
                      i2u242_40 11EE                        i2u242_45 11E6                        i2u323_40 0F9A  
                      i2u237_40 102C                        i2u245_40 1240                        _PIR1bits 000F9E  
         ?_SendBlueToothCommand 00B6                __CFG_WDTPS$32768 000000                   ??_putSTRINGU1 00B2  
                    _ADCON1bits 000FC1                     __stringdata 080B                        _CheckSum 004A  
                   ??_ReadUSART 0001              _Inicializa_Driveby 10DE                   ??i2_SetDCPWM1 0003  
                 ??i2_SetDCPWM2 0003                     ??_SetDCPWM1 00AE                     ??_SetDCPWM2 00AE  
              __size_of_BT_Init 00CE                     _INTCON2bits 000FF1                     _INTCON3bits 000FF0  
                     copy_data0 1A2C                        _EntTrama 004F             ?_Inicializa_Driveby 0001  
                 _BluetoothDato 0065                     _go_straight 1DE8                     ??_OpenUSART 00AE  
            SetDCPWM1@dutycycle 00AC                     ??_Pause_seg 00B1                __size_ofi2_right 0012  
               OpenUSART@config 00B1                    _Timer2Config 00AB                        _OpenPWM1 1D78  
                      _OpenPWM2 1B8C                        _Pause_ms 1B46                        __Hrparam 0000  
                      __Lrparam 0000              SetDCPWM2@dutycycle 00AC            ??_Inicializa_Driveby 00DF  
              PWM_DutyCycle1@DC 00DD                PWM_DutyCycle2@DC 00DD                __size_of___ftmul 0164  
              __size_of___fttol 014A                __size_of___lwdiv 0078                __size_of___lwmod 0060  
              ??_Comando_Tablet 00E2                   _motor_forward 1E42                        ___ftpack 0DFC  
                      ___lbtoft 1C88                  OpenPWM2@ccp2mx 00AE           __CFG_FOSC$INTOSCIO_EC 000000  
           __end_of_putSTRINGU1 1416                __size_of_go_back 0012                  OpenPWM1@period 00AC  
                OpenPWM2@period 00AD                 ___lwdiv@divisor 00AE                 ___lwdiv@counter 00B2  
                      __ptext10 1990                        __ptext11 1B46                        __ptext20 1656  
                      __ptext12 1846                        __ptext21 0CEA                        __ptext13 1548  
                      __ptext30 1752                        __ptext22 1DC4                        __ptext14 15D0  
                      __ptext31 1C88                        __ptext23 1DD6                        __ptext15 086C  
                      __ptext40 1E30                        __ptext32 0BA0                        __ptext24 1DE8  
                      __ptext16 1A56                        __ptext41 1E56                        __ptext33 0A3C  
                      __ptext25 1E42                        __ptext17 17CE                        __ptext50 1D2A  
                      __ptext42 18BC                        __ptext34 0DFC                        __ptext26 1DFA  
                      __ptext18 1D8C                        __ptext43 1C14                        __ptext35 1AFE  
                      __ptext27 1E4C                        __ptext19 1D62                        __ptext44 1926  
                      __ptext36 1BD0                        __ptext28 16D6                        __ptext45 1D06  
                      __ptext29 1AB6                        __ptext46 11B6                        __ptext38 1E0C  
                      __ptext47 0FFA                        __ptext39 1E1E                        __ptext48 1416  
                      __ptext49 1C4E        __size_ofi2_motor_forward 000A                 PWM_init1@period 00AD  
               PWM_init2@period 00AF                        _contador 0056       __size_ofi2_PWM_DutyCycle1 006A  
     __size_ofi2_PWM_DutyCycle2 006A                __size_of_sprintf 01D0             __end_ofi2_SetDCPWM1 1C88  
           __end_ofi2_SetDCPWM2 1C4E                   __size_of_main 008A                   __size_of_left 0012  
        ??_SendBlueToothCommand 00BA                        _putcTxU1 1DB2                   BT_Init@nameBT 00BA  
                ?_motor_forward 0001        __end_of_putcBluetoothInt 1656           __CFG_CPUDIV$OSC1_PLL2 000000  
                    _INTCONbits 000FF2                  OpenUSART@spbrg 00AC               putcBluetoothInt@a 00CA  
             putcBluetoothInt@i 00E0               putcBluetoothInt@s 00CC                        intlevel2 0000  
                     sprintf@ap 00C0                       sprintf@sp 00B8           __end_ofi2_go_straight 1E42  
              ___lwmod@dividend 00B3                      _OSCCONbits 000FD3                      _UART1_Init 1D62  
                   _putSTRINGU1 1358    __size_of_putcBluetoothString 0088                     _num_med_low 005B  
                      sprintf@c 00C9                        sprintf@f 00BA                 ___lwmod@divisor 00B5  
i2PWM_DutyCycle2@percentageDuty 0031                 ___lwmod@counter 00B7                     i2_SetDCPWM1 1C4E  
                   i2_SetDCPWM2 1C14           __end_of_getCNY70Value 0DFC               ??i2_motor_forward 0001  
                  _USART_Status 0054                      _TMRO_USART 0008  
